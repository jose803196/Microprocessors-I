

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 16 11:18:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	_firma_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18LF45K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataBANK0
    81   002020                     __pidataBANK0:
    82                           	callstack 0
    83                           
    84                           ;initializer for _t_ms
    85   002020  0064               	dw	100
    86                           
    87                           	psect	smallconst
    88   001252                     __psmallconst:
    89                           	callstack 0
    90   001252  00                 	db	0
    91   001253                     _segmentos:
    92                           	callstack 0
    93   001253  5F                 	db	95
    94   001254  41                 	db	65
    95   001255  9B                 	db	155
    96   001256  D3                 	db	211
    97   001257  C5                 	db	197
    98   001258  D6                 	db	214
    99   001259  DE                 	db	222
   100   00125A  43                 	db	67
   101   00125B  DF                 	db	223
   102   00125C  D7                 	db	215
   103   00125D  CF                 	db	207
   104   00125E  DC                 	db	220
   105   00125F  1E                 	db	30
   106   001260  D9                 	db	217
   107   001261  9E                 	db	158
   108   001262  8E                 	db	142
   109   001263                     __end_of_segmentos:
   110                           	callstack 0
   111   000000                     _firma_absaddr	set	4102
   112   000000                     _firma_absaddr	set	4102
   113   001263                     STR_7:
   114   001263  45                 	db	69	;'E'
   115   001264  6C                 	db	108	;'l'
   116   001265  20                 	db	32
   117   001266  74                 	db	116	;'t'
   118   001267  69                 	db	105	;'i'
   119   001268  65                 	db	101	;'e'
   120   001269  6D                 	db	109	;'m'
   121   00126A  70                 	db	112	;'p'
   122   00126B  6F                 	db	111	;'o'
   123   00126C  20                 	db	32
   124   00126D  61                 	db	97	;'a'
   125   00126E  63                 	db	99	;'c'
   126   00126F  74                 	db	116	;'t'
   127   001270  75                 	db	117	;'u'
   128   001271  61                 	db	97	;'a'
   129   001272  6C                 	db	108	;'l'
   130   001273  20                 	db	32
   131   001274  65                 	db	101	;'e'
   132   001275  73                 	db	115	;'s'
   133   001276  20                 	db	32
   134   001277  25                 	db	37
   135   001278  64                 	db	100	;'d'
   136   001279  00                 	db	0
   137   00127A                     STR_8:
   138   00127A  45                 	db	69	;'E'
   139   00127B  6C                 	db	108	;'l'
   140   00127C  20                 	db	32
   141   00127D  6E                 	db	110	;'n'
   142   00127E  75                 	db	117	;'u'
   143   00127F  65                 	db	101	;'e'
   144   001280  76                 	db	118	;'v'
   145   001281  6F                 	db	111	;'o'
   146   001282  20                 	db	32
   147   001283  74                 	db	116	;'t'
   148   001284  69                 	db	105	;'i'
   149   001285  65                 	db	101	;'e'
   150   001286  6D                 	db	109	;'m'
   151   001287  70                 	db	112	;'p'
   152   001288  6F                 	db	111	;'o'
   153   001289  20                 	db	32
   154   00128A  65                 	db	101	;'e'
   155   00128B  73                 	db	115	;'s'
   156   00128C  20                 	db	32
   157   00128D  25                 	db	37
   158   00128E  64                 	db	100	;'d'
   159   00128F  00                 	db	0
   160   001290                     STR_2:
   161   001290  52                 	db	82	;'R'
   162   001291  65                 	db	101	;'e'
   163   001292  63                 	db	99	;'c'
   164   001293  69                 	db	105	;'i'
   165   001294  62                 	db	98	;'b'
   166   001295  69                 	db	105	;'i'
   167   001296  64                 	db	100	;'d'
   168   001297  6F                 	db	111	;'o'
   169   001298  3A                 	db	58	;':'
   170   001299  20                 	db	32
   171   00129A  00                 	db	0
   172   00129B                     STR_1:
   173   00129B  74                 	db	116	;'t'
   174   00129C  69                 	db	105	;'i'
   175   00129D  65                 	db	101	;'e'
   176   00129E  6D                 	db	109	;'m'
   177   00129F  70                 	db	112	;'p'
   178   0012A0  6F                 	db	111	;'o'
   179   0012A1  3D                 	db	61	;'='
   180   0012A2  3F                 	db	63	;'?'
   181   0012A3  00                 	db	0
   182   0012A4                     STR_5:
   183   0012A4  74                 	db	116	;'t'
   184   0012A5  69                 	db	105	;'i'
   185   0012A6  65                 	db	101	;'e'
   186   0012A7  6D                 	db	109	;'m'
   187   0012A8  70                 	db	112	;'p'
   188   0012A9  6F                 	db	111	;'o'
   189   0012AA  3D                 	db	61	;'='
   190   0012AB  00                 	db	0
   191   0012AC                     STR_4:
   192   0012AC  65                 	db	101	;'e'
   193   0012AD  72                 	db	114	;'r'
   194   0012AE  72                 	db	114	;'r'
   195   0012AF  6F                 	db	111	;'o'
   196   0012B0  72                 	db	114	;'r'
   197   0012B1  00                 	db	0
   198   0012B2                     STR_3:
   199   0012B2  0D                 	db	13
   200   0012B3  0A                 	db	10
   201   0012B4  00                 	db	0
   202   0012B5  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           	psect	_firma_text
   205   001006                     __p_firma_text:
   206                           	callstack 0
   207   001006                     _firma:
   208                           	callstack 0
   209   001006  600D               	dw	24589
   210   001008                     __end_of_firma:
   211                           	callstack 0
   212   000000                     _TXREG	set	4013
   213   000000                     _TXSTAbits	set	4012
   214   000000                     _ANSELAbits	set	3931
   215   000000                     _TXSTA1bits	set	4012
   216   000000                     _INTCON	set	4082
   217   000000                     _ANSELA	set	3931
   218   000000                     _LATAbits	set	3977
   219   000000                     _LATBbits	set	3978
   220   000000                     _LATCbits	set	3979
   221   000000                     _LATEbits	set	3981
   222   000000                     _PIR1bits	set	3998
   223   000000                     _IPR1bits	set	3999
   224   000000                     _RCSTA1bits	set	4011
   225   000000                     _RCREG1	set	4014
   226   000000                     _BAUDCON1	set	4024
   227   000000                     _SPBRGH1	set	4016
   228   000000                     _SPBRG1	set	4015
   229   000000                     _RCONbits	set	4048
   230   000000                     _OSCCON2	set	4050
   231   000000                     _OSCCON	set	4051
   232   000000                     _TMR0L	set	4054
   233   000000                     _TMR0H	set	4055
   234   000000                     _INTCONbits	set	4082
   235   000000                     _TRISAbits	set	3986
   236   000000                     _OSCTUNE	set	3995
   237   000000                     _INTCON2bits	set	4081
   238   000000                     _T0CONbits	set	4053
   239   000000                     _PIE1bits	set	3997
   240   000000                     _ANSELC	set	3933
   241   000000                     _TRISE	set	3990
   242   000000                     _TRISDbits	set	3989
   243   000000                     _TRISCbits	set	3988
   244   000000                     _TRISBbits	set	3987
   245   000000                     _VREFCON2bits	set	3963
   246   000000                     _VREFCON1bits	set	3964
   247   000000                     _ANSELE	set	3935
   248   000000                     _ANSELD	set	3934
   249                           
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   001EBE                     __pcinit:
   254                           	callstack 0
   255   001EBE                     start_initialization:
   256                           	callstack 0
   257   001EBE                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK0 (2 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262   001EBE  0E20               	movlw	low __pidataBANK0
   263   001EC0  6EF6               	movwf	tblptrl,c
   264   001EC2  0E20               	movlw	high __pidataBANK0
   265   001EC4  6EF7               	movwf	tblptrh,c
   266   001EC6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267   001EC8  6EF8               	movwf	tblptru,c
   268   001ECA  0009               	tblrd		*+	;fetch initializer
   269   001ECC  CFF5 F0C3          	movff	tablat,__pdataBANK0
   270   001ED0  0009               	tblrd		*+	;fetch initializer
   271   001ED2  CFF5 F0C4          	movff	tablat,__pdataBANK0+1
   272                           
   273                           ; Clear objects allocated to BANK0 (37 bytes)
   274   001ED6  EE00  F09E         	lfsr	0,__pbssBANK0
   275   001EDA  0E25               	movlw	37
   276   001EDC                     clear_0:
   277   001EDC  6AEE               	clrf	postinc0,c
   278   001EDE  06E8               	decf	wreg,f,c
   279   001EE0  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to COMRAM (20 bytes)
   282   001EE2  EE00  F037         	lfsr	0,__pbssCOMRAM
   283   001EE6  0E14               	movlw	20
   284   001EE8                     clear_1:
   285   001EE8  6AEE               	clrf	postinc0,c
   286   001EEA  06E8               	decf	wreg,f,c
   287   001EEC  E1FD               	bnz	clear_1
   288   001EEE                     end_of_initialization:
   289                           	callstack 0
   290   001EEE                     __end_of__initialization:
   291                           	callstack 0
   292   001EEE  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   293   001EF0  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   294   001EF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   295   001EF4  6EF8               	movwf	tblptru,c
   296   001EF6  0100               	movlb	0
   297   001EF8  EF09  F010         	goto	_main	;jump to C main() function
   298                           
   299                           	psect	bssCOMRAM
   300   000037                     __pbssCOMRAM:
   301                           	callstack 0
   302   000037                     _width:
   303                           	callstack 0
   304   000037                     	ds	2
   305   000039                     _prec:
   306                           	callstack 0
   307   000039                     	ds	2
   308   00003B                     	ds	2
   309   00003D                     _flags:
   310                           	callstack 0
   311   00003D                     	ds	1
   312   00003E                     _i:
   313                           	callstack 0
   314   00003E                     	ds	1
   315   00003F                     _arreglo:
   316                           	callstack 0
   317   00003F                     	ds	12
   318                           
   319                           	psect	bssBANK0
   320   00009E                     __pbssBANK0:
   321                           	callstack 0
   322   00009E                     _dbuf:
   323                           	callstack 0
   324   00009E                     	ds	32
   325   0000BE                     lint@cont2:
   326                           	callstack 0
   327   0000BE                     	ds	2
   328   0000C0                     lint@cont1:
   329                           	callstack 0
   330   0000C0                     	ds	2
   331   0000C2                     lint@rota:
   332                           	callstack 0
   333   0000C2                     	ds	1
   334                           
   335                           	psect	dataBANK0
   336   0000C3                     __pdataBANK0:
   337                           	callstack 0
   338   0000C3                     _t_ms:
   339                           	callstack 0
   340   0000C3                     	ds	2
   341                           
   342                           	psect	cstackBANK1
   343   000100                     __pcstackBANK1:
   344                           	callstack 0
   345   000100                     ?___awdiv:
   346                           	callstack 0
   347   000100                     shift@k:
   348                           	callstack 0
   349   000100                     ___awdiv@dividend:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x0
   353   000100                     	ds	1
   354   000101                     shift@dato:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x1
   358   000101                     	ds	1
   359   000102                     shift@n:
   360                           	callstack 0
   361   000102                     ___awdiv@divisor:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x2
   365   000102                     	ds	2
   366   000104                     ___awdiv@counter:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x4
   370   000104                     	ds	1
   371   000105                     ___awdiv@sign:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x5
   375   000105                     	ds	1
   376   000106                     ___awdiv@quotient:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x6
   380   000106                     	ds	2
   381   000108                     ?___awmod:
   382                           	callstack 0
   383   000108                     ___awmod@dividend:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x8
   387   000108                     	ds	2
   388   00010A                     ___awmod@divisor:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xA
   392   00010A                     	ds	2
   393   00010C                     ___awmod@counter:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xC
   397   00010C                     	ds	1
   398   00010D                     ___awmod@sign:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xD
   402   00010D                     	ds	1
   403   00010E                     ??_lint:
   404                           
   405                           ; 1 bytes @ 0xE
   406   00010E                     	ds	8
   407   000116                     
   408                           ; 1 bytes @ 0x16
   409                           
   410                           	psect	cstackBANK0
   411   000060                     __pcstackBANK0:
   412                           	callstack 0
   413   000060                     netw_procss@message:
   414                           	callstack 0
   415                           
   416                           ; 30 bytes @ 0x0
   417   000060                     	ds	30
   418   00007E                     netw_procss@mensaje:
   419                           	callstack 0
   420                           
   421                           ; 30 bytes @ 0x1E
   422   00007E                     	ds	30
   423   00009C                     netw_procss@tiempo_nuevo:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x3C
   427   00009C                     	ds	2
   428                           
   429                           	psect	cstackCOMRAM
   430   000001                     __pcstackCOMRAM:
   431                           	callstack 0
   432   000001                     ?_strncmp:
   433                           	callstack 0
   434   000001                     ?_strcmp:
   435                           	callstack 0
   436   000001                     ?___wmul:
   437                           	callstack 0
   438   000001                     ?i2___awdiv:
   439                           	callstack 0
   440   000001                     ?i2___awmod:
   441                           	callstack 0
   442   000001                     memset@dest:
   443                           	callstack 0
   444   000001                     strcmp@l:
   445                           	callstack 0
   446   000001                     strncmp@l:
   447                           	callstack 0
   448   000001                     netw_trans@mensaje:
   449                           	callstack 0
   450   000001                     ___wmul@multiplier:
   451                           	callstack 0
   452   000001                     fputc@c:
   453                           	callstack 0
   454   000001                     i2___awdiv@dividend:
   455                           	callstack 0
   456   000001                     i2___awmod@dividend:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x0
   460   000001                     	ds	1
   461   000002                     strcmp@r:
   462                           	callstack 0
   463   000002                     strncmp@r:
   464                           	callstack 0
   465   000002                     memset@c:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1
   469   000002                     	ds	1
   470   000003                     ??_strcmp:
   471   000003                     fputc@fp:
   472                           	callstack 0
   473   000003                     ___wmul@multiplicand:
   474                           	callstack 0
   475   000003                     strncmp@n:
   476                           	callstack 0
   477   000003                     i2___awdiv@divisor:
   478                           	callstack 0
   479   000003                     i2___awmod@divisor:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2
   483   000003                     	ds	1
   484   000004                     ??_fputc:
   485   000004                     memset@n:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x3
   489   000004                     	ds	1
   490   000005                     ??_strncmp:
   491   000005                     i2___awdiv@counter:
   492                           	callstack 0
   493   000005                     i2___awmod@counter:
   494                           	callstack 0
   495   000005                     ___wmul@product:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x4
   499   000005                     	ds	1
   500   000006                     memset@p:
   501                           	callstack 0
   502   000006                     i2___awdiv@sign:
   503                           	callstack 0
   504   000006                     i2___awmod@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x5
   508   000006                     	ds	1
   509   000007                     ?_atoi:
   510                           	callstack 0
   511   000007                     ?_abs:
   512                           	callstack 0
   513   000007                     atoi@s:
   514                           	callstack 0
   515   000007                     abs@a:
   516                           	callstack 0
   517   000007                     i2___awdiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x6
   521   000007                     	ds	2
   522   000009                     ??_atoi:
   523   000009                     ??_abs:
   524                           
   525                           ; 1 bytes @ 0x8
   526   000009                     	ds	2
   527   00000B                     atoi@neg:
   528                           	callstack 0
   529   00000B                     vfpfcnvrt@fp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0xA
   533   00000B                     	ds	1
   534   00000C                     vfpfcnvrt@fmt:
   535                           	callstack 0
   536   00000C                     atoi@n:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xB
   540   00000C                     	ds	1
   541   00000D                     vfpfcnvrt@ap:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0xC
   545   00000D                     	ds	1
   546   00000E                     ??_vfpfcnvrt:
   547                           
   548                           ; 1 bytes @ 0xD
   549   00000E                     	ds	1
   550   00000F                     vfpfcnvrt@done:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0xE
   554   00000F                     	ds	1
   555   000010                     vfpfcnvrt@cp:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xF
   559   000010                     	ds	1
   560   000011                     vfpfcnvrt@convarg:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x10
   564   000011                     	ds	4
   565   000015                     vfpfcnvrt@c:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x14
   569   000015                     	ds	1
   570   000016                     ?_vfprintf:
   571                           	callstack 0
   572   000016                     vfprintf@fp:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x15
   576   000016                     	ds	1
   577   000017                     vfprintf@fmt:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x16
   581   000017                     	ds	1
   582   000018                     vfprintf@ap:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x17
   586   000018                     	ds	1
   587   000019                     vfprintf@cfmt:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x18
   591   000019                     	ds	1
   592   00001A                     ?_sprintf:
   593                           	callstack 0
   594   00001A                     sprintf@s:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x19
   598   00001A                     	ds	1
   599   00001B                     sprintf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1A
   603   00001B                     	ds	3
   604   00001E                     sprintf@ap:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x1D
   608   00001E                     	ds	1
   609   00001F                     sprintf@f:
   610                           	callstack 0
   611                           
   612                           ; 12 bytes @ 0x1E
   613   00001F                     	ds	12
   614   00002B                     ??_hint:
   615                           
   616                           ; 1 bytes @ 0x2A
   617   00002B                     	ds	11
   618   000036                     hint@leer:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x35
   622   000036                     	ds	1
   623                           
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 178 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         0       0       0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels required when called: 10
   649 ;; This function calls:
   650 ;;		_config
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   002012                     __ptext0:
   658                           	callstack 0
   659   002012                     _main:
   660                           	callstack 21
   661   002012                     
   662                           ;main.c: 179:     config();
   663   002012  EC7B  F00E         	call	_config	;wreg free
   664   002016                     
   665                           ;main.c: 181:     LATAbits.LATA3=1;
   666   002016  8689               	bsf	137,3,c	;volatile
   667   002018                     l103:
   668   002018  EF0C  F010         	goto	l103
   669   00201C  EF27  F009         	goto	start
   670   002020                     __end_of_main:
   671                           	callstack 0
   672                           
   673 ;; *************** function _config *****************
   674 ;; Defined at:
   675 ;;		line 14 in file "config.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   689 ;;      Params:         0       0       0       0       0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; Hardware stack levels required when called: 9
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text1
   704   001CF6                     __ptext1:
   705                           	callstack 0
   706   001CF6                     _config:
   707                           	callstack 21
   708   001CF6                     
   709                           ;config.c: 18:         OSCCON=0x70;
   710   001CF6  0E70               	movlw	112
   711   001CF8  6ED3               	movwf	211,c	;volatile
   712                           
   713                           ;config.c: 20:   OSCCON2=0x10;
   714   001CFA  0E10               	movlw	16
   715   001CFC  6ED2               	movwf	210,c	;volatile
   716                           
   717                           ;config.c: 21:   OSCTUNE=0x80;
   718   001CFE  0E80               	movlw	128
   719   001D00  6E9B               	movwf	155,c	;volatile
   720                           
   721                           ;config.c: 28:     ANSELA=0;
   722   001D02  0E00               	movlw	0
   723   001D04  010F               	movlb	15	; () banked
   724   001D06  6F5B               	movwf	91,b	;volatile
   725   001D08                     
   726                           ; BSR set to: 15
   727                           ;config.c: 29:     ANSELAbits.ANSA2=1;
   728   001D08  855B               	bsf	91,2,b	;volatile
   729   001D0A                     
   730                           ; BSR set to: 15
   731                           ;config.c: 31:     TRISAbits.RA0=0;
   732   001D0A  9092               	bcf	146,0,c	;volatile
   733   001D0C                     
   734                           ; BSR set to: 15
   735                           ;config.c: 32:     TRISAbits.RA3=0;
   736   001D0C  9692               	bcf	146,3,c	;volatile
   737   001D0E                     
   738                           ; BSR set to: 15
   739                           ;config.c: 33:     TRISAbits.RA1=0;
   740   001D0E  9292               	bcf	146,1,c	;volatile
   741   001D10                     
   742                           ; BSR set to: 15
   743                           ;config.c: 34:     TRISAbits.RA4=0;
   744   001D10  9892               	bcf	146,4,c	;volatile
   745   001D12                     
   746                           ; BSR set to: 15
   747                           ;config.c: 35:     TRISAbits.RA5=0;
   748   001D12  9A92               	bcf	146,5,c	;volatile
   749   001D14                     
   750                           ; BSR set to: 15
   751                           ;config.c: 36:      TRISAbits.RA6=0;
   752   001D14  9C92               	bcf	146,6,c	;volatile
   753   001D16                     
   754                           ; BSR set to: 15
   755                           ;config.c: 37:     TRISBbits.RB0=1;
   756   001D16  8093               	bsf	147,0,c	;volatile
   757   001D18                     
   758                           ; BSR set to: 15
   759                           ;config.c: 38:     TRISBbits.RB5=0;
   760   001D18  9A93               	bcf	147,5,c	;volatile
   761   001D1A                     
   762                           ; BSR set to: 15
   763                           ;config.c: 39:     TRISBbits.RB6=0;
   764   001D1A  9C93               	bcf	147,6,c	;volatile
   765                           
   766                           ;config.c: 41:     ANSELC=0;
   767   001D1C  0E00               	movlw	0
   768   001D1E  6F5D               	movwf	93,b	;volatile
   769   001D20                     
   770                           ; BSR set to: 15
   771                           ;config.c: 42:     TRISCbits.RC0=0;
   772   001D20  9094               	bcf	148,0,c	;volatile
   773   001D22                     
   774                           ; BSR set to: 15
   775                           ;config.c: 43:     TRISCbits.RC1=0;
   776   001D22  9294               	bcf	148,1,c	;volatile
   777                           
   778                           ;config.c: 47:     ANSELD=0;
   779   001D24  0E00               	movlw	0
   780   001D26  6F5E               	movwf	94,b	;volatile
   781   001D28                     
   782                           ; BSR set to: 15
   783                           ;config.c: 49:     TRISDbits.RD4=0;
   784   001D28  9895               	bcf	149,4,c	;volatile
   785   001D2A                     
   786                           ; BSR set to: 15
   787                           ;config.c: 50:     TRISDbits.RD5=0;
   788   001D2A  9A95               	bcf	149,5,c	;volatile
   789   001D2C                     
   790                           ; BSR set to: 15
   791                           ;config.c: 51:     TRISDbits.RD6=0;
   792   001D2C  9C95               	bcf	149,6,c	;volatile
   793   001D2E                     
   794                           ; BSR set to: 15
   795                           ;config.c: 52:     TRISDbits.RD7=0;
   796   001D2E  9E95               	bcf	149,7,c	;volatile
   797   001D30                     
   798                           ; BSR set to: 15
   799                           ;config.c: 54:     TRISDbits.RD3=1;
   800   001D30  8695               	bsf	149,3,c	;volatile
   801   001D32                     
   802                           ; BSR set to: 15
   803                           ;config.c: 55:     TRISDbits.RD2=1;
   804   001D32  8495               	bsf	149,2,c	;volatile
   805   001D34                     
   806                           ; BSR set to: 15
   807                           ;config.c: 56:     TRISDbits.RD1=1;
   808   001D34  8295               	bsf	149,1,c	;volatile
   809   001D36                     
   810                           ; BSR set to: 15
   811                           ;config.c: 57:     TRISDbits.RD0=1;
   812   001D36  8095               	bsf	149,0,c	;volatile
   813                           
   814                           ;config.c: 59:     ANSELE=0;
   815   001D38  0E00               	movlw	0
   816   001D3A  6F5F               	movwf	95,b	;volatile
   817                           
   818                           ;config.c: 61:     TRISE=0;
   819   001D3C  0E00               	movlw	0
   820   001D3E  6E96               	movwf	150,c	;volatile
   821                           
   822                           ;config.c: 66:     INTCON=0;
   823   001D40  0E00               	movlw	0
   824   001D42  6EF2               	movwf	242,c	;volatile
   825   001D44                     
   826                           ; BSR set to: 15
   827                           ;config.c: 67:     RCONbits.IPEN=1;
   828   001D44  8ED0               	bsf	208,7,c	;volatile
   829   001D46                     
   830                           ; BSR set to: 15
   831                           ;config.c: 68:     INTCONbits.INT0E=1;
   832   001D46  88F2               	bsf	242,4,c	;volatile
   833   001D48                     
   834                           ; BSR set to: 15
   835                           ;config.c: 69:     INTCON2bits.INTEDG0=0;
   836   001D48  9CF1               	bcf	241,6,c	;volatile
   837   001D4A                     
   838                           ; BSR set to: 15
   839                           ;config.c: 70:     INTCONbits.GIEH=1;
   840   001D4A  8EF2               	bsf	242,7,c	;volatile
   841   001D4C                     
   842                           ; BSR set to: 15
   843                           ;config.c: 71:     INTCONbits.GIEL=1;
   844   001D4C  8CF2               	bsf	242,6,c	;volatile
   845   001D4E                     
   846                           ; BSR set to: 15
   847                           ;config.c: 72:     INTCONbits.T0IE=1;
   848   001D4E  8AF2               	bsf	242,5,c	;volatile
   849   001D50                     
   850                           ; BSR set to: 15
   851                           ;config.c: 73:     INTCON2bits.T0IP=0;
   852   001D50  94F1               	bcf	241,2,c	;volatile
   853   001D52                     
   854                           ; BSR set to: 15
   855                           ;config.c: 74:     PIE1bits.RCIE=1;
   856   001D52  8A9D               	bsf	157,5,c	;volatile
   857   001D54                     
   858                           ; BSR set to: 15
   859                           ;config.c: 75:     IPR1bits.RCIP=1;
   860   001D54  8A9F               	bsf	159,5,c	;volatile
   861   001D56                     
   862                           ; BSR set to: 15
   863                           ;config.c: 79:     T0CONbits.T08BIT=0;
   864   001D56  9CD5               	bcf	213,6,c	;volatile
   865   001D58                     
   866                           ; BSR set to: 15
   867                           ;config.c: 80:     T0CONbits.T0CS=0;
   868   001D58  9AD5               	bcf	213,5,c	;volatile
   869   001D5A                     
   870                           ; BSR set to: 15
   871                           ;config.c: 81:     T0CONbits.PSA=0;
   872   001D5A  96D5               	bcf	213,3,c	;volatile
   873                           
   874                           ;config.c: 82:     T0CONbits.T0PS=0;
   875   001D5C  0EF8               	movlw	-8
   876   001D5E  16D5               	andwf	213,f,c	;volatile
   877                           
   878                           ;config.c: 86:     TMR0H=0x8A;;
   879   001D60  0E8A               	movlw	138
   880   001D62  6ED7               	movwf	215,c	;volatile
   881                           
   882                           ;config.c: 87:     TMR0L=0xB0;;
   883   001D64  0EB0               	movlw	176
   884   001D66  6ED6               	movwf	214,c	;volatile
   885   001D68                     
   886                           ; BSR set to: 15
   887                           ;config.c: 93:     VREFCON1bits.DACLPS=1;
   888   001D68  8C7C               	bsf	124,6,c	;volatile
   889                           
   890                           ;config.c: 94:     VREFCON1bits.DACPSS=0x00;
   891   001D6A  0EF3               	movlw	-13
   892   001D6C  167C               	andwf	124,f,c	;volatile
   893   001D6E                     
   894                           ; BSR set to: 15
   895                           ;config.c: 95:     VREFCON1bits.DACOE=1;
   896   001D6E  8A7C               	bsf	124,5,c	;volatile
   897   001D70                     
   898                           ; BSR set to: 15
   899                           ;config.c: 96:     VREFCON1bits.DACEN=0;
   900   001D70  9E7C               	bcf	124,7,c	;volatile
   901                           
   902                           ;config.c: 97:     VREFCON2bits.DACR=0x0f;
   903   001D72  507B               	movf	123,w,c	;volatile
   904   001D74  0BE0               	andlw	-32
   905   001D76  090F               	iorlw	15
   906   001D78  6E7B               	movwf	123,c	;volatile
   907                           
   908                           ;config.c: 101:     SPBRG1 = 0x4d;
   909   001D7A  0E4D               	movlw	77
   910   001D7C  6EAF               	movwf	175,c	;volatile
   911                           
   912                           ;config.c: 102:     SPBRGH1 = 0;
   913   001D7E  0E00               	movlw	0
   914   001D80  6EB0               	movwf	176,c	;volatile
   915   001D82                     
   916                           ; BSR set to: 15
   917                           ;config.c: 103:     TXSTA1bits.BRGH=0;
   918   001D82  94AC               	bcf	172,2,c	;volatile
   919   001D84                     
   920                           ; BSR set to: 15
   921                           ;config.c: 104:     TXSTA1bits.TX9=0;
   922   001D84  9CAC               	bcf	172,6,c	;volatile
   923   001D86                     
   924                           ; BSR set to: 15
   925                           ;config.c: 105:     TXSTA1bits.TXEN=1;
   926   001D86  8AAC               	bsf	172,5,c	;volatile
   927   001D88                     
   928                           ; BSR set to: 15
   929                           ;config.c: 106:     TXSTA1bits.SYNC=0;
   930   001D88  98AC               	bcf	172,4,c	;volatile
   931   001D8A                     
   932                           ; BSR set to: 15
   933                           ;config.c: 107:     RCSTA1bits.RX9=0;
   934   001D8A  9CAB               	bcf	171,6,c	;volatile
   935   001D8C                     
   936                           ; BSR set to: 15
   937                           ;config.c: 108:     RCSTA1bits.CREN=1;
   938   001D8C  88AB               	bsf	171,4,c	;volatile
   939                           
   940                           ;config.c: 109:     BAUDCON1=0x40;
   941   001D8E  0E40               	movlw	64
   942   001D90  6EB8               	movwf	184,c	;volatile
   943   001D92                     
   944                           ; BSR set to: 15
   945                           ;config.c: 110:     RCSTA1bits.SPEN=1;
   946   001D92  8EAB               	bsf	171,7,c	;volatile
   947   001D94                     
   948                           ; BSR set to: 15
   949   001D94  0012               	return		;funcret
   950   001D96                     __end_of_config:
   951                           	callstack 0
   952                           
   953 ;; *************** function _lint *****************
   954 ;; Defined at:
   955 ;;		line 107 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         0       0       0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       8       0       0       0       0       0       0
   972 ;;      Totals:         0       0       8       0       0       0       0       0       0
   973 ;;Total ram usage:        8 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 8
   976 ;; This function calls:
   977 ;;		___awdiv
   978 ;;		___awmod
   979 ;;		_shift
   980 ;; This function is called by:
   981 ;;		Interrupt level 1
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	intcodelo
   986   001018                     __pintcodelo:
   987                           	callstack 0
   988   001018                     _lint:
   989                           	callstack 21
   990                           
   991                           ; BSR set to: 15
   992                           ;incstack = 0
   993   001018  804B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   994   00101A  CFD8 F10F          	movff	status,??_lint+1
   995   00101E  CFE8 F110          	movff	wreg,??_lint+2
   996   001022  CFE0 F111          	movff	bsr,??_lint+3
   997   001026  CFF6 F112          	movff	tblptrl,??_lint+4
   998   00102A  CFF7 F113          	movff	tblptrh,??_lint+5
   999   00102E  CFF8 F114          	movff	tblptru,??_lint+6
  1000   001032  CFF5 F115          	movff	tablat,??_lint+7
  1001   001036                     
  1002                           ;main.c: 109:         static char rota;;main.c: 110:         static unsigned int pulso=0
      +                          ;;main.c: 112:         static int cont1;;main.c: 113:         static int cont2;;main.c: 
      +                          115:         if(INTCONbits.TMR0IF){
  1003   001036  A4F2               	btfss	242,2,c	;volatile
  1004   001038  EF20  F008         	goto	i1u185_21
  1005   00103C  EF22  F008         	goto	i1u185_20
  1006   001040                     i1u185_21:
  1007   001040  EF17  F009         	goto	i1l98
  1008   001044                     i1u185_20:
  1009   001044                     
  1010                           ;main.c: 117:         rota++;
  1011   001044  0100               	movlb	0	; () banked
  1012   001046  2BC2               	incf	lint@rota& (0+255),f,b
  1013   001048                     
  1014                           ; BSR set to: 0
  1015                           ;main.c: 118:         if(rota==5) rota=1;
  1016   001048  0E05               	movlw	5
  1017   00104A  19C2               	xorwf	lint@rota& (0+255),w,b
  1018   00104C  A4D8               	btfss	status,2,c
  1019   00104E  EF2B  F008         	goto	i1u186_21
  1020   001052  EF2D  F008         	goto	i1u186_20
  1021   001056                     i1u186_21:
  1022   001056  EF2F  F008         	goto	i1l2248
  1023   00105A                     i1u186_20:
  1024   00105A                     
  1025                           ; BSR set to: 0
  1026   00105A  0E01               	movlw	1
  1027   00105C  6FC2               	movwf	lint@rota& (0+255),b
  1028   00105E                     i1l2248:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 122:         cont1++;
  1032   00105E  4BC0               	infsnz	lint@cont1& (0+255),f,b
  1033   001060  2BC1               	incf	(lint@cont1+1)& (0+255),f,b
  1034   001062                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 124:         if(cont1 >= (t_ms / 5)){
  1037   001062  C0C3  F100         	movff	_t_ms,___awdiv@dividend	;volatile
  1038   001066  C0C4  F101         	movff	_t_ms+1,___awdiv@dividend+1	;volatile
  1039   00106A  0E00               	movlw	0
  1040   00106C  0101               	movlb	1	; () banked
  1041   00106E  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  1042   001070  0E05               	movlw	5
  1043   001072  6F02               	movwf	___awdiv@divisor& (0+255),b
  1044   001074  EC52  F00C         	call	___awdiv	;wreg free
  1045   001078  0101               	movlb	1	; () banked
  1046   00107A  5100               	movf	?___awdiv& (0+255),w,b
  1047   00107C  0100               	movlb	0	; () banked
  1048   00107E  5DC0               	subwf	lint@cont1& (0+255),w,b
  1049   001080  51C1               	movf	(lint@cont1+1)& (0+255),w,b
  1050   001082  0A80               	xorlw	128
  1051   001084  0101               	movlb	1	; () banked
  1052   001086  6F0E               	movwf	??_lint& (0+255),b
  1053   001088  5101               	movf	(?___awdiv+1)& (0+255),w,b
  1054   00108A  0A80               	xorlw	128
  1055   00108C  590E               	subwfb	??_lint& (0+255),w,b
  1056   00108E  A0D8               	btfss	status,0,c
  1057   001090  EF4C  F008         	goto	i1u187_21
  1058   001094  EF4E  F008         	goto	i1u187_20
  1059   001098                     i1u187_21:
  1060   001098  EFFE  F008         	goto	i1l2270
  1061   00109C                     i1u187_20:
  1062   00109C                     
  1063                           ; BSR set to: 1
  1064                           ;main.c: 125:            cont2++;
  1065   00109C  0100               	movlb	0	; () banked
  1066   00109E  4BBE               	infsnz	lint@cont2& (0+255),f,b
  1067   0010A0  2BBF               	incf	(lint@cont2+1)& (0+255),f,b
  1068   0010A2                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 126:            cont1=0;
  1071   0010A2  0E00               	movlw	0
  1072   0010A4  6FC1               	movwf	(lint@cont1+1)& (0+255),b
  1073   0010A6  0E00               	movlw	0
  1074   0010A8  6FC0               	movwf	lint@cont1& (0+255),b
  1075   0010AA                     
  1076                           ; BSR set to: 0
  1077                           ;main.c: 127:            if(cont2>15){
  1078   0010AA  BFBF               	btfsc	(lint@cont2+1)& (0+255),7,b
  1079   0010AC  EF61  F008         	goto	i1u188_21
  1080   0010B0  51BF               	movf	(lint@cont2+1)& (0+255),w,b
  1081   0010B2  E109               	bnz	i1u188_20
  1082   0010B4  0E10               	movlw	16
  1083   0010B6  5DBE               	subwf	lint@cont2& (0+255),w,b
  1084   0010B8  A0D8               	btfss	status,0,c
  1085   0010BA  EF61  F008         	goto	i1u188_21
  1086   0010BE  EF63  F008         	goto	i1u188_20
  1087   0010C2                     i1u188_21:
  1088   0010C2  EFFE  F008         	goto	i1l2270
  1089   0010C6                     i1u188_20:
  1090   0010C6                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 128:                cont2=0;
  1093   0010C6  0E00               	movlw	0
  1094   0010C8  6FBF               	movwf	(lint@cont2+1)& (0+255),b
  1095   0010CA  0E00               	movlw	0
  1096   0010CC  6FBE               	movwf	lint@cont2& (0+255),b
  1097   0010CE  EFFE  F008         	goto	i1l2270
  1098   0010D2                     i1l93:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;main.c: 134:                 LATEbits.LATE0=0;
  1102   0010D2  908D               	bcf	141,0,c	;volatile
  1103                           
  1104                           ;main.c: 135:                 LATEbits.LATE1=1;
  1105   0010D4  828D               	bsf	141,1,c	;volatile
  1106                           
  1107                           ;main.c: 136:                 LATEbits.LATE2=1;
  1108   0010D6  848D               	bsf	141,2,c	;volatile
  1109                           
  1110                           ;main.c: 137:                 LATCbits.LATC1=1;
  1111   0010D8  828B               	bsf	139,1,c	;volatile
  1112   0010DA                     
  1113                           ; BSR set to: 0
  1114                           ;main.c: 138:                 shift(segmentos[((cont2/1000)%10)]);
  1115   0010DA  0E03               	movlw	3
  1116   0010DC  0101               	movlb	1	; () banked
  1117   0010DE  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  1118   0010E0  0EE8               	movlw	232
  1119   0010E2  6F02               	movwf	___awdiv@divisor& (0+255),b
  1120   0010E4  C0BE  F100         	movff	lint@cont2,___awdiv@dividend
  1121   0010E8  C0BF  F101         	movff	lint@cont2+1,___awdiv@dividend+1
  1122   0010EC  EC52  F00C         	call	___awdiv	;wreg free
  1123   0010F0  C100  F108         	movff	?___awdiv,___awmod@dividend
  1124   0010F4  C101  F109         	movff	?___awdiv+1,___awmod@dividend+1
  1125   0010F8  0E00               	movlw	0
  1126   0010FA  0101               	movlb	1	; () banked
  1127   0010FC  6F0B               	movwf	(___awmod@divisor+1)& (0+255),b
  1128   0010FE  0E0A               	movlw	10
  1129   001100  6F0A               	movwf	___awmod@divisor& (0+255),b
  1130   001102  EC75  F00D         	call	___awmod	;wreg free
  1131   001106  0101               	movlb	1	; () banked
  1132   001108  5108               	movf	?___awmod& (0+255),w,b
  1133   00110A  0F53               	addlw	low _segmentos
  1134   00110C  6F0E               	movwf	??_lint& (0+255),b
  1135   00110E  C10E  FFF6         	movff	??_lint,tblptrl
  1136   001112                     	if	1	;There is more than 1 active tblptr byte
  1137   001112  0E12               	movlw	high __smallconst
  1138   001114  6EF7               	movwf	tblptrh,c
  1139   001116                     	endif
  1140   001116                     	if	0	;tblptru may be non-zero
  1141   001116                     	endif
  1142   001116                     	if	0	;tblptru may be non-zero
  1143   001116                     	endif
  1144   001116  0008               	tblrd		*
  1145   001118  50F5               	movf	tablat,w,c
  1146   00111A  EC33  F00F         	call	_shift
  1147                           
  1148                           ;main.c: 139:                 break;
  1149   00111E  EF12  F009         	goto	i1l2272
  1150   001122                     i1l95:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 143:                 LATEbits.LATE0=1;
  1154   001122  808D               	bsf	141,0,c	;volatile
  1155                           
  1156                           ;main.c: 144:                 LATEbits.LATE1=0;
  1157   001124  928D               	bcf	141,1,c	;volatile
  1158                           
  1159                           ;main.c: 145:                 LATEbits.LATE2=1;
  1160   001126  848D               	bsf	141,2,c	;volatile
  1161                           
  1162                           ;main.c: 146:                 LATCbits.LATC1=1;
  1163   001128  828B               	bsf	139,1,c	;volatile
  1164   00112A                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 147:                 shift(segmentos[((cont2/100)%10)]);
  1167   00112A  0E00               	movlw	0
  1168   00112C  0101               	movlb	1	; () banked
  1169   00112E  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  1170   001130  0E64               	movlw	100
  1171   001132  6F02               	movwf	___awdiv@divisor& (0+255),b
  1172   001134  C0BE  F100         	movff	lint@cont2,___awdiv@dividend
  1173   001138  C0BF  F101         	movff	lint@cont2+1,___awdiv@dividend+1
  1174   00113C  EC52  F00C         	call	___awdiv	;wreg free
  1175   001140  C100  F108         	movff	?___awdiv,___awmod@dividend
  1176   001144  C101  F109         	movff	?___awdiv+1,___awmod@dividend+1
  1177   001148  0E00               	movlw	0
  1178   00114A  0101               	movlb	1	; () banked
  1179   00114C  6F0B               	movwf	(___awmod@divisor+1)& (0+255),b
  1180   00114E  0E0A               	movlw	10
  1181   001150  6F0A               	movwf	___awmod@divisor& (0+255),b
  1182   001152  EC75  F00D         	call	___awmod	;wreg free
  1183   001156  0101               	movlb	1	; () banked
  1184   001158  5108               	movf	?___awmod& (0+255),w,b
  1185   00115A  0F53               	addlw	low _segmentos
  1186   00115C  6F0E               	movwf	??_lint& (0+255),b
  1187   00115E  C10E  FFF6         	movff	??_lint,tblptrl
  1188   001162                     	if	1	;There is more than 1 active tblptr byte
  1189   001162  0E12               	movlw	high __smallconst
  1190   001164  6EF7               	movwf	tblptrh,c
  1191   001166                     	endif
  1192   001166                     	if	0	;tblptru may be non-zero
  1193   001166                     	endif
  1194   001166                     	if	0	;tblptru may be non-zero
  1195   001166                     	endif
  1196   001166  0008               	tblrd		*
  1197   001168  50F5               	movf	tablat,w,c
  1198   00116A  EC33  F00F         	call	_shift
  1199                           
  1200                           ;main.c: 149:                 break;
  1201   00116E  EF12  F009         	goto	i1l2272
  1202   001172                     i1l96:
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;main.c: 152:                 LATEbits.LATE0=1;
  1206   001172  808D               	bsf	141,0,c	;volatile
  1207                           
  1208                           ;main.c: 153:                 LATEbits.LATE1=1;
  1209   001174  828D               	bsf	141,1,c	;volatile
  1210                           
  1211                           ;main.c: 154:                 LATEbits.LATE2=0;
  1212   001176  948D               	bcf	141,2,c	;volatile
  1213                           
  1214                           ;main.c: 155:                 LATCbits.LATC1=1;
  1215   001178  828B               	bsf	139,1,c	;volatile
  1216   00117A                     
  1217                           ; BSR set to: 0
  1218                           ;main.c: 157:                 shift(segmentos[((cont2/10)%10)]);
  1219   00117A  0E00               	movlw	0
  1220   00117C  0101               	movlb	1	; () banked
  1221   00117E  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  1222   001180  0E0A               	movlw	10
  1223   001182  6F02               	movwf	___awdiv@divisor& (0+255),b
  1224   001184  C0BE  F100         	movff	lint@cont2,___awdiv@dividend
  1225   001188  C0BF  F101         	movff	lint@cont2+1,___awdiv@dividend+1
  1226   00118C  EC52  F00C         	call	___awdiv	;wreg free
  1227   001190  C100  F108         	movff	?___awdiv,___awmod@dividend
  1228   001194  C101  F109         	movff	?___awdiv+1,___awmod@dividend+1
  1229   001198  0E00               	movlw	0
  1230   00119A  0101               	movlb	1	; () banked
  1231   00119C  6F0B               	movwf	(___awmod@divisor+1)& (0+255),b
  1232   00119E  0E0A               	movlw	10
  1233   0011A0  6F0A               	movwf	___awmod@divisor& (0+255),b
  1234   0011A2  EC75  F00D         	call	___awmod	;wreg free
  1235   0011A6  0101               	movlb	1	; () banked
  1236   0011A8  5108               	movf	?___awmod& (0+255),w,b
  1237   0011AA  0F53               	addlw	low _segmentos
  1238   0011AC  6F0E               	movwf	??_lint& (0+255),b
  1239   0011AE  C10E  FFF6         	movff	??_lint,tblptrl
  1240   0011B2                     	if	1	;There is more than 1 active tblptr byte
  1241   0011B2  0E12               	movlw	high __smallconst
  1242   0011B4  6EF7               	movwf	tblptrh,c
  1243   0011B6                     	endif
  1244   0011B6                     	if	0	;tblptru may be non-zero
  1245   0011B6                     	endif
  1246   0011B6                     	if	0	;tblptru may be non-zero
  1247   0011B6                     	endif
  1248   0011B6  0008               	tblrd		*
  1249   0011B8  50F5               	movf	tablat,w,c
  1250   0011BA  EC33  F00F         	call	_shift
  1251                           
  1252                           ;main.c: 159:                 break;
  1253   0011BE  EF12  F009         	goto	i1l2272
  1254   0011C2                     i1l97:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;main.c: 162:                 LATEbits.LATE0=1;
  1258   0011C2  808D               	bsf	141,0,c	;volatile
  1259                           
  1260                           ;main.c: 163:                 LATEbits.LATE1=1;
  1261   0011C4  828D               	bsf	141,1,c	;volatile
  1262                           
  1263                           ;main.c: 164:                 LATEbits.LATE2=1;
  1264   0011C6  848D               	bsf	141,2,c	;volatile
  1265                           
  1266                           ;main.c: 165:                 LATCbits.LATC1=0;
  1267   0011C8  928B               	bcf	139,1,c	;volatile
  1268   0011CA                     
  1269                           ; BSR set to: 0
  1270                           ;main.c: 166:                 shift(segmentos[(cont2%10)]);
  1271   0011CA  C0BE  F108         	movff	lint@cont2,___awmod@dividend
  1272   0011CE  C0BF  F109         	movff	lint@cont2+1,___awmod@dividend+1
  1273   0011D2  0E00               	movlw	0
  1274   0011D4  0101               	movlb	1	; () banked
  1275   0011D6  6F0B               	movwf	(___awmod@divisor+1)& (0+255),b
  1276   0011D8  0E0A               	movlw	10
  1277   0011DA  6F0A               	movwf	___awmod@divisor& (0+255),b
  1278   0011DC  EC75  F00D         	call	___awmod	;wreg free
  1279   0011E0  0101               	movlb	1	; () banked
  1280   0011E2  5108               	movf	?___awmod& (0+255),w,b
  1281   0011E4  0F53               	addlw	low _segmentos
  1282   0011E6  6F0E               	movwf	??_lint& (0+255),b
  1283   0011E8  C10E  FFF6         	movff	??_lint,tblptrl
  1284   0011EC                     	if	1	;There is more than 1 active tblptr byte
  1285   0011EC  0E12               	movlw	high __smallconst
  1286   0011EE  6EF7               	movwf	tblptrh,c
  1287   0011F0                     	endif
  1288   0011F0                     	if	0	;tblptru may be non-zero
  1289   0011F0                     	endif
  1290   0011F0                     	if	0	;tblptru may be non-zero
  1291   0011F0                     	endif
  1292   0011F0  0008               	tblrd		*
  1293   0011F2  50F5               	movf	tablat,w,c
  1294   0011F4  EC33  F00F         	call	_shift
  1295                           
  1296                           ;main.c: 167:                 break;
  1297   0011F8  EF12  F009         	goto	i1l2272
  1298   0011FC                     i1l2270:
  1299   0011FC  0100               	movlb	0	; () banked
  1300   0011FE  51C2               	movf	lint@rota& (0+255),w,b
  1301                           
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 4, Range of values is 1 to 4
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           13     7 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308   001200  0A01               	xorlw	1	; case 1
  1309   001202  B4D8               	btfsc	status,2,c
  1310   001204  EF69  F008         	goto	i1l93
  1311   001208  0A03               	xorlw	3	; case 2
  1312   00120A  B4D8               	btfsc	status,2,c
  1313   00120C  EF91  F008         	goto	i1l95
  1314   001210  0A01               	xorlw	1	; case 3
  1315   001212  B4D8               	btfsc	status,2,c
  1316   001214  EFB9  F008         	goto	i1l96
  1317   001218  0A07               	xorlw	7	; case 4
  1318   00121A  B4D8               	btfsc	status,2,c
  1319   00121C  EFE1  F008         	goto	i1l97
  1320   001220  EF12  F009         	goto	i1l2272
  1321   001224                     i1l2272:
  1322                           
  1323                           ;main.c: 169:             TMR0H = 0x8A;
  1324   001224  0E8A               	movlw	138
  1325   001226  6ED7               	movwf	215,c	;volatile
  1326                           
  1327                           ;main.c: 170:             TMR0L = 0xB0;
  1328   001228  0EB0               	movlw	176
  1329   00122A  6ED6               	movwf	214,c	;volatile
  1330   00122C                     
  1331                           ;main.c: 171:             INTCONbits.TMR0IF=0;
  1332   00122C  94F2               	bcf	242,2,c	;volatile
  1333   00122E                     i1l98:
  1334   00122E  C115  FFF5         	movff	??_lint+7,tablat
  1335   001232  C114  FFF8         	movff	??_lint+6,tblptru
  1336   001236  C113  FFF7         	movff	??_lint+5,tblptrh
  1337   00123A  C112  FFF6         	movff	??_lint+4,tblptrl
  1338   00123E  C111  FFE0         	movff	??_lint+3,bsr
  1339   001242  C110  FFE8         	movff	??_lint+2,wreg
  1340   001246  C10F  FFD8         	movff	??_lint+1,status
  1341   00124A  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1342   00124C  0010               	retfie	
  1343   00124E                     __end_of_lint:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _shift *****************
  1347 ;; Defined at:
  1348 ;;		line 32 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  dato            1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  dato            1    1[BANK1 ] unsigned char 
  1353 ;;  n               1    2[BANK1 ] unsigned char 
  1354 ;;  k               1    0[BANK1 ] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0
  1365 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1367 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 7
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_lint
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379   001E66                     __ptext3:
  1380                           	callstack 0
  1381   001E66                     _shift:
  1382                           	callstack 21
  1383                           
  1384                           ;incstack = 0
  1385                           ;shift@dato stored from wreg
  1386   001E66  0101               	movlb	1	; () banked
  1387   001E68  6F01               	movwf	shift@dato& (0+255),b
  1388   001E6A                     
  1389                           ;main.c: 34:     LATCbits.LATC0=1;
  1390   001E6A  808B               	bsf	139,0,c	;volatile
  1391                           
  1392                           ;main.c: 35:     LATBbits.LATB5=1;
  1393   001E6C  8A8A               	bsf	138,5,c	;volatile
  1394                           
  1395                           ;main.c: 38:     LATBbits.LATB5=0;
  1396   001E6E  9A8A               	bcf	138,5,c	;volatile
  1397                           
  1398                           ;main.c: 39:     LATBbits.LATB5=1;
  1399   001E70  8A8A               	bsf	138,5,c	;volatile
  1400                           
  1401                           ;main.c: 42:     LATAbits.LATA5=0;
  1402   001E72  9A89               	bcf	137,5,c	;volatile
  1403                           
  1404                           ;main.c: 43:     LATAbits.LATA4=0;
  1405   001E74  9889               	bcf	137,4,c	;volatile
  1406   001E76                     
  1407                           ;main.c: 45:     char n=0,k=0;
  1408   001E76  0E00               	movlw	0
  1409   001E78  0101               	movlb	1	; () banked
  1410   001E7A  6F02               	movwf	shift@n& (0+255),b
  1411                           
  1412                           ;main.c: 47:     for(n=0;n<=7;n++){
  1413   001E7C  0E00               	movlw	0
  1414   001E7E  6F02               	movwf	shift@n& (0+255),b
  1415   001E80                     i1l55:
  1416                           
  1417                           ; BSR set to: 1
  1418                           ;main.c: 49:      if(dato&0x1) LATCbits.LATC0=1;
  1419   001E80  A101               	btfss	shift@dato& (0+255),0,b
  1420   001E82  EF45  F00F         	goto	i1u171_21
  1421   001E86  EF47  F00F         	goto	i1u171_20
  1422   001E8A                     i1u171_21:
  1423   001E8A  EF4A  F00F         	goto	i1l57
  1424   001E8E                     i1u171_20:
  1425   001E8E                     
  1426                           ; BSR set to: 1
  1427   001E8E  808B               	bsf	139,0,c	;volatile
  1428   001E90  EF4B  F00F         	goto	i1l2146
  1429   001E94                     i1l57:
  1430                           
  1431                           ; BSR set to: 1
  1432   001E94  908B               	bcf	139,0,c	;volatile
  1433   001E96                     i1l2146:
  1434                           
  1435                           ; BSR set to: 1
  1436                           ;main.c: 53:      k=dato>>1;
  1437   001E96  90D8               	bcf	status,0,c
  1438   001E98  3101               	rrcf	shift@dato& (0+255),w,b
  1439   001E9A  6F00               	movwf	shift@k& (0+255),b
  1440   001E9C                     
  1441                           ; BSR set to: 1
  1442                           ;main.c: 54:      dato=k;
  1443   001E9C  C100  F101         	movff	shift@k,shift@dato
  1444   001EA0                     
  1445                           ; BSR set to: 1
  1446                           ;main.c: 57:     LATAbits.LATA4=0;
  1447   001EA0  9889               	bcf	137,4,c	;volatile
  1448   001EA2                     
  1449                           ; BSR set to: 1
  1450                           ;main.c: 58:     LATAbits.LATA4=1;
  1451   001EA2  8889               	bsf	137,4,c	;volatile
  1452   001EA4                     
  1453                           ; BSR set to: 1
  1454                           ;main.c: 59:     LATAbits.LATA4=0;
  1455   001EA4  9889               	bcf	137,4,c	;volatile
  1456   001EA6                     
  1457                           ; BSR set to: 1
  1458                           ;main.c: 60:     }
  1459   001EA6  2B02               	incf	shift@n& (0+255),f,b
  1460   001EA8                     
  1461                           ; BSR set to: 1
  1462   001EA8  0E07               	movlw	7
  1463   001EAA  6502               	cpfsgt	shift@n& (0+255),b
  1464   001EAC  EF5A  F00F         	goto	i1u172_21
  1465   001EB0  EF5C  F00F         	goto	i1u172_20
  1466   001EB4                     i1u172_21:
  1467   001EB4  EF40  F00F         	goto	i1l55
  1468   001EB8                     i1u172_20:
  1469   001EB8                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 62:     LATAbits.LATA5=1;
  1472   001EB8  8A89               	bsf	137,5,c	;volatile
  1473                           
  1474                           ;main.c: 63:     LATAbits.LATA5=0;
  1475   001EBA  9A89               	bcf	137,5,c	;volatile
  1476   001EBC                     
  1477                           ; BSR set to: 1
  1478   001EBC  0012               	return		;funcret
  1479   001EBE                     __end_of_shift:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function ___awmod *****************
  1483 ;; Defined at:
  1484 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  dividend        2    8[BANK1 ] int 
  1487 ;;  divisor         2   10[BANK1 ] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  sign            1   13[BANK1 ] unsigned char 
  1490 ;;  counter         1   12[BANK1 ] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  2    8[BANK1 ] int 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       0       4       0       0       0       0       0       0
  1501 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1504 ;;Total ram usage:        6 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 7
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_lint
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text4
  1515   001AEA                     __ptext4:
  1516                           	callstack 0
  1517   001AEA                     ___awmod:
  1518                           	callstack 21
  1519   001AEA  0E00               	movlw	0
  1520   001AEC  0101               	movlb	1	; () banked
  1521   001AEE  6F0D               	movwf	___awmod@sign& (0+255),b
  1522   001AF0                     
  1523                           ; BSR set to: 1
  1524   001AF0  BF09               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1525   001AF2  EF7F  F00D         	goto	i1u179_20
  1526   001AF6  EF7D  F00D         	goto	i1u179_21
  1527   001AFA                     i1u179_21:
  1528   001AFA  EF85  F00D         	goto	i1l2212
  1529   001AFE                     i1u179_20:
  1530   001AFE                     
  1531                           ; BSR set to: 1
  1532   001AFE  6D08               	negf	___awmod@dividend& (0+255),b
  1533   001B00  1F09               	comf	(___awmod@dividend+1)& (0+255),f,b
  1534   001B02  B0D8               	btfsc	status,0,c
  1535   001B04  2B09               	incf	(___awmod@dividend+1)& (0+255),f,b
  1536   001B06                     
  1537                           ; BSR set to: 1
  1538   001B06  0E01               	movlw	1
  1539   001B08  6F0D               	movwf	___awmod@sign& (0+255),b
  1540   001B0A                     i1l2212:
  1541                           
  1542                           ; BSR set to: 1
  1543   001B0A  BF0B               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1544   001B0C  EF8C  F00D         	goto	i1u180_20
  1545   001B10  EF8A  F00D         	goto	i1u180_21
  1546   001B14                     i1u180_21:
  1547   001B14  EF90  F00D         	goto	i1l2216
  1548   001B18                     i1u180_20:
  1549   001B18                     
  1550                           ; BSR set to: 1
  1551   001B18  6D0A               	negf	___awmod@divisor& (0+255),b
  1552   001B1A  1F0B               	comf	(___awmod@divisor+1)& (0+255),f,b
  1553   001B1C  B0D8               	btfsc	status,0,c
  1554   001B1E  2B0B               	incf	(___awmod@divisor+1)& (0+255),f,b
  1555   001B20                     i1l2216:
  1556                           
  1557                           ; BSR set to: 1
  1558   001B20  510A               	movf	___awmod@divisor& (0+255),w,b
  1559   001B22  110B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1560   001B24  B4D8               	btfsc	status,2,c
  1561   001B26  EF97  F00D         	goto	i1u181_21
  1562   001B2A  EF99  F00D         	goto	i1u181_20
  1563   001B2E                     i1u181_21:
  1564   001B2E  EFBD  F00D         	goto	i1l2232
  1565   001B32                     i1u181_20:
  1566   001B32                     
  1567                           ; BSR set to: 1
  1568   001B32  0E01               	movlw	1
  1569   001B34  6F0C               	movwf	___awmod@counter& (0+255),b
  1570   001B36  EFA1  F00D         	goto	i1l2222
  1571   001B3A                     i1l2220:
  1572                           
  1573                           ; BSR set to: 1
  1574   001B3A  90D8               	bcf	status,0,c
  1575   001B3C  370A               	rlcf	___awmod@divisor& (0+255),f,b
  1576   001B3E  370B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1577   001B40  2B0C               	incf	___awmod@counter& (0+255),f,b
  1578   001B42                     i1l2222:
  1579                           
  1580                           ; BSR set to: 1
  1581   001B42  AF0B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1582   001B44  EFA6  F00D         	goto	i1u182_21
  1583   001B48  EFA8  F00D         	goto	i1u182_20
  1584   001B4C                     i1u182_21:
  1585   001B4C  EF9D  F00D         	goto	i1l2220
  1586   001B50                     i1u182_20:
  1587   001B50                     i1l2224:
  1588                           
  1589                           ; BSR set to: 1
  1590   001B50  510A               	movf	___awmod@divisor& (0+255),w,b
  1591   001B52  5D08               	subwf	___awmod@dividend& (0+255),w,b
  1592   001B54  510B               	movf	(___awmod@divisor+1)& (0+255),w,b
  1593   001B56  5909               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1594   001B58  A0D8               	btfss	status,0,c
  1595   001B5A  EFB1  F00D         	goto	i1u183_21
  1596   001B5E  EFB3  F00D         	goto	i1u183_20
  1597   001B62                     i1u183_21:
  1598   001B62  EFB7  F00D         	goto	i1l2228
  1599   001B66                     i1u183_20:
  1600   001B66                     
  1601                           ; BSR set to: 1
  1602   001B66  510A               	movf	___awmod@divisor& (0+255),w,b
  1603   001B68  5F08               	subwf	___awmod@dividend& (0+255),f,b
  1604   001B6A  510B               	movf	(___awmod@divisor+1)& (0+255),w,b
  1605   001B6C  5B09               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1606   001B6E                     i1l2228:
  1607                           
  1608                           ; BSR set to: 1
  1609   001B6E  90D8               	bcf	status,0,c
  1610   001B70  330B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1611   001B72  330A               	rrcf	___awmod@divisor& (0+255),f,b
  1612   001B74                     
  1613                           ; BSR set to: 1
  1614   001B74  2F0C               	decfsz	___awmod@counter& (0+255),f,b
  1615   001B76  EFA8  F00D         	goto	i1l2224
  1616   001B7A                     i1l2232:
  1617                           
  1618                           ; BSR set to: 1
  1619   001B7A  510D               	movf	___awmod@sign& (0+255),w,b
  1620   001B7C  B4D8               	btfsc	status,2,c
  1621   001B7E  EFC3  F00D         	goto	i1u184_21
  1622   001B82  EFC5  F00D         	goto	i1u184_20
  1623   001B86                     i1u184_21:
  1624   001B86  EFC9  F00D         	goto	i1l2236
  1625   001B8A                     i1u184_20:
  1626   001B8A                     
  1627                           ; BSR set to: 1
  1628   001B8A  6D08               	negf	___awmod@dividend& (0+255),b
  1629   001B8C  1F09               	comf	(___awmod@dividend+1)& (0+255),f,b
  1630   001B8E  B0D8               	btfsc	status,0,c
  1631   001B90  2B09               	incf	(___awmod@dividend+1)& (0+255),f,b
  1632   001B92                     i1l2236:
  1633                           
  1634                           ; BSR set to: 1
  1635   001B92  C108  F108         	movff	___awmod@dividend,?___awmod
  1636   001B96  C109  F109         	movff	___awmod@dividend+1,?___awmod+1
  1637   001B9A                     
  1638                           ; BSR set to: 1
  1639   001B9A  0012               	return		;funcret
  1640   001B9C                     __end_of___awmod:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function ___awdiv *****************
  1644 ;; Defined at:
  1645 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  dividend        2    0[BANK1 ] int 
  1648 ;;  divisor         2    2[BANK1 ] int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  quotient        2    6[BANK1 ] int 
  1651 ;;  sign            1    5[BANK1 ] unsigned char 
  1652 ;;  counter         1    4[BANK1 ] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2    0[BANK1 ] int 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1662 ;;      Params:         0       0       4       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1665 ;;      Totals:         0       0       8       0       0       0       0       0       0
  1666 ;;Total ram usage:        8 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 7
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_lint
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text5
  1677   0018A4                     __ptext5:
  1678                           	callstack 0
  1679   0018A4                     ___awdiv:
  1680                           	callstack 21
  1681   0018A4  0E00               	movlw	0
  1682   0018A6  0101               	movlb	1	; () banked
  1683   0018A8  6F05               	movwf	___awdiv@sign& (0+255),b
  1684   0018AA                     
  1685                           ; BSR set to: 1
  1686   0018AA  BF03               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1687   0018AC  EF5C  F00C         	goto	i1u173_20
  1688   0018B0  EF5A  F00C         	goto	i1u173_21
  1689   0018B4                     i1u173_21:
  1690   0018B4  EF62  F00C         	goto	i1l2168
  1691   0018B8                     i1u173_20:
  1692   0018B8                     
  1693                           ; BSR set to: 1
  1694   0018B8  6D02               	negf	___awdiv@divisor& (0+255),b
  1695   0018BA  1F03               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1696   0018BC  B0D8               	btfsc	status,0,c
  1697   0018BE  2B03               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1698   0018C0                     
  1699                           ; BSR set to: 1
  1700   0018C0  0E01               	movlw	1
  1701   0018C2  6F05               	movwf	___awdiv@sign& (0+255),b
  1702   0018C4                     i1l2168:
  1703                           
  1704                           ; BSR set to: 1
  1705   0018C4  BF01               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  1706   0018C6  EF69  F00C         	goto	i1u174_20
  1707   0018CA  EF67  F00C         	goto	i1u174_21
  1708   0018CE                     i1u174_21:
  1709   0018CE  EF6F  F00C         	goto	i1l2174
  1710   0018D2                     i1u174_20:
  1711   0018D2                     
  1712                           ; BSR set to: 1
  1713   0018D2  6D00               	negf	___awdiv@dividend& (0+255),b
  1714   0018D4  1F01               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1715   0018D6  B0D8               	btfsc	status,0,c
  1716   0018D8  2B01               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1717   0018DA                     
  1718                           ; BSR set to: 1
  1719   0018DA  0E01               	movlw	1
  1720   0018DC  1B05               	xorwf	___awdiv@sign& (0+255),f,b
  1721   0018DE                     i1l2174:
  1722                           
  1723                           ; BSR set to: 1
  1724   0018DE  0E00               	movlw	0
  1725   0018E0  6F07               	movwf	(___awdiv@quotient+1)& (0+255),b
  1726   0018E2  0E00               	movlw	0
  1727   0018E4  6F06               	movwf	___awdiv@quotient& (0+255),b
  1728   0018E6                     
  1729                           ; BSR set to: 1
  1730   0018E6  5102               	movf	___awdiv@divisor& (0+255),w,b
  1731   0018E8  1103               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1732   0018EA  B4D8               	btfsc	status,2,c
  1733   0018EC  EF7A  F00C         	goto	i1u175_21
  1734   0018F0  EF7C  F00C         	goto	i1u175_20
  1735   0018F4                     i1u175_21:
  1736   0018F4  EFA4  F00C         	goto	i1l2196
  1737   0018F8                     i1u175_20:
  1738   0018F8                     
  1739                           ; BSR set to: 1
  1740   0018F8  0E01               	movlw	1
  1741   0018FA  6F04               	movwf	___awdiv@counter& (0+255),b
  1742   0018FC  EF84  F00C         	goto	i1l2182
  1743   001900                     i1l2180:
  1744                           
  1745                           ; BSR set to: 1
  1746   001900  90D8               	bcf	status,0,c
  1747   001902  3702               	rlcf	___awdiv@divisor& (0+255),f,b
  1748   001904  3703               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1749   001906  2B04               	incf	___awdiv@counter& (0+255),f,b
  1750   001908                     i1l2182:
  1751                           
  1752                           ; BSR set to: 1
  1753   001908  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1754   00190A  EF89  F00C         	goto	i1u176_21
  1755   00190E  EF8B  F00C         	goto	i1u176_20
  1756   001912                     i1u176_21:
  1757   001912  EF80  F00C         	goto	i1l2180
  1758   001916                     i1u176_20:
  1759   001916                     i1l2184:
  1760                           
  1761                           ; BSR set to: 1
  1762   001916  90D8               	bcf	status,0,c
  1763   001918  3706               	rlcf	___awdiv@quotient& (0+255),f,b
  1764   00191A  3707               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1765   00191C                     
  1766                           ; BSR set to: 1
  1767   00191C  5102               	movf	___awdiv@divisor& (0+255),w,b
  1768   00191E  5D00               	subwf	___awdiv@dividend& (0+255),w,b
  1769   001920  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1770   001922  5901               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1771   001924  A0D8               	btfss	status,0,c
  1772   001926  EF97  F00C         	goto	i1u177_21
  1773   00192A  EF99  F00C         	goto	i1u177_20
  1774   00192E                     i1u177_21:
  1775   00192E  EF9E  F00C         	goto	i1l2192
  1776   001932                     i1u177_20:
  1777   001932                     
  1778                           ; BSR set to: 1
  1779   001932  5102               	movf	___awdiv@divisor& (0+255),w,b
  1780   001934  5F00               	subwf	___awdiv@dividend& (0+255),f,b
  1781   001936  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1782   001938  5B01               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1783   00193A                     
  1784                           ; BSR set to: 1
  1785   00193A  8106               	bsf	___awdiv@quotient& (0+255),0,b
  1786   00193C                     i1l2192:
  1787                           
  1788                           ; BSR set to: 1
  1789   00193C  90D8               	bcf	status,0,c
  1790   00193E  3303               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1791   001940  3302               	rrcf	___awdiv@divisor& (0+255),f,b
  1792   001942                     
  1793                           ; BSR set to: 1
  1794   001942  2F04               	decfsz	___awdiv@counter& (0+255),f,b
  1795   001944  EF8B  F00C         	goto	i1l2184
  1796   001948                     i1l2196:
  1797                           
  1798                           ; BSR set to: 1
  1799   001948  5105               	movf	___awdiv@sign& (0+255),w,b
  1800   00194A  B4D8               	btfsc	status,2,c
  1801   00194C  EFAA  F00C         	goto	i1u178_21
  1802   001950  EFAC  F00C         	goto	i1u178_20
  1803   001954                     i1u178_21:
  1804   001954  EFB0  F00C         	goto	i1l2200
  1805   001958                     i1u178_20:
  1806   001958                     
  1807                           ; BSR set to: 1
  1808   001958  6D06               	negf	___awdiv@quotient& (0+255),b
  1809   00195A  1F07               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1810   00195C  B0D8               	btfsc	status,0,c
  1811   00195E  2B07               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1812   001960                     i1l2200:
  1813                           
  1814                           ; BSR set to: 1
  1815   001960  C106  F100         	movff	___awdiv@quotient,?___awdiv
  1816   001964  C107  F101         	movff	___awdiv@quotient+1,?___awdiv+1
  1817   001968                     
  1818                           ; BSR set to: 1
  1819   001968  0012               	return		;funcret
  1820   00196A                     __end_of___awdiv:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _hint *****************
  1824 ;; Defined at:
  1825 ;;		line 68 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  leer            1   53[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1841 ;;      Temps:         11       0       0       0       0       0       0       0       0
  1842 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:       12 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 6
  1846 ;; This function calls:
  1847 ;;		_buf_clean
  1848 ;;		_netw_procss
  1849 ;;		_netw_trans
  1850 ;;		_strncmp
  1851 ;; This function is called by:
  1852 ;;		Interrupt level 2
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	intcode
  1857   001008                     __pintcode:
  1858                           	callstack 0
  1859   001008                     _hint:
  1860                           	callstack 21
  1861                           
  1862                           ; BSR set to: 1
  1863                           ;incstack = 0
  1864   001008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1865   00100A  EF5B  F009         	goto	int_func
  1866                           
  1867                           	psect	intcode_body
  1868   0012B6                     __pintcode_body:
  1869                           	callstack 21
  1870   0012B6                     int_func:
  1871                           	callstack 21
  1872   0012B6  CFE1 F02C          	movff	fsr1l,??_hint+1
  1873   0012BA  CFE2 F02D          	movff	fsr1h,??_hint+2
  1874   0012BE  CFD9 F02E          	movff	fsr2l,??_hint+3
  1875   0012C2  CFDA F02F          	movff	fsr2h,??_hint+4
  1876   0012C6  CFF3 F030          	movff	prodl,??_hint+5
  1877   0012CA  CFF4 F031          	movff	prodh,??_hint+6
  1878   0012CE  CFF6 F032          	movff	tblptrl,??_hint+7
  1879   0012D2  CFF7 F033          	movff	tblptrh,??_hint+8
  1880   0012D6  CFF8 F034          	movff	tblptru,??_hint+9
  1881   0012DA  CFF5 F035          	movff	tablat,??_hint+10
  1882   0012DE                     
  1883                           ;main.c: 69:     if (PIR1bits.RCIF){
  1884   0012DE  AA9E               	btfss	158,5,c	;volatile
  1885   0012E0  EF74  F009         	goto	i2u151_41
  1886   0012E4  EF76  F009         	goto	i2u151_40
  1887   0012E8                     i2u151_41:
  1888   0012E8  EF45  F00A         	goto	i2l66
  1889   0012EC                     i2u151_40:
  1890   0012EC                     
  1891                           ;main.c: 70:         char leer = RCREG1;
  1892   0012EC  CFAE F036          	movff	4014,hint@leer	;volatile
  1893                           
  1894                           ;main.c: 72:         if (RCSTA1bits.OERR){
  1895   0012F0  A2AB               	btfss	171,1,c	;volatile
  1896   0012F2  EF7D  F009         	goto	i2u152_41
  1897   0012F6  EF7F  F009         	goto	i2u152_40
  1898   0012FA                     i2u152_41:
  1899   0012FA  EF88  F009         	goto	i2l2042
  1900   0012FE                     i2u152_40:
  1901   0012FE                     
  1902                           ;main.c: 73:             RCSTA1bits.CREN = 0;
  1903   0012FE  98AB               	bcf	171,4,c	;volatile
  1904                           
  1905                           ;main.c: 74:             RCSTA1bits.CREN = 1;
  1906   001300  88AB               	bsf	171,4,c	;volatile
  1907                           
  1908                           ;main.c: 75:             PIR1bits.RCIF = 0;
  1909   001302  9A9E               	bcf	158,5,c	;volatile
  1910   001304                     
  1911                           ;main.c: 76:             i = 0;
  1912   001304  0E00               	movlw	0
  1913   001306  6E3E               	movwf	_i^0,c
  1914   001308                     
  1915                           ;main.c: 77:             buf_clean();
  1916   001308  ECFC  F00F         	call	_buf_clean	;wreg free
  1917   00130C  EF45  F00A         	goto	i2l66
  1918   001310                     i2l2042:
  1919                           
  1920                           ;main.c: 81:         if (i < sizeof(arreglo) - 1){
  1921   001310  0E0B               	movlw	11
  1922   001312  603E               	cpfslt	_i^0,c
  1923   001314  EF8E  F009         	goto	i2u153_41
  1924   001318  EF90  F009         	goto	i2u153_40
  1925   00131C                     i2u153_41:
  1926   00131C  EF9C  F009         	goto	i2l2050
  1927   001320                     i2u153_40:
  1928   001320                     
  1929                           ;main.c: 82:             arreglo[i++] = leer;
  1930   001320  503E               	movf	_i^0,w,c
  1931   001322  0F3F               	addlw	low _arreglo
  1932   001324  6ED9               	movwf	fsr2l,c
  1933   001326  6ADA               	clrf	fsr2h,c
  1934   001328  C036  FFDF         	movff	hint@leer,indf2
  1935   00132C  2A3E               	incf	_i^0,f,c
  1936   00132E                     
  1937                           ;main.c: 83:             arreglo[i] = '\0';
  1938   00132E  503E               	movf	_i^0,w,c
  1939   001330  0F3F               	addlw	low _arreglo
  1940   001332  6ED9               	movwf	fsr2l,c
  1941   001334  6ADA               	clrf	fsr2h,c
  1942   001336  6ADF               	clrf	indf2,c
  1943   001338                     i2l2050:
  1944                           
  1945                           ;main.c: 86:         if (leer == '=' || i >= 7){
  1946   001338  0E3D               	movlw	61
  1947   00133A  1836               	xorwf	hint@leer^0,w,c
  1948   00133C  B4D8               	btfsc	status,2,c
  1949   00133E  EFA3  F009         	goto	i2u154_41
  1950   001342  EFA5  F009         	goto	i2u154_40
  1951   001346                     i2u154_41:
  1952   001346  EFAD  F009         	goto	i2l2054
  1953   00134A                     i2u154_40:
  1954   00134A  0E06               	movlw	6
  1955   00134C  643E               	cpfsgt	_i^0,c
  1956   00134E  EFAB  F009         	goto	i2u155_41
  1957   001352  EFAD  F009         	goto	i2u155_40
  1958   001356                     i2u155_41:
  1959   001356  EF44  F00A         	goto	i2l2090
  1960   00135A                     i2u155_40:
  1961   00135A                     i2l2054:
  1962                           
  1963                           ;main.c: 87:             if (strncmp((const char*)arreglo, "tiempo=?", 8) == 0 || i == 1
      +                          1){
  1964   00135A  0E3F               	movlw	low _arreglo
  1965   00135C  6E01               	movwf	strncmp@l^0,c
  1966   00135E  0E9B               	movlw	low STR_1
  1967   001360  6E02               	movwf	strncmp@r^0,c
  1968   001362  0E00               	movlw	0
  1969   001364  6E04               	movwf	(strncmp@n+1)^0,c
  1970   001366  0E08               	movlw	8
  1971   001368  6E03               	movwf	strncmp@n^0,c
  1972   00136A  EC17  F00D         	call	_strncmp	;wreg free
  1973   00136E  5001               	movf	?_strncmp^0,w,c
  1974   001370  1002               	iorwf	(?_strncmp+1)^0,w,c
  1975   001372  B4D8               	btfsc	status,2,c
  1976   001374  EFBE  F009         	goto	i2u156_41
  1977   001378  EFC0  F009         	goto	i2u156_40
  1978   00137C                     i2u156_41:
  1979   00137C  EFC9  F009         	goto	i2l2058
  1980   001380                     i2u156_40:
  1981   001380  0E0B               	movlw	11
  1982   001382  183E               	xorwf	_i^0,w,c
  1983   001384  A4D8               	btfss	status,2,c
  1984   001386  EFC7  F009         	goto	i2u157_41
  1985   00138A  EFC9  F009         	goto	i2u157_40
  1986   00138E                     i2u157_41:
  1987   00138E  EFE6  F009         	goto	i2l2066
  1988   001392                     i2u157_40:
  1989   001392                     i2l2058:
  1990                           
  1991                           ;main.c: 88:                 netw_trans("Recibido: ");
  1992   001392  0E90               	movlw	low STR_2
  1993   001394  6E01               	movwf	netw_trans@mensaje^0,c
  1994   001396  5001               	movf	netw_trans@mensaje^0,w,c
  1995   001398  A4D8               	btfss	status,2,c
  1996   00139A  0E12               	movlw	high __smallconst
  1997   00139C  6E02               	movwf	(netw_trans@mensaje+1)^0,c
  1998   00139E  ECCB  F00E         	call	_netw_trans	;wreg free
  1999                           
  2000                           ;main.c: 89:                 netw_trans((const char*)arreglo);
  2001   0013A2  0E3F               	movlw	low _arreglo
  2002   0013A4  6E01               	movwf	netw_trans@mensaje^0,c
  2003   0013A6  6A02               	clrf	(netw_trans@mensaje+1)^0,c
  2004   0013A8  ECCB  F00E         	call	_netw_trans	;wreg free
  2005                           
  2006                           ;main.c: 90:                 netw_trans("\r\n");
  2007   0013AC  0EB2               	movlw	low STR_3
  2008   0013AE  6E01               	movwf	netw_trans@mensaje^0,c
  2009   0013B0  5001               	movf	netw_trans@mensaje^0,w,c
  2010   0013B2  A4D8               	btfss	status,2,c
  2011   0013B4  0E12               	movlw	high __smallconst
  2012   0013B6  6E02               	movwf	(netw_trans@mensaje+1)^0,c
  2013   0013B8  ECCB  F00E         	call	_netw_trans	;wreg free
  2014   0013BC                     
  2015                           ;main.c: 91:                 netw_procss();
  2016   0013BC  EC37  F00B         	call	_netw_procss	;wreg free
  2017   0013C0                     i2l2062:
  2018                           
  2019                           ;main.c: 92:                 i = 0;
  2020   0013C0  0E00               	movlw	0
  2021   0013C2  6E3E               	movwf	_i^0,c
  2022   0013C4                     
  2023                           ;main.c: 93:                 buf_clean();
  2024   0013C4  ECFC  F00F         	call	_buf_clean	;wreg free
  2025                           
  2026                           ;main.c: 94:             }
  2027   0013C8  EF44  F00A         	goto	i2l2090
  2028   0013CC                     i2l2066:
  2029   0013CC  0E74               	movlw	116
  2030   0013CE  1836               	xorwf	hint@leer^0,w,c
  2031   0013D0  B4D8               	btfsc	status,2,c
  2032   0013D2  EFED  F009         	goto	i2u158_41
  2033   0013D6  EFEF  F009         	goto	i2u158_40
  2034   0013DA                     i2u158_41:
  2035   0013DA  EF44  F00A         	goto	i2l2090
  2036   0013DE                     i2u158_40:
  2037   0013DE  0E69               	movlw	105
  2038   0013E0  1836               	xorwf	hint@leer^0,w,c
  2039   0013E2  B4D8               	btfsc	status,2,c
  2040   0013E4  EFF6  F009         	goto	i2u159_41
  2041   0013E8  EFF8  F009         	goto	i2u159_40
  2042   0013EC                     i2u159_41:
  2043   0013EC  EF44  F00A         	goto	i2l2090
  2044   0013F0                     i2u159_40:
  2045   0013F0  0E65               	movlw	101
  2046   0013F2  1836               	xorwf	hint@leer^0,w,c
  2047   0013F4  B4D8               	btfsc	status,2,c
  2048   0013F6  EFFF  F009         	goto	i2u160_41
  2049   0013FA  EF01  F00A         	goto	i2u160_40
  2050   0013FE                     i2u160_41:
  2051   0013FE  EF44  F00A         	goto	i2l2090
  2052   001402                     i2u160_40:
  2053   001402  0E6D               	movlw	109
  2054   001404  1836               	xorwf	hint@leer^0,w,c
  2055   001406  B4D8               	btfsc	status,2,c
  2056   001408  EF08  F00A         	goto	i2u161_41
  2057   00140C  EF0A  F00A         	goto	i2u161_40
  2058   001410                     i2u161_41:
  2059   001410  EF44  F00A         	goto	i2l2090
  2060   001414                     i2u161_40:
  2061   001414  0E70               	movlw	112
  2062   001416  1836               	xorwf	hint@leer^0,w,c
  2063   001418  B4D8               	btfsc	status,2,c
  2064   00141A  EF11  F00A         	goto	i2u162_41
  2065   00141E  EF13  F00A         	goto	i2u162_40
  2066   001422                     i2u162_41:
  2067   001422  EF44  F00A         	goto	i2l2090
  2068   001426                     i2u162_40:
  2069   001426  0E6F               	movlw	111
  2070   001428  1836               	xorwf	hint@leer^0,w,c
  2071   00142A  B4D8               	btfsc	status,2,c
  2072   00142C  EF1A  F00A         	goto	i2u163_41
  2073   001430  EF1C  F00A         	goto	i2u163_40
  2074   001434                     i2u163_41:
  2075   001434  EF44  F00A         	goto	i2l2090
  2076   001438                     i2u163_40:
  2077   001438  0E3D               	movlw	61
  2078   00143A  1836               	xorwf	hint@leer^0,w,c
  2079   00143C  B4D8               	btfsc	status,2,c
  2080   00143E  EF23  F00A         	goto	i2u164_41
  2081   001442  EF25  F00A         	goto	i2u164_40
  2082   001446                     i2u164_41:
  2083   001446  EF44  F00A         	goto	i2l2090
  2084   00144A                     i2u164_40:
  2085   00144A  0E3F               	movlw	63
  2086   00144C  1836               	xorwf	hint@leer^0,w,c
  2087   00144E  B4D8               	btfsc	status,2,c
  2088   001450  EF2C  F00A         	goto	i2u165_41
  2089   001454  EF2E  F00A         	goto	i2u165_40
  2090   001458                     i2u165_41:
  2091   001458  EF44  F00A         	goto	i2l2090
  2092   00145C                     i2u165_40:
  2093   00145C  C036  F02B         	movff	hint@leer,??_hint
  2094   001460  0ED0               	movlw	208
  2095   001462  262B               	addwf	??_hint^0,f,c
  2096   001464  0E09               	movlw	9
  2097   001466  642B               	cpfsgt	??_hint^0,c
  2098   001468  EF38  F00A         	goto	i2u166_41
  2099   00146C  EF3A  F00A         	goto	i2u166_40
  2100   001470                     i2u166_41:
  2101   001470  EF44  F00A         	goto	i2l2090
  2102   001474                     i2u166_40:
  2103   001474                     
  2104                           ;main.c: 96:                 netw_trans("error");
  2105   001474  0EAC               	movlw	low STR_4
  2106   001476  6E01               	movwf	netw_trans@mensaje^0,c
  2107   001478  5001               	movf	netw_trans@mensaje^0,w,c
  2108   00147A  A4D8               	btfss	status,2,c
  2109   00147C  0E12               	movlw	high __smallconst
  2110   00147E  6E02               	movwf	(netw_trans@mensaje+1)^0,c
  2111   001480  ECCB  F00E         	call	_netw_trans	;wreg free
  2112   001484  EFE0  F009         	goto	i2l2062
  2113   001488                     i2l2090:
  2114                           
  2115                           ;main.c: 101:         PIR1bits.RCIF = 0;
  2116   001488  9A9E               	bcf	158,5,c	;volatile
  2117   00148A                     i2l66:
  2118   00148A  C035  FFF5         	movff	??_hint+10,tablat
  2119   00148E  C034  FFF8         	movff	??_hint+9,tblptru
  2120   001492  C033  FFF7         	movff	??_hint+8,tblptrh
  2121   001496  C032  FFF6         	movff	??_hint+7,tblptrl
  2122   00149A  C031  FFF4         	movff	??_hint+6,prodh
  2123   00149E  C030  FFF3         	movff	??_hint+5,prodl
  2124   0014A2  C02F  FFDA         	movff	??_hint+4,fsr2h
  2125   0014A6  C02E  FFD9         	movff	??_hint+3,fsr2l
  2126   0014AA  C02D  FFE2         	movff	??_hint+2,fsr1h
  2127   0014AE  C02C  FFE1         	movff	??_hint+1,fsr1l
  2128   0014B2  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2129   0014B4  0011               	retfie		f
  2130   0014B6                     __end_of_hint:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _netw_procss *****************
  2134 ;; Defined at:
  2135 ;;		line 195 in file "main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  mensaje        30   30[BANK0 ] unsigned char [30]
  2140 ;;  tiempo_nuevo    2   60[BANK0 ] int 
  2141 ;;  message        30    0[BANK0 ] unsigned char [30]
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0
  2152 ;;      Locals:         0      62       0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2154 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2155 ;;Total ram usage:       62 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 5
  2158 ;; This function calls:
  2159 ;;		_atoi
  2160 ;;		_netw_trans
  2161 ;;		_sprintf
  2162 ;;		_strcmp
  2163 ;;		_strncmp
  2164 ;;		i2___awmod
  2165 ;; This function is called by:
  2166 ;;		_hint
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171   00166E                     __ptext7:
  2172                           	callstack 0
  2173   00166E                     _netw_procss:
  2174                           	callstack 21
  2175   00166E                     
  2176                           ;main.c: 198:     if (strncmp((const char*)arreglo, "tiempo=", 7) == 0){
  2177   00166E  0E3F               	movlw	low _arreglo
  2178   001670  6E01               	movwf	strncmp@l^0,c
  2179   001672  0EA4               	movlw	low STR_5
  2180   001674  6E02               	movwf	strncmp@r^0,c
  2181   001676  0E00               	movlw	0
  2182   001678  6E04               	movwf	(strncmp@n+1)^0,c
  2183   00167A  0E07               	movlw	7
  2184   00167C  6E03               	movwf	strncmp@n^0,c
  2185   00167E  EC17  F00D         	call	_strncmp	;wreg free
  2186   001682  5001               	movf	?_strncmp^0,w,c
  2187   001684  1002               	iorwf	(?_strncmp+1)^0,w,c
  2188   001686  A4D8               	btfss	status,2,c
  2189   001688  EF48  F00B         	goto	i2u134_41
  2190   00168C  EF4A  F00B         	goto	i2u134_40
  2191   001690                     i2u134_41:
  2192   001690  EFC1  F00B         	goto	i2l1862
  2193   001694                     i2u134_40:
  2194   001694                     
  2195                           ;main.c: 199:         if (strcmp((const char*)arreglo, "tiempo=?") == 0){
  2196   001694  0E3F               	movlw	low _arreglo
  2197   001696  6E01               	movwf	strcmp@l^0,c
  2198   001698  0E9B               	movlw	low STR_1
  2199   00169A  6E02               	movwf	strcmp@r^0,c
  2200   00169C  EC00  F00F         	call	_strcmp	;wreg free
  2201   0016A0  5001               	movf	?_strcmp^0,w,c
  2202   0016A2  1002               	iorwf	(?_strcmp+1)^0,w,c
  2203   0016A4  A4D8               	btfss	status,2,c
  2204   0016A6  EF57  F00B         	goto	i2u135_41
  2205   0016AA  EF59  F00B         	goto	i2u135_40
  2206   0016AE                     i2u135_41:
  2207   0016AE  EF6A  F00B         	goto	i2l1846
  2208   0016B2                     i2u135_40:
  2209   0016B2                     
  2210                           ;main.c: 201:             char message[30];;main.c: 202:             sprintf(message, "E
      +                          l tiempo actual es %d", t_ms);
  2211   0016B2  0E60               	movlw	low netw_procss@message
  2212   0016B4  6E1A               	movwf	sprintf@s^0,c
  2213   0016B6  0E63               	movlw	low STR_7
  2214   0016B8  6E1B               	movwf	sprintf@fmt^0,c
  2215   0016BA  C0C3  F01C         	movff	_t_ms,?_sprintf+2	;volatile
  2216   0016BE  C0C4  F01D         	movff	_t_ms+1,?_sprintf+3	;volatile
  2217   0016C2  EC9D  F00F         	call	_sprintf	;wreg free
  2218   0016C6                     
  2219                           ;main.c: 203:             netw_trans(message);
  2220   0016C6  0E60               	movlw	low netw_procss@message
  2221   0016C8  6E01               	movwf	netw_trans@mensaje^0,c
  2222   0016CA  6A02               	clrf	(netw_trans@mensaje+1)^0,c
  2223   0016CC  ECCB  F00E         	call	_netw_trans	;wreg free
  2224                           
  2225                           ;main.c: 204:         }
  2226   0016D0  EFC9  F00B         	goto	i2l118
  2227   0016D4                     i2l1846:
  2228                           
  2229                           ;main.c: 207:             int tiempo_nuevo = atoi((const char*)&arreglo[7]);
  2230   0016D4  0E46               	movlw	low (_arreglo+7)
  2231   0016D6  6E07               	movwf	atoi@s^0,c
  2232   0016D8  ECCA  F00B         	call	_atoi	;wreg free
  2233   0016DC  C007  F09C         	movff	?_atoi,netw_procss@tiempo_nuevo
  2234   0016E0  C008  F09D         	movff	?_atoi+1,netw_procss@tiempo_nuevo+1
  2235   0016E4                     
  2236                           ;main.c: 209:             if (tiempo_nuevo >= 100 && tiempo_nuevo <= 1000 && tiempo_nuev
      +                          o % 100 == 0){
  2237   0016E4  0100               	movlb	0	; () banked
  2238   0016E6  BF9D               	btfsc	(netw_procss@tiempo_nuevo+1)& (0+255),7,b
  2239   0016E8  EF7F  F00B         	goto	i2u136_41
  2240   0016EC  519D               	movf	(netw_procss@tiempo_nuevo+1)& (0+255),w,b
  2241   0016EE  E109               	bnz	i2u136_40
  2242   0016F0  0E64               	movlw	100
  2243   0016F2  5D9C               	subwf	netw_procss@tiempo_nuevo& (0+255),w,b
  2244   0016F4  A0D8               	btfss	status,0,c
  2245   0016F6  EF7F  F00B         	goto	i2u136_41
  2246   0016FA  EF81  F00B         	goto	i2u136_40
  2247   0016FE                     i2u136_41:
  2248   0016FE  EFB7  F00B         	goto	i2l1860
  2249   001702                     i2u136_40:
  2250   001702                     
  2251                           ; BSR set to: 0
  2252   001702  BF9D               	btfsc	(netw_procss@tiempo_nuevo+1)& (0+255),7,b
  2253   001704  EF8F  F00B         	goto	i2u137_40
  2254   001708  0EE9               	movlw	233
  2255   00170A  5D9C               	subwf	netw_procss@tiempo_nuevo& (0+255),w,b
  2256   00170C  0E03               	movlw	3
  2257   00170E  599D               	subwfb	(netw_procss@tiempo_nuevo+1)& (0+255),w,b
  2258   001710  B0D8               	btfsc	status,0,c
  2259   001712  EF8D  F00B         	goto	i2u137_41
  2260   001716  EF8F  F00B         	goto	i2u137_40
  2261   00171A                     i2u137_41:
  2262   00171A  EFB7  F00B         	goto	i2l1860
  2263   00171E                     i2u137_40:
  2264   00171E                     
  2265                           ; BSR set to: 0
  2266   00171E  C09C  F001         	movff	netw_procss@tiempo_nuevo,i2___awmod@dividend
  2267   001722  C09D  F002         	movff	netw_procss@tiempo_nuevo+1,i2___awmod@dividend+1
  2268   001726  0E00               	movlw	0
  2269   001728  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  2270   00172A  0E64               	movlw	100
  2271   00172C  6E03               	movwf	i2___awmod@divisor^0,c
  2272   00172E  ECCE  F00D         	call	i2___awmod	;wreg free
  2273   001732  5001               	movf	?i2___awmod^0,w,c
  2274   001734  1002               	iorwf	(?i2___awmod+1)^0,w,c
  2275   001736  A4D8               	btfss	status,2,c
  2276   001738  EFA0  F00B         	goto	i2u138_41
  2277   00173C  EFA2  F00B         	goto	i2u138_40
  2278   001740                     i2u138_41:
  2279   001740  EFB7  F00B         	goto	i2l1860
  2280   001744                     i2u138_40:
  2281   001744                     
  2282                           ;main.c: 210:                 t_ms = tiempo_nuevo;
  2283   001744  C09C  F0C3         	movff	netw_procss@tiempo_nuevo,_t_ms	;volatile
  2284   001748  C09D  F0C4         	movff	netw_procss@tiempo_nuevo+1,_t_ms+1	;volatile
  2285   00174C                     
  2286                           ;main.c: 211:                 char mensaje[30];;main.c: 212:                 sprintf(men
      +                          saje, "El nuevo tiempo es %d", t_ms);
  2287   00174C  0E7E               	movlw	low netw_procss@mensaje
  2288   00174E  6E1A               	movwf	sprintf@s^0,c
  2289   001750  0E7A               	movlw	low STR_8
  2290   001752  6E1B               	movwf	sprintf@fmt^0,c
  2291   001754  C0C3  F01C         	movff	_t_ms,?_sprintf+2	;volatile
  2292   001758  C0C4  F01D         	movff	_t_ms+1,?_sprintf+3	;volatile
  2293   00175C  EC9D  F00F         	call	_sprintf	;wreg free
  2294   001760                     
  2295                           ;main.c: 213:                 netw_trans(mensaje);
  2296   001760  0E7E               	movlw	low netw_procss@mensaje
  2297   001762  6E01               	movwf	netw_trans@mensaje^0,c
  2298   001764  6A02               	clrf	(netw_trans@mensaje+1)^0,c
  2299   001766  ECCB  F00E         	call	_netw_trans	;wreg free
  2300                           
  2301                           ;main.c: 214:             }
  2302   00176A  EFC9  F00B         	goto	i2l118
  2303   00176E                     i2l1860:
  2304                           
  2305                           ;main.c: 216:                 netw_trans("error");
  2306   00176E  0EAC               	movlw	low STR_4
  2307   001770  6E01               	movwf	netw_trans@mensaje^0,c
  2308   001772  5001               	movf	netw_trans@mensaje^0,w,c
  2309   001774  A4D8               	btfss	status,2,c
  2310   001776  0E12               	movlw	high __smallconst
  2311   001778  6E02               	movwf	(netw_trans@mensaje+1)^0,c
  2312   00177A  ECCB  F00E         	call	_netw_trans	;wreg free
  2313   00177E  EFC9  F00B         	goto	i2l118
  2314   001782                     i2l1862:
  2315                           
  2316                           ;main.c: 221:         netw_trans("error");
  2317   001782  0EAC               	movlw	low STR_4
  2318   001784  6E01               	movwf	netw_trans@mensaje^0,c
  2319   001786  5001               	movf	netw_trans@mensaje^0,w,c
  2320   001788  A4D8               	btfss	status,2,c
  2321   00178A  0E12               	movlw	high __smallconst
  2322   00178C  6E02               	movwf	(netw_trans@mensaje+1)^0,c
  2323   00178E  ECCB  F00E         	call	_netw_trans	;wreg free
  2324   001792                     i2l118:
  2325   001792  0012               	return		;funcret
  2326   001794                     __end_of_netw_procss:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _strncmp *****************
  2330 ;; Defined at:
  2331 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  l               1    0[COMRAM] PTR const unsigned char 
  2334 ;;		 -> arreglo(12), 
  2335 ;;  r               1    1[COMRAM] PTR const unsigned char 
  2336 ;;		 -> STR_5(8), STR_1(9), 
  2337 ;;  n               2    2[COMRAM] unsigned int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    0[COMRAM] int 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2349 ;;      Params:         4       0       0       0       0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2351 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2352 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2353 ;;Total ram usage:        5 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_hint
  2359 ;;		_netw_procss
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text8
  2364   001A2E                     __ptext8:
  2365                           	callstack 0
  2366   001A2E                     _strncmp:
  2367                           	callstack 26
  2368   001A2E  0603               	decf	strncmp@n^0,f,c
  2369   001A30  A0D8               	btfss	status,0,c
  2370   001A32  0604               	decf	(strncmp@n+1)^0,f,c
  2371   001A34  2803               	incf	strncmp@n^0,w,c
  2372   001A36  E106               	bnz	i2u114_41
  2373   001A38  2804               	incf	(strncmp@n+1)^0,w,c
  2374   001A3A  A4D8               	btfss	status,2,c
  2375   001A3C  EF22  F00D         	goto	i2u114_41
  2376   001A40  EF24  F00D         	goto	i2u114_40
  2377   001A44                     i2u114_41:
  2378   001A44  EF2F  F00D         	goto	i2l1732
  2379   001A48                     i2u114_40:
  2380   001A48  0E00               	movlw	0
  2381   001A4A  6E02               	movwf	(?_strncmp+1)^0,c
  2382   001A4C  0E00               	movlw	0
  2383   001A4E  6E01               	movwf	?_strncmp^0,c
  2384   001A50  EF74  F00D         	goto	i2l977
  2385   001A54                     i2l1730:
  2386   001A54  2A01               	incf	strncmp@l^0,f,c
  2387   001A56  2A02               	incf	strncmp@r^0,f,c
  2388   001A58  0603               	decf	strncmp@n^0,f,c
  2389   001A5A  A0D8               	btfss	status,0,c
  2390   001A5C  0604               	decf	(strncmp@n+1)^0,f,c
  2391   001A5E                     i2l1732:
  2392   001A5E  5001               	movf	strncmp@l^0,w,c
  2393   001A60  6ED9               	movwf	fsr2l,c
  2394   001A62  6ADA               	clrf	fsr2h,c
  2395   001A64  50DF               	movf	indf2,w,c
  2396   001A66  B4D8               	btfsc	status,2,c
  2397   001A68  EF38  F00D         	goto	i2u115_41
  2398   001A6C  EF3A  F00D         	goto	i2u115_40
  2399   001A70                     i2u115_41:
  2400   001A70  EF64  F00D         	goto	i2l1740
  2401   001A74                     i2u115_40:
  2402   001A74  C002  FFF6         	movff	strncmp@r,tblptrl
  2403   001A78                     	if	1	;There is more than 1 active tblptr byte
  2404   001A78  0E12               	movlw	high __smallconst
  2405   001A7A  6EF7               	movwf	tblptrh,c
  2406   001A7C                     	endif
  2407   001A7C                     	if	0	;tblptru may be non-zero
  2408   001A7C                     	endif
  2409   001A7C                     	if	0	;tblptru may be non-zero
  2410   001A7C                     	endif
  2411   001A7C  0008               	tblrd		*
  2412   001A7E  50F5               	movf	tablat,w,c
  2413   001A80  0900               	iorlw	0
  2414   001A82  B4D8               	btfsc	status,2,c
  2415   001A84  EF46  F00D         	goto	i2u116_41
  2416   001A88  EF48  F00D         	goto	i2u116_40
  2417   001A8C                     i2u116_41:
  2418   001A8C  EF64  F00D         	goto	i2l1740
  2419   001A90                     i2u116_40:
  2420   001A90  5003               	movf	strncmp@n^0,w,c
  2421   001A92  1004               	iorwf	(strncmp@n+1)^0,w,c
  2422   001A94  B4D8               	btfsc	status,2,c
  2423   001A96  EF4F  F00D         	goto	i2u117_41
  2424   001A9A  EF51  F00D         	goto	i2u117_40
  2425   001A9E                     i2u117_41:
  2426   001A9E  EF64  F00D         	goto	i2l1740
  2427   001AA2                     i2u117_40:
  2428   001AA2  5001               	movf	strncmp@l^0,w,c
  2429   001AA4  6ED9               	movwf	fsr2l,c
  2430   001AA6  6ADA               	clrf	fsr2h,c
  2431   001AA8  50DF               	movf	indf2,w,c
  2432   001AAA  6E05               	movwf	??_strncmp^0,c
  2433   001AAC  C002  FFF6         	movff	strncmp@r,tblptrl
  2434   001AB0                     	if	1	;There is more than 1 active tblptr byte
  2435   001AB0  0E12               	movlw	high __smallconst
  2436   001AB2  6EF7               	movwf	tblptrh,c
  2437   001AB4                     	endif
  2438   001AB4                     	if	0	;tblptru may be non-zero
  2439   001AB4                     	endif
  2440   001AB4                     	if	0	;tblptru may be non-zero
  2441   001AB4                     	endif
  2442   001AB4  0008               	tblrd		*
  2443   001AB6  50F5               	movf	tablat,w,c
  2444   001AB8  1805               	xorwf	??_strncmp^0,w,c
  2445   001ABA  B4D8               	btfsc	status,2,c
  2446   001ABC  EF62  F00D         	goto	i2u118_41
  2447   001AC0  EF64  F00D         	goto	i2u118_40
  2448   001AC4                     i2u118_41:
  2449   001AC4  EF2A  F00D         	goto	i2l1730
  2450   001AC8                     i2u118_40:
  2451   001AC8                     i2l1740:
  2452   001AC8  5001               	movf	strncmp@l^0,w,c
  2453   001ACA  6ED9               	movwf	fsr2l,c
  2454   001ACC  6ADA               	clrf	fsr2h,c
  2455   001ACE  50DF               	movf	indf2,w,c
  2456   001AD0  6E05               	movwf	??_strncmp^0,c
  2457   001AD2  C002  FFF6         	movff	strncmp@r,tblptrl
  2458   001AD6                     	if	1	;There is more than 1 active tblptr byte
  2459   001AD6  0E12               	movlw	high __smallconst
  2460   001AD8  6EF7               	movwf	tblptrh,c
  2461   001ADA                     	endif
  2462   001ADA                     	if	0	;tblptru may be non-zero
  2463   001ADA                     	endif
  2464   001ADA                     	if	0	;tblptru may be non-zero
  2465   001ADA                     	endif
  2466   001ADA  0008               	tblrd		*
  2467   001ADC  50F5               	movf	tablat,w,c
  2468   001ADE  5C05               	subwf	??_strncmp^0,w,c
  2469   001AE0  6E01               	movwf	?_strncmp^0,c
  2470   001AE2  6A02               	clrf	(?_strncmp+1)^0,c
  2471   001AE4  A0D8               	btfss	status,0,c
  2472   001AE6  0602               	decf	(?_strncmp+1)^0,f,c
  2473   001AE8                     i2l977:
  2474   001AE8  0012               	return		;funcret
  2475   001AEA                     __end_of_strncmp:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _strcmp *****************
  2479 ;; Defined at:
  2480 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  l               1    0[COMRAM] PTR const unsigned char 
  2483 ;;		 -> arreglo(12), 
  2484 ;;  r               1    1[COMRAM] PTR const unsigned char 
  2485 ;;		 -> STR_6(9), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2    0[COMRAM] int 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2497 ;;      Params:         2       0       0       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2499 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2500 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2501 ;;Total ram usage:        3 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_netw_procss
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text9
  2511   001E00                     __ptext9:
  2512                           	callstack 0
  2513   001E00                     _strcmp:
  2514                           	callstack 25
  2515   001E00  EF04  F00F         	goto	i2l1764
  2516   001E04                     i2l1762:
  2517   001E04  2A01               	incf	strcmp@l^0,f,c
  2518   001E06  2A02               	incf	strcmp@r^0,f,c
  2519   001E08                     i2l1764:
  2520   001E08  5001               	movf	strcmp@l^0,w,c
  2521   001E0A  6ED9               	movwf	fsr2l,c
  2522   001E0C  6ADA               	clrf	fsr2h,c
  2523   001E0E  50DF               	movf	indf2,w,c
  2524   001E10  6E03               	movwf	??_strcmp^0,c
  2525   001E12  C002  FFF6         	movff	strcmp@r,tblptrl
  2526   001E16                     	if	1	;There is more than 1 active tblptr byte
  2527   001E16  0E12               	movlw	high __smallconst
  2528   001E18  6EF7               	movwf	tblptrh,c
  2529   001E1A                     	endif
  2530   001E1A                     	if	0	;tblptru may be non-zero
  2531   001E1A                     	endif
  2532   001E1A                     	if	0	;tblptru may be non-zero
  2533   001E1A                     	endif
  2534   001E1A  0008               	tblrd		*
  2535   001E1C  50F5               	movf	tablat,w,c
  2536   001E1E  1803               	xorwf	??_strcmp^0,w,c
  2537   001E20  A4D8               	btfss	status,2,c
  2538   001E22  EF15  F00F         	goto	i2u124_41
  2539   001E26  EF17  F00F         	goto	i2u124_40
  2540   001E2A                     i2u124_41:
  2541   001E2A  EF22  F00F         	goto	i2l1768
  2542   001E2E                     i2u124_40:
  2543   001E2E  5001               	movf	strcmp@l^0,w,c
  2544   001E30  6ED9               	movwf	fsr2l,c
  2545   001E32  6ADA               	clrf	fsr2h,c
  2546   001E34  50DF               	movf	indf2,w,c
  2547   001E36  A4D8               	btfss	status,2,c
  2548   001E38  EF20  F00F         	goto	i2u125_41
  2549   001E3C  EF22  F00F         	goto	i2u125_40
  2550   001E40                     i2u125_41:
  2551   001E40  EF02  F00F         	goto	i2l1762
  2552   001E44                     i2u125_40:
  2553   001E44                     i2l1768:
  2554   001E44  5001               	movf	strcmp@l^0,w,c
  2555   001E46  6ED9               	movwf	fsr2l,c
  2556   001E48  6ADA               	clrf	fsr2h,c
  2557   001E4A  50DF               	movf	indf2,w,c
  2558   001E4C  6E03               	movwf	??_strcmp^0,c
  2559   001E4E  C002  FFF6         	movff	strcmp@r,tblptrl
  2560   001E52                     	if	1	;There is more than 1 active tblptr byte
  2561   001E52  0E12               	movlw	high __smallconst
  2562   001E54  6EF7               	movwf	tblptrh,c
  2563   001E56                     	endif
  2564   001E56                     	if	0	;tblptru may be non-zero
  2565   001E56                     	endif
  2566   001E56                     	if	0	;tblptru may be non-zero
  2567   001E56                     	endif
  2568   001E56  0008               	tblrd		*
  2569   001E58  50F5               	movf	tablat,w,c
  2570   001E5A  5C03               	subwf	??_strcmp^0,w,c
  2571   001E5C  6E01               	movwf	?_strcmp^0,c
  2572   001E5E  6A02               	clrf	(?_strcmp+1)^0,c
  2573   001E60  A0D8               	btfss	status,0,c
  2574   001E62  0602               	decf	(?_strcmp+1)^0,f,c
  2575   001E64  0012               	return		;funcret
  2576   001E66                     __end_of_strcmp:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _sprintf *****************
  2580 ;; Defined at:
  2581 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  s               1   25[COMRAM] PTR unsigned char 
  2584 ;;		 -> netw_procss@mensaje(30), netw_procss@message(30), 
  2585 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  2586 ;;		 -> STR_8(22), STR_7(23), 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  f              12   30[COMRAM] struct _IO_FILE
  2589 ;;  ret             2    0        int 
  2590 ;;  ap              1   29[COMRAM] PTR void [1]
  2591 ;;		 -> ?_sprintf(2), 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  2   25[COMRAM] int 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         4       0       0       0       0       0       0       0       0
  2602 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:       17 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 4
  2608 ;; This function calls:
  2609 ;;		_vfprintf
  2610 ;; This function is called by:
  2611 ;;		_netw_procss
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text10
  2616   001F3A                     __ptext10:
  2617                           	callstack 0
  2618   001F3A                     _sprintf:
  2619                           	callstack 21
  2620   001F3A  0E1C               	movlw	low (?_sprintf+2)
  2621   001F3C  6E1E               	movwf	sprintf@ap^0,c
  2622   001F3E  C01A  F01F         	movff	sprintf@s,sprintf@f
  2623   001F42  0E00               	movlw	0
  2624   001F44  6E23               	movwf	(sprintf@f+4)^0,c
  2625   001F46  0E00               	movlw	0
  2626   001F48  6E22               	movwf	(sprintf@f+3)^0,c
  2627   001F4A  0E00               	movlw	0
  2628   001F4C  6E2A               	movwf	(sprintf@f+11)^0,c
  2629   001F4E  0E00               	movlw	0
  2630   001F50  6E29               	movwf	(sprintf@f+10)^0,c
  2631   001F52  0E1F               	movlw	low sprintf@f
  2632   001F54  6E16               	movwf	vfprintf@fp^0,c
  2633   001F56  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  2634   001F5A  0E1E               	movlw	low sprintf@ap
  2635   001F5C  6E18               	movwf	vfprintf@ap^0,c
  2636   001F5E  EC7E  F00F         	call	_vfprintf	;wreg free
  2637   001F62  501A               	movf	sprintf@s^0,w,c
  2638   001F64  2422               	addwf	(sprintf@f+3)^0,w,c
  2639   001F66  6ED9               	movwf	fsr2l,c
  2640   001F68  6ADA               	clrf	fsr2h,c
  2641   001F6A  6ADF               	clrf	indf2,c
  2642   001F6C  0012               	return		;funcret
  2643   001F6E                     __end_of_sprintf:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _vfprintf *****************
  2647 ;; Defined at:
  2648 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  2651 ;;		 -> sprintf@f(12), 
  2652 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  2653 ;;		 -> STR_8(22), STR_7(23), 
  2654 ;;  ap              1   23[COMRAM] PTR PTR void 
  2655 ;;		 -> sprintf@ap(1), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  2658 ;;		 -> STR_8(22), STR_7(23), 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2   21[COMRAM] int 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2668 ;;      Params:         3       0       0       0       0       0       0       0       0
  2669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2671 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2672 ;;Total ram usage:        4 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 3
  2675 ;; This function calls:
  2676 ;;		_vfpfcnvrt
  2677 ;; This function is called by:
  2678 ;;		_sprintf
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text11
  2683   001EFC                     __ptext11:
  2684                           	callstack 0
  2685   001EFC                     _vfprintf:
  2686                           	callstack 21
  2687   001EFC                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2689   001EFC  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2692   001F00  EF8A  F00F         	goto	i2l1718
  2693   001F04                     i2l1716:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2696   001F04  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2697   001F08  0E19               	movlw	low vfprintf@cfmt
  2698   001F0A  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2699   001F0C  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2700   001F10  EC5B  F00A         	call	_vfpfcnvrt	;wreg free
  2701   001F14                     i2l1718:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2704   001F14  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  2705   001F18                     	if	1	;There is more than 1 active tblptr byte
  2706   001F18  0E12               	movlw	high __smallconst
  2707   001F1A  6EF7               	movwf	tblptrh,c
  2708   001F1C                     	endif
  2709   001F1C                     	if	0	;tblptru may be non-zero
  2710   001F1C                     	endif
  2711   001F1C                     	if	0	;tblptru may be non-zero
  2712   001F1C                     	endif
  2713   001F1C  0008               	tblrd		*
  2714   001F1E  50F5               	movf	tablat,w,c
  2715   001F20  0900               	iorlw	0
  2716   001F22  A4D8               	btfss	status,2,c
  2717   001F24  EF96  F00F         	goto	i2u113_41
  2718   001F28  EF98  F00F         	goto	i2u113_40
  2719   001F2C                     i2u113_41:
  2720   001F2C  EF82  F00F         	goto	i2l1716
  2721   001F30                     i2u113_40:
  2722   001F30                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2724   001F30  0E00               	movlw	0
  2725   001F32  6E17               	movwf	(?_vfprintf+1)^0,c
  2726   001F34  0E00               	movlw	0
  2727   001F36  6E16               	movwf	?_vfprintf^0,c
  2728   001F38  0012               	return		;funcret
  2729   001F3A                     __end_of_vfprintf:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _vfpfcnvrt *****************
  2733 ;; Defined at:
  2734 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2737 ;;		 -> sprintf@f(12), 
  2738 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2739 ;;		 -> vfprintf@cfmt(1), 
  2740 ;;  ap              1   12[COMRAM] PTR PTR void 
  2741 ;;		 -> sprintf@ap(1), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  convarg         4   16[COMRAM] struct .
  2744 ;;  c               1   20[COMRAM] unsigned char 
  2745 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2746 ;;		 -> STR_8(22), STR_7(23), 
  2747 ;;  done            1   14[COMRAM] _Bool 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2757 ;;      Params:         3       0       0       0       0       0       0       0       0
  2758 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2760 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2761 ;;Total ram usage:       11 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 2
  2764 ;; This function calls:
  2765 ;;		_abs
  2766 ;;		_fputc
  2767 ;;		i2___awdiv
  2768 ;;		i2___awmod
  2769 ;; This function is called by:
  2770 ;;		_vfprintf
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text12
  2775   0014B6                     __ptext12:
  2776                           	callstack 0
  2777   0014B6                     _vfpfcnvrt:
  2778                           	callstack 21
  2779   0014B6                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2781   0014B6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2782   0014B8  6ED9               	movwf	fsr2l,c
  2783   0014BA  6ADA               	clrf	fsr2h,c
  2784   0014BC  CFDF FFF6          	movff	indf2,tblptrl
  2785   0014C0                     	if	1	;There is more than 1 active tblptr byte
  2786   0014C0  0E12               	movlw	high __smallconst
  2787   0014C2  6EF7               	movwf	tblptrh,c
  2788   0014C4                     	endif
  2789   0014C4                     	if	0	;tblptru may be non-zero
  2790   0014C4                     	endif
  2791   0014C4                     	if	0	;tblptru may be non-zero
  2792   0014C4                     	endif
  2793   0014C4  0008               	tblrd		*
  2794   0014C6  50F5               	movf	tablat,w,c
  2795   0014C8  0A25               	xorlw	37
  2796   0014CA  A4D8               	btfss	status,2,c
  2797   0014CC  EF6A  F00A         	goto	i2u103_41
  2798   0014D0  EF6C  F00A         	goto	i2u103_40
  2799   0014D4                     i2u103_41:
  2800   0014D4  EF25  F00B         	goto	i2l1702
  2801   0014D8                     i2u103_40:
  2802   0014D8                     
  2803                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2804   0014D8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2805   0014DA  6ED9               	movwf	fsr2l,c
  2806   0014DC  6ADA               	clrf	fsr2h,c
  2807   0014DE  2ADF               	incf	indf2,f,c
  2808   0014E0                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2810   0014E0  0E00               	movlw	0
  2811   0014E2  6E38               	movwf	(_width+1)^0,c
  2812   0014E4  0E00               	movlw	0
  2813   0014E6  6E37               	movwf	_width^0,c
  2814   0014E8  C037  F03D         	movff	_width,_flags
  2815   0014EC                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2817   0014EC  6839               	setf	_prec^0,c
  2818   0014EE  683A               	setf	(_prec+1)^0,c
  2819   0014F0                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2821   0014F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2822   0014F2  6ED9               	movwf	fsr2l,c
  2823   0014F4  6ADA               	clrf	fsr2h,c
  2824   0014F6  50DF               	movf	indf2,w,c
  2825   0014F8  6E10               	movwf	vfpfcnvrt@cp^0,c
  2826   0014FA                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2828   0014FA  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2829   0014FE                     	if	1	;There is more than 1 active tblptr byte
  2830   0014FE  0E12               	movlw	high __smallconst
  2831   001500  6EF7               	movwf	tblptrh,c
  2832   001502                     	endif
  2833   001502                     	if	0	;tblptru may be non-zero
  2834   001502                     	endif
  2835   001502                     	if	0	;tblptru may be non-zero
  2836   001502                     	endif
  2837   001502  0008               	tblrd		*
  2838   001504  50F5               	movf	tablat,w,c
  2839   001506  0A64               	xorlw	100
  2840   001508  B4D8               	btfsc	status,2,c
  2841   00150A  EF89  F00A         	goto	i2u104_41
  2842   00150E  EF8B  F00A         	goto	i2u104_40
  2843   001512                     i2u104_41:
  2844   001512  EF99  F00A         	goto	i2l1672
  2845   001516                     i2u104_40:
  2846   001516  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2847   00151A                     	if	1	;There is more than 1 active tblptr byte
  2848   00151A  0E12               	movlw	high __smallconst
  2849   00151C  6EF7               	movwf	tblptrh,c
  2850   00151E                     	endif
  2851   00151E                     	if	0	;tblptru may be non-zero
  2852   00151E                     	endif
  2853   00151E                     	if	0	;tblptru may be non-zero
  2854   00151E                     	endif
  2855   00151E  0008               	tblrd		*
  2856   001520  50F5               	movf	tablat,w,c
  2857   001522  0A69               	xorlw	105
  2858   001524  A4D8               	btfss	status,2,c
  2859   001526  EF97  F00A         	goto	i2u105_41
  2860   00152A  EF99  F00A         	goto	i2u105_40
  2861   00152E                     i2u105_41:
  2862   00152E  EF1F  F00B         	goto	i2l1698
  2863   001532                     i2u105_40:
  2864   001532                     i2l1672:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2867   001532  500D               	movf	vfpfcnvrt@ap^0,w,c
  2868   001534  6ED9               	movwf	fsr2l,c
  2869   001536  6ADA               	clrf	fsr2h,c
  2870   001538  0E02               	movlw	2
  2871   00153A  26DF               	addwf	indf2,f,c
  2872   00153C  5CDF               	subwf	indf2,w,c
  2873   00153E  6ED9               	movwf	fsr2l,c
  2874   001540  6ADA               	clrf	fsr2h,c
  2875   001542  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  2876   001546  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  2877   00154A                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2879   00154A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2880   00154C  6ED9               	movwf	fsr2l,c
  2881   00154E  6ADA               	clrf	fsr2h,c
  2882   001550  2810               	incf	vfpfcnvrt@cp^0,w,c
  2883   001552  6EDF               	movwf	indf2,c
  2884   001554                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2886   001554  0E20               	movlw	32
  2887   001556  6E15               	movwf	vfpfcnvrt@c^0,c
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2890   001558  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2891   00155A  EFB1  F00A         	goto	i2u106_41
  2892   00155E  EFB4  F00A         	goto	i2u106_40
  2893   001562                     i2u106_41:
  2894   001562  0E01               	movlw	1
  2895   001564  EFB5  F00A         	goto	i2u107_40
  2896   001568                     i2u106_40:
  2897   001568  0E00               	movlw	0
  2898   00156A                     i2u107_40:
  2899   00156A  6E0F               	movwf	vfpfcnvrt@done^0,c
  2900   00156C                     i2l1678:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2903   00156C  0615               	decf	vfpfcnvrt@c^0,f,c
  2904   00156E  5015               	movf	vfpfcnvrt@c^0,w,c
  2905   001570  0F9E               	addlw	low _dbuf
  2906   001572  6ED9               	movwf	fsr2l,c
  2907   001574  6ADA               	clrf	fsr2h,c
  2908   001576  C011  F001         	movff	vfpfcnvrt@convarg,i2___awmod@dividend
  2909   00157A  C012  F002         	movff	vfpfcnvrt@convarg+1,i2___awmod@dividend+1
  2910   00157E  0E00               	movlw	0
  2911   001580  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  2912   001582  0E0A               	movlw	10
  2913   001584  6E03               	movwf	i2___awmod@divisor^0,c
  2914   001586  ECCE  F00D         	call	i2___awmod	;wreg free
  2915   00158A  C001  F007         	movff	?i2___awmod,abs@a
  2916   00158E  C002  F008         	movff	?i2___awmod+1,abs@a+1
  2917   001592  ECB7  F00F         	call	_abs	;wreg free
  2918   001596  5007               	movf	?_abs^0,w,c
  2919   001598  0F30               	addlw	48
  2920   00159A  6EDF               	movwf	indf2,c
  2921   00159C                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2923   00159C  C011  F001         	movff	vfpfcnvrt@convarg,i2___awdiv@dividend
  2924   0015A0  C012  F002         	movff	vfpfcnvrt@convarg+1,i2___awdiv@dividend+1
  2925   0015A4  0E00               	movlw	0
  2926   0015A6  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  2927   0015A8  0E0A               	movlw	10
  2928   0015AA  6E03               	movwf	i2___awdiv@divisor^0,c
  2929   0015AC  ECB5  F00C         	call	i2___awdiv	;wreg free
  2930   0015B0  C001  F011         	movff	?i2___awdiv,vfpfcnvrt@convarg
  2931   0015B4  C002  F012         	movff	?i2___awdiv+1,vfpfcnvrt@convarg+1
  2932   0015B8                     
  2933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2934   0015B8  5011               	movf	vfpfcnvrt@convarg^0,w,c
  2935   0015BA  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2936   0015BC  B4D8               	btfsc	status,2,c
  2937   0015BE  EFE3  F00A         	goto	i2u108_41
  2938   0015C2  EFE5  F00A         	goto	i2u108_40
  2939   0015C6                     i2u108_41:
  2940   0015C6  EFED  F00A         	goto	i2l1686
  2941   0015CA                     i2u108_40:
  2942   0015CA  5015               	movf	vfpfcnvrt@c^0,w,c
  2943   0015CC  A4D8               	btfss	status,2,c
  2944   0015CE  EFEB  F00A         	goto	i2u109_41
  2945   0015D2  EFED  F00A         	goto	i2u109_40
  2946   0015D6                     i2u109_41:
  2947   0015D6  EFB6  F00A         	goto	i2l1678
  2948   0015DA                     i2u109_40:
  2949   0015DA                     i2l1686:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2952   0015DA  5015               	movf	vfpfcnvrt@c^0,w,c
  2953   0015DC  B4D8               	btfsc	status,2,c
  2954   0015DE  EFF3  F00A         	goto	i2u110_41
  2955   0015E2  EFF5  F00A         	goto	i2u110_40
  2956   0015E6                     i2u110_41:
  2957   0015E6  EF14  F00B         	goto	i2l1696
  2958   0015EA                     i2u110_40:
  2959   0015EA  500F               	movf	vfpfcnvrt@done^0,w,c
  2960   0015EC  B4D8               	btfsc	status,2,c
  2961   0015EE  EFFB  F00A         	goto	i2u111_41
  2962   0015F2  EFFD  F00A         	goto	i2u111_40
  2963   0015F6                     i2u111_41:
  2964   0015F6  EF14  F00B         	goto	i2l1696
  2965   0015FA                     i2u111_40:
  2966   0015FA                     
  2967                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2968   0015FA  0615               	decf	vfpfcnvrt@c^0,f,c
  2969   0015FC  5015               	movf	vfpfcnvrt@c^0,w,c
  2970   0015FE  0F9E               	addlw	low _dbuf
  2971   001600  6ED9               	movwf	fsr2l,c
  2972   001602  6ADA               	clrf	fsr2h,c
  2973   001604  0E2D               	movlw	45
  2974   001606  6EDF               	movwf	indf2,c
  2975   001608  EF14  F00B         	goto	i2l1696
  2976   00160C                     i2l1692:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2979   00160C  5015               	movf	vfpfcnvrt@c^0,w,c
  2980   00160E  0F9E               	addlw	low _dbuf
  2981   001610  6ED9               	movwf	fsr2l,c
  2982   001612  6ADA               	clrf	fsr2h,c
  2983   001614  50DF               	movf	indf2,w,c
  2984   001616  6E0E               	movwf	??_vfpfcnvrt^0,c
  2985   001618  500E               	movf	??_vfpfcnvrt^0,w,c
  2986   00161A  6E01               	movwf	fputc@c^0,c
  2987   00161C  6A02               	clrf	(fputc@c+1)^0,c
  2988   00161E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2989   001622  EC26  F00E         	call	_fputc	;wreg free
  2990   001626  2A15               	incf	vfpfcnvrt@c^0,f,c
  2991   001628                     i2l1696:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2994   001628  0E20               	movlw	32
  2995   00162A  1815               	xorwf	vfpfcnvrt@c^0,w,c
  2996   00162C  A4D8               	btfss	status,2,c
  2997   00162E  EF1B  F00B         	goto	i2u112_41
  2998   001632  EF1D  F00B         	goto	i2u112_40
  2999   001636                     i2u112_41:
  3000   001636  EF06  F00B         	goto	i2l1692
  3001   00163A                     i2u112_40:
  3002   00163A  EF36  F00B         	goto	i2l929
  3003   00163E                     i2l1698:
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3006   00163E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3007   001640  6ED9               	movwf	fsr2l,c
  3008   001642  6ADA               	clrf	fsr2h,c
  3009   001644  2ADF               	incf	indf2,f,c
  3010   001646  EF36  F00B         	goto	i2l929
  3011   00164A                     i2l1702:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3014   00164A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3015   00164C  6ED9               	movwf	fsr2l,c
  3016   00164E  6ADA               	clrf	fsr2h,c
  3017   001650  CFDF FFF6          	movff	indf2,tblptrl
  3018   001654                     	if	1	;There is more than 1 active tblptr byte
  3019   001654  0E12               	movlw	high __smallconst
  3020   001656  6EF7               	movwf	tblptrh,c
  3021   001658                     	endif
  3022   001658                     	if	0	;tblptru may be non-zero
  3023   001658                     	endif
  3024   001658                     	if	0	;tblptru may be non-zero
  3025   001658                     	endif
  3026   001658  0008               	tblrd		*
  3027   00165A  50F5               	movf	tablat,w,c
  3028   00165C  6E01               	movwf	fputc@c^0,c
  3029   00165E  6A02               	clrf	(fputc@c+1)^0,c
  3030   001660  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3031   001664  EC26  F00E         	call	_fputc	;wreg free
  3032   001668  EF1F  F00B         	goto	i2l1698
  3033   00166C                     i2l929:
  3034   00166C  0012               	return		;funcret
  3035   00166E                     __end_of_vfpfcnvrt:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function i2___awmod *****************
  3039 ;; Defined at:
  3040 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  dividend        2    0[COMRAM] int 
  3043 ;;  divisor         2    2[COMRAM] int 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  sign            1    5[COMRAM] unsigned char 
  3046 ;;  counter         1    4[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2    0[COMRAM] int 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         4       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        6 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_netw_procss
  3066 ;;		_vfpfcnvrt
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text13
  3071   001B9C                     __ptext13:
  3072                           	callstack 0
  3073   001B9C                     i2___awmod:
  3074                           	callstack 25
  3075   001B9C  0E00               	movlw	0
  3076   001B9E  6E06               	movwf	i2___awmod@sign^0,c
  3077   001BA0  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3078   001BA2  EFD7  F00D         	goto	i2u97_40
  3079   001BA6  EFD5  F00D         	goto	i2u97_41
  3080   001BAA                     i2u97_41:
  3081   001BAA  EFDD  F00D         	goto	i2l1630
  3082   001BAE                     i2u97_40:
  3083   001BAE  6C01               	negf	i2___awmod@dividend^0,c
  3084   001BB0  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3085   001BB2  B0D8               	btfsc	status,0,c
  3086   001BB4  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3087   001BB6  0E01               	movlw	1
  3088   001BB8  6E06               	movwf	i2___awmod@sign^0,c
  3089   001BBA                     i2l1630:
  3090   001BBA  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3091   001BBC  EFE4  F00D         	goto	i2u98_40
  3092   001BC0  EFE2  F00D         	goto	i2u98_41
  3093   001BC4                     i2u98_41:
  3094   001BC4  EFE8  F00D         	goto	i2l1634
  3095   001BC8                     i2u98_40:
  3096   001BC8  6C03               	negf	i2___awmod@divisor^0,c
  3097   001BCA  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  3098   001BCC  B0D8               	btfsc	status,0,c
  3099   001BCE  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  3100   001BD0                     i2l1634:
  3101   001BD0  5003               	movf	i2___awmod@divisor^0,w,c
  3102   001BD2  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3103   001BD4  B4D8               	btfsc	status,2,c
  3104   001BD6  EFEF  F00D         	goto	i2u99_41
  3105   001BDA  EFF1  F00D         	goto	i2u99_40
  3106   001BDE                     i2u99_41:
  3107   001BDE  EF15  F00E         	goto	i2l1650
  3108   001BE2                     i2u99_40:
  3109   001BE2  0E01               	movlw	1
  3110   001BE4  6E05               	movwf	i2___awmod@counter^0,c
  3111   001BE6  EFF9  F00D         	goto	i2l1640
  3112   001BEA                     i2l1638:
  3113   001BEA  90D8               	bcf	status,0,c
  3114   001BEC  3603               	rlcf	i2___awmod@divisor^0,f,c
  3115   001BEE  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3116   001BF0  2A05               	incf	i2___awmod@counter^0,f,c
  3117   001BF2                     i2l1640:
  3118   001BF2  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  3119   001BF4  EFFE  F00D         	goto	i2u100_41
  3120   001BF8  EF00  F00E         	goto	i2u100_40
  3121   001BFC                     i2u100_41:
  3122   001BFC  EFF5  F00D         	goto	i2l1638
  3123   001C00                     i2u100_40:
  3124   001C00                     i2l1642:
  3125   001C00  5003               	movf	i2___awmod@divisor^0,w,c
  3126   001C02  5C01               	subwf	i2___awmod@dividend^0,w,c
  3127   001C04  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3128   001C06  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3129   001C08  A0D8               	btfss	status,0,c
  3130   001C0A  EF09  F00E         	goto	i2u101_41
  3131   001C0E  EF0B  F00E         	goto	i2u101_40
  3132   001C12                     i2u101_41:
  3133   001C12  EF0F  F00E         	goto	i2l1646
  3134   001C16                     i2u101_40:
  3135   001C16  5003               	movf	i2___awmod@divisor^0,w,c
  3136   001C18  5E01               	subwf	i2___awmod@dividend^0,f,c
  3137   001C1A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3138   001C1C  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3139   001C1E                     i2l1646:
  3140   001C1E  90D8               	bcf	status,0,c
  3141   001C20  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3142   001C22  3203               	rrcf	i2___awmod@divisor^0,f,c
  3143   001C24  2E05               	decfsz	i2___awmod@counter^0,f,c
  3144   001C26  EF00  F00E         	goto	i2l1642
  3145   001C2A                     i2l1650:
  3146   001C2A  5006               	movf	i2___awmod@sign^0,w,c
  3147   001C2C  B4D8               	btfsc	status,2,c
  3148   001C2E  EF1B  F00E         	goto	i2u102_41
  3149   001C32  EF1D  F00E         	goto	i2u102_40
  3150   001C36                     i2u102_41:
  3151   001C36  EF21  F00E         	goto	i2l1654
  3152   001C3A                     i2u102_40:
  3153   001C3A  6C01               	negf	i2___awmod@dividend^0,c
  3154   001C3C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3155   001C3E  B0D8               	btfsc	status,0,c
  3156   001C40  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3157   001C42                     i2l1654:
  3158   001C42  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3159   001C46  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3160   001C4A  0012               	return		;funcret
  3161   001C4C                     __end_ofi2___awmod:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function i2___awdiv *****************
  3165 ;; Defined at:
  3166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  dividend        2    0[COMRAM] int 
  3169 ;;  divisor         2    2[COMRAM] int 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  quotient        2    6[COMRAM] int 
  3172 ;;  sign            1    5[COMRAM] unsigned char 
  3173 ;;  counter         1    4[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    0[COMRAM] int 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         4       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        8 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_vfpfcnvrt
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text14
  3197   00196A                     __ptext14:
  3198                           	callstack 0
  3199   00196A                     i2___awdiv:
  3200                           	callstack 22
  3201   00196A  0E00               	movlw	0
  3202   00196C  6E06               	movwf	i2___awdiv@sign^0,c
  3203   00196E  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  3204   001970  EFBE  F00C         	goto	i2u91_40
  3205   001974  EFBC  F00C         	goto	i2u91_41
  3206   001978                     i2u91_41:
  3207   001978  EFC4  F00C         	goto	i2l1586
  3208   00197C                     i2u91_40:
  3209   00197C  6C03               	negf	i2___awdiv@divisor^0,c
  3210   00197E  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  3211   001980  B0D8               	btfsc	status,0,c
  3212   001982  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  3213   001984  0E01               	movlw	1
  3214   001986  6E06               	movwf	i2___awdiv@sign^0,c
  3215   001988                     i2l1586:
  3216   001988  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  3217   00198A  EFCB  F00C         	goto	i2u92_40
  3218   00198E  EFC9  F00C         	goto	i2u92_41
  3219   001992                     i2u92_41:
  3220   001992  EFD1  F00C         	goto	i2l1592
  3221   001996                     i2u92_40:
  3222   001996  6C01               	negf	i2___awdiv@dividend^0,c
  3223   001998  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  3224   00199A  B0D8               	btfsc	status,0,c
  3225   00199C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  3226   00199E  0E01               	movlw	1
  3227   0019A0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  3228   0019A2                     i2l1592:
  3229   0019A2  0E00               	movlw	0
  3230   0019A4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  3231   0019A6  0E00               	movlw	0
  3232   0019A8  6E07               	movwf	i2___awdiv@quotient^0,c
  3233   0019AA  5003               	movf	i2___awdiv@divisor^0,w,c
  3234   0019AC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  3235   0019AE  B4D8               	btfsc	status,2,c
  3236   0019B0  EFDC  F00C         	goto	i2u93_41
  3237   0019B4  EFDE  F00C         	goto	i2u93_40
  3238   0019B8                     i2u93_41:
  3239   0019B8  EF06  F00D         	goto	i2l1614
  3240   0019BC                     i2u93_40:
  3241   0019BC  0E01               	movlw	1
  3242   0019BE  6E05               	movwf	i2___awdiv@counter^0,c
  3243   0019C0  EFE6  F00C         	goto	i2l1600
  3244   0019C4                     i2l1598:
  3245   0019C4  90D8               	bcf	status,0,c
  3246   0019C6  3603               	rlcf	i2___awdiv@divisor^0,f,c
  3247   0019C8  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  3248   0019CA  2A05               	incf	i2___awdiv@counter^0,f,c
  3249   0019CC                     i2l1600:
  3250   0019CC  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  3251   0019CE  EFEB  F00C         	goto	i2u94_41
  3252   0019D2  EFED  F00C         	goto	i2u94_40
  3253   0019D6                     i2u94_41:
  3254   0019D6  EFE2  F00C         	goto	i2l1598
  3255   0019DA                     i2u94_40:
  3256   0019DA                     i2l1602:
  3257   0019DA  90D8               	bcf	status,0,c
  3258   0019DC  3607               	rlcf	i2___awdiv@quotient^0,f,c
  3259   0019DE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  3260   0019E0  5003               	movf	i2___awdiv@divisor^0,w,c
  3261   0019E2  5C01               	subwf	i2___awdiv@dividend^0,w,c
  3262   0019E4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3263   0019E6  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  3264   0019E8  A0D8               	btfss	status,0,c
  3265   0019EA  EFF9  F00C         	goto	i2u95_41
  3266   0019EE  EFFB  F00C         	goto	i2u95_40
  3267   0019F2                     i2u95_41:
  3268   0019F2  EF00  F00D         	goto	i2l1610
  3269   0019F6                     i2u95_40:
  3270   0019F6  5003               	movf	i2___awdiv@divisor^0,w,c
  3271   0019F8  5E01               	subwf	i2___awdiv@dividend^0,f,c
  3272   0019FA  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3273   0019FC  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  3274   0019FE  8007               	bsf	i2___awdiv@quotient^0,0,c
  3275   001A00                     i2l1610:
  3276   001A00  90D8               	bcf	status,0,c
  3277   001A02  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  3278   001A04  3203               	rrcf	i2___awdiv@divisor^0,f,c
  3279   001A06  2E05               	decfsz	i2___awdiv@counter^0,f,c
  3280   001A08  EFED  F00C         	goto	i2l1602
  3281   001A0C                     i2l1614:
  3282   001A0C  5006               	movf	i2___awdiv@sign^0,w,c
  3283   001A0E  B4D8               	btfsc	status,2,c
  3284   001A10  EF0C  F00D         	goto	i2u96_41
  3285   001A14  EF0E  F00D         	goto	i2u96_40
  3286   001A18                     i2u96_41:
  3287   001A18  EF12  F00D         	goto	i2l1618
  3288   001A1C                     i2u96_40:
  3289   001A1C  6C07               	negf	i2___awdiv@quotient^0,c
  3290   001A1E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  3291   001A20  B0D8               	btfsc	status,0,c
  3292   001A22  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  3293   001A24                     i2l1618:
  3294   001A24  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3295   001A28  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3296   001A2C  0012               	return		;funcret
  3297   001A2E                     __end_ofi2___awdiv:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _fputc *****************
  3301 ;; Defined at:
  3302 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  c               2    0[COMRAM] int 
  3305 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3306 ;;		 -> sprintf@f(12), 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2    0[COMRAM] int 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3318 ;;      Params:         3       0       0       0       0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3320 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3321 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3322 ;;Total ram usage:        8 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 1
  3325 ;; This function calls:
  3326 ;;		_putch
  3327 ;; This function is called by:
  3328 ;;		_vfpfcnvrt
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text15
  3333   001C4C                     __ptext15:
  3334                           	callstack 0
  3335   001C4C                     _fputc:
  3336                           	callstack 21
  3337   001C4C  5003               	movf	fputc@fp^0,w,c
  3338   001C4E  B4D8               	btfsc	status,2,c
  3339   001C50  EF2C  F00E         	goto	i2u86_41
  3340   001C54  EF2E  F00E         	goto	i2u86_40
  3341   001C58                     i2u86_41:
  3342   001C58  EF36  F00E         	goto	i2l1564
  3343   001C5C                     i2u86_40:
  3344   001C5C  5003               	movf	fputc@fp^0,w,c
  3345   001C5E  A4D8               	btfss	status,2,c
  3346   001C60  EF34  F00E         	goto	i2u87_41
  3347   001C64  EF36  F00E         	goto	i2u87_40
  3348   001C68                     i2u87_41:
  3349   001C68  EF3B  F00E         	goto	i2l1566
  3350   001C6C                     i2u87_40:
  3351   001C6C                     i2l1564:
  3352   001C6C  5001               	movf	fputc@c^0,w,c
  3353   001C6E  EC11  F010         	call	_putch
  3354   001C72  EF7A  F00E         	goto	i2l954
  3355   001C76                     i2l1566:
  3356   001C76  5003               	movf	fputc@fp^0,w,c
  3357   001C78  6ED9               	movwf	fsr2l,c
  3358   001C7A  6ADA               	clrf	fsr2h,c
  3359   001C7C  0E0A               	movlw	10
  3360   001C7E  26D9               	addwf	fsr2l,f,c
  3361   001C80  50DE               	movf	postinc2,w,c
  3362   001C82  10DE               	iorwf	postinc2,w,c
  3363   001C84  B4D8               	btfsc	status,2,c
  3364   001C86  EF47  F00E         	goto	i2u88_41
  3365   001C8A  EF49  F00E         	goto	i2u88_40
  3366   001C8E                     i2u88_41:
  3367   001C8E  EF62  F00E         	goto	i2l1570
  3368   001C92                     i2u88_40:
  3369   001C92  5003               	movf	fputc@fp^0,w,c
  3370   001C94  6ED9               	movwf	fsr2l,c
  3371   001C96  6ADA               	clrf	fsr2h,c
  3372   001C98  0E0A               	movlw	10
  3373   001C9A  26D9               	addwf	fsr2l,f,c
  3374   001C9C  5003               	movf	fputc@fp^0,w,c
  3375   001C9E  6EE1               	movwf	fsr1l,c
  3376   001CA0  6AE2               	clrf	fsr1h,c
  3377   001CA2  0E03               	movlw	3
  3378   001CA4  26E1               	addwf	fsr1l,f,c
  3379   001CA6  50DE               	movf	postinc2,w,c
  3380   001CA8  5CE6               	subwf	postinc1,w,c
  3381   001CAA  50E6               	movf	postinc1,w,c
  3382   001CAC  0A80               	xorlw	128
  3383   001CAE  6E08               	movwf	(??_fputc+4)^0,c
  3384   001CB0  50DE               	movf	postinc2,w,c
  3385   001CB2  0A80               	xorlw	128
  3386   001CB4  5808               	subwfb	(??_fputc+4)^0,w,c
  3387   001CB6  B0D8               	btfsc	status,0,c
  3388   001CB8  EF60  F00E         	goto	i2u89_41
  3389   001CBC  EF62  F00E         	goto	i2u89_40
  3390   001CC0                     i2u89_41:
  3391   001CC0  EF7A  F00E         	goto	i2l954
  3392   001CC4                     i2u89_40:
  3393   001CC4                     i2l1570:
  3394   001CC4  5003               	movf	fputc@fp^0,w,c
  3395   001CC6  6ED9               	movwf	fsr2l,c
  3396   001CC8  6ADA               	clrf	fsr2h,c
  3397   001CCA  0E03               	movlw	3
  3398   001CCC  26D9               	addwf	fsr2l,f,c
  3399   001CCE  50DF               	movf	indf2,w,c
  3400   001CD0  6E04               	movwf	??_fputc^0,c
  3401   001CD2  5003               	movf	fputc@fp^0,w,c
  3402   001CD4  6ED9               	movwf	fsr2l,c
  3403   001CD6  6ADA               	clrf	fsr2h,c
  3404   001CD8  50DF               	movf	indf2,w,c
  3405   001CDA  2404               	addwf	??_fputc^0,w,c
  3406   001CDC  6ED9               	movwf	fsr2l,c
  3407   001CDE  6ADA               	clrf	fsr2h,c
  3408   001CE0  C001  FFDF         	movff	fputc@c,indf2
  3409   001CE4  5003               	movf	fputc@fp^0,w,c
  3410   001CE6  6ED9               	movwf	fsr2l,c
  3411   001CE8  6ADA               	clrf	fsr2h,c
  3412   001CEA  0E03               	movlw	3
  3413   001CEC  26D9               	addwf	fsr2l,f,c
  3414   001CEE  2ADE               	incf	postinc2,f,c
  3415   001CF0  0E00               	movlw	0
  3416   001CF2  22DD               	addwfc	postdec2,f,c
  3417   001CF4                     i2l954:
  3418   001CF4  0012               	return		;funcret
  3419   001CF6                     __end_of_fputc:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _putch *****************
  3423 ;; Defined at:
  3424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  c               1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  c               1    0[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_fputc
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text16
  3452   002022                     __ptext16:
  3453                           	callstack 0
  3454   002022                     _putch:
  3455                           	callstack 21
  3456   002022  0012               	return		;funcret
  3457   002024                     __end_of_putch:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _abs *****************
  3461 ;; Defined at:
  3462 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  a               2    6[COMRAM] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2    6[COMRAM] int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         2       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        4 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_vfpfcnvrt
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text17
  3490   001F6E                     __ptext17:
  3491                           	callstack 0
  3492   001F6E                     _abs:
  3493                           	callstack 22
  3494   001F6E  BE08               	btfsc	(abs@a+1)^0,7,c
  3495   001F70  EFBC  F00F         	goto	i2u90_41
  3496   001F74  EFBE  F00F         	goto	i2u90_40
  3497   001F78                     i2u90_41:
  3498   001F78  EFC4  F00F         	goto	i2l939
  3499   001F7C                     i2u90_40:
  3500   001F7C  C007  F007         	movff	abs@a,?_abs
  3501   001F80  C008  F008         	movff	abs@a+1,?_abs+1
  3502   001F84  EFD0  F00F         	goto	i2l942
  3503   001F88                     i2l939:
  3504   001F88  C007  F009         	movff	abs@a,??_abs
  3505   001F8C  C008  F00A         	movff	abs@a+1,??_abs+1
  3506   001F90  1E09               	comf	??_abs^0,f,c
  3507   001F92  1E0A               	comf	(??_abs+1)^0,f,c
  3508   001F94  4A09               	infsnz	??_abs^0,f,c
  3509   001F96  2A0A               	incf	(??_abs+1)^0,f,c
  3510   001F98  C009  F007         	movff	??_abs,?_abs
  3511   001F9C  C00A  F008         	movff	??_abs+1,?_abs+1
  3512   001FA0                     i2l942:
  3513   001FA0  0012               	return		;funcret
  3514   001FA2                     __end_of_abs:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _netw_trans *****************
  3518 ;; Defined at:
  3519 ;;		line 226 in file "main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  mensaje         2    0[COMRAM] PTR const unsigned char 
  3522 ;;		 -> STR_10(6), STR_9(6), netw_procss@mensaje(30), netw_procss@message(30), 
  3523 ;;		 -> STR_4(6), STR_3(3), STR_2(11), arreglo(12), 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         2       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        2 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_hint
  3545 ;;		_netw_procss
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text18
  3550   001D96                     __ptext18:
  3551                           	callstack 0
  3552   001D96                     _netw_trans:
  3553                           	callstack 26
  3554   001D96                     
  3555                           ;main.c: 226: void netw_trans(const char* mensaje);main.c: 227: {;main.c: 228:     while
      +                           (*mensaje != '\0')
  3556   001D96  EFE7  F00E         	goto	i2l1750
  3557   001D9A                     i2l123:
  3558   001D9A  A2AC               	btfss	172,1,c	;volatile
  3559   001D9C  EFD2  F00E         	goto	i2u119_41
  3560   001DA0  EFD4  F00E         	goto	i2u119_40
  3561   001DA4                     i2u119_41:
  3562   001DA4  EFCD  F00E         	goto	i2l123
  3563   001DA8                     i2u119_40:
  3564   001DA8                     
  3565                           ;main.c: 231:         TXREG = *mensaje++;
  3566   001DA8  C001  FFF6         	movff	netw_trans@mensaje,tblptrl
  3567   001DAC  C002  FFF7         	movff	netw_trans@mensaje+1,tblptrh
  3568   001DB0  6AF8               	clrf	tblptru,c
  3569   001DB2  0E07               	movlw	(high __ramtop+-1)
  3570   001DB4  64F7               	cpfsgt	tblptrh,c
  3571   001DB6  D003               	bra	i2u120_47
  3572   001DB8  0008               	tblrd		*
  3573   001DBA  50F5               	movf	tablat,w,c
  3574   001DBC  D005               	bra	i2u120_40
  3575   001DBE                     i2u120_47:
  3576   001DBE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3577   001DC2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3578   001DC6  50E7               	movf	indf1,w,c
  3579   001DC8                     i2u120_40:
  3580   001DC8  6EAD               	movwf	173,c	;volatile
  3581   001DCA  4A01               	infsnz	netw_trans@mensaje^0,f,c
  3582   001DCC  2A02               	incf	(netw_trans@mensaje+1)^0,f,c
  3583   001DCE                     i2l1750:
  3584                           
  3585                           ;main.c: 228:     while (*mensaje != '\0')
  3586   001DCE  C001  FFF6         	movff	netw_trans@mensaje,tblptrl
  3587   001DD2  C002  FFF7         	movff	netw_trans@mensaje+1,tblptrh
  3588   001DD6  6AF8               	clrf	tblptru,c
  3589   001DD8  0E07               	movlw	(high __ramtop+-1)
  3590   001DDA  64F7               	cpfsgt	tblptrh,c
  3591   001DDC  D003               	bra	i2u121_47
  3592   001DDE  0008               	tblrd		*
  3593   001DE0  50F5               	movf	tablat,w,c
  3594   001DE2  D005               	bra	i2u121_40
  3595   001DE4                     i2u121_47:
  3596   001DE4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3597   001DE8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3598   001DEC  50E7               	movf	indf1,w,c
  3599   001DEE                     i2u121_40:
  3600   001DEE  0900               	iorlw	0
  3601   001DF0  A4D8               	btfss	status,2,c
  3602   001DF2  EFFD  F00E         	goto	i2u122_41
  3603   001DF6  EFFF  F00E         	goto	i2u122_40
  3604   001DFA                     i2u122_41:
  3605   001DFA  EFCD  F00E         	goto	i2l123
  3606   001DFE                     i2u122_40:
  3607   001DFE  0012               	return		;funcret
  3608   001E00                     __end_of_netw_trans:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _atoi *****************
  3612 ;; Defined at:
  3613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atoi.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  s               1    6[COMRAM] PTR const unsigned char 
  3616 ;;		 -> arreglo(12), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  n               2   11[COMRAM] int 
  3619 ;;  neg             1   10[COMRAM] _Bool 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  2    6[COMRAM] int 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3629 ;;      Params:         2       0       0       0       0       0       0       0       0
  3630 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3631 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3632 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3633 ;;Total ram usage:        7 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 1
  3636 ;; This function calls:
  3637 ;;		___wmul
  3638 ;; This function is called by:
  3639 ;;		_netw_procss
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text19
  3644   001794                     __ptext19:
  3645                           	callstack 0
  3646   001794                     _atoi:
  3647                           	callstack 24
  3648   001794  0E00               	movlw	0
  3649   001796  6E0D               	movwf	(atoi@n+1)^0,c
  3650   001798  0E00               	movlw	0
  3651   00179A  6E0C               	movwf	atoi@n^0,c
  3652   00179C  0E00               	movlw	0
  3653   00179E  6E0B               	movwf	atoi@neg^0,c
  3654   0017A0  EFD3  F00B         	goto	i2l1788
  3655   0017A4                     i2l1786:
  3656   0017A4  2A07               	incf	atoi@s^0,f,c
  3657   0017A6                     i2l1788:
  3658   0017A6  5007               	movf	atoi@s^0,w,c
  3659   0017A8  6ED9               	movwf	fsr2l,c
  3660   0017AA  6ADA               	clrf	fsr2h,c
  3661   0017AC  0E20               	movlw	32
  3662   0017AE  18DE               	xorwf	postinc2,w,c
  3663   0017B0  B4D8               	btfsc	status,2,c
  3664   0017B2  EFDD  F00B         	goto	i2u126_41
  3665   0017B6  EFDF  F00B         	goto	i2u126_40
  3666   0017BA                     i2u126_41:
  3667   0017BA  EFD2  F00B         	goto	i2l1786
  3668   0017BE                     i2u126_40:
  3669   0017BE  5007               	movf	atoi@s^0,w,c
  3670   0017C0  6ED9               	movwf	fsr2l,c
  3671   0017C2  6ADA               	clrf	fsr2h,c
  3672   0017C4  50DF               	movf	indf2,w,c
  3673   0017C6  6E09               	movwf	??_atoi^0,c
  3674   0017C8  0EF7               	movlw	247
  3675   0017CA  2609               	addwf	??_atoi^0,f,c
  3676   0017CC  0E04               	movlw	4
  3677   0017CE  6409               	cpfsgt	??_atoi^0,c
  3678   0017D0  EFEC  F00B         	goto	i2u127_41
  3679   0017D4  EFEE  F00B         	goto	i2u127_40
  3680   0017D8                     i2u127_41:
  3681   0017D8  EFD2  F00B         	goto	i2l1786
  3682   0017DC                     i2u127_40:
  3683   0017DC  5007               	movf	atoi@s^0,w,c
  3684   0017DE  6ED9               	movwf	fsr2l,c
  3685   0017E0  6ADA               	clrf	fsr2h,c
  3686   0017E2  0E2D               	movlw	45
  3687   0017E4  18DE               	xorwf	postinc2,w,c
  3688   0017E6  A4D8               	btfss	status,2,c
  3689   0017E8  EFF8  F00B         	goto	i2u128_41
  3690   0017EC  EFFA  F00B         	goto	i2u128_40
  3691   0017F0                     i2u128_41:
  3692   0017F0  EFFF  F00B         	goto	i2l1798
  3693   0017F4                     i2u128_40:
  3694   0017F4  0E01               	movlw	1
  3695   0017F6  6E0B               	movwf	atoi@neg^0,c
  3696   0017F8                     i2l1796:
  3697   0017F8  2A07               	incf	atoi@s^0,f,c
  3698   0017FA  EF28  F00C         	goto	i2l1806
  3699   0017FE                     i2l1798:
  3700   0017FE  5007               	movf	atoi@s^0,w,c
  3701   001800  6ED9               	movwf	fsr2l,c
  3702   001802  6ADA               	clrf	fsr2h,c
  3703   001804  0E2B               	movlw	43
  3704   001806  18DE               	xorwf	postinc2,w,c
  3705   001808  A4D8               	btfss	status,2,c
  3706   00180A  EF09  F00C         	goto	i2u129_41
  3707   00180E  EF0B  F00C         	goto	i2u129_40
  3708   001812                     i2u129_41:
  3709   001812  EF28  F00C         	goto	i2l1806
  3710   001816                     i2u129_40:
  3711   001816  EFFC  F00B         	goto	i2l1796
  3712   00181A                     i2l1802:
  3713   00181A  C00C  F001         	movff	atoi@n,___wmul@multiplier
  3714   00181E  C00D  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3715   001822  0E00               	movlw	0
  3716   001824  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3717   001826  0E0A               	movlw	10
  3718   001828  6E03               	movwf	___wmul@multiplicand^0,c
  3719   00182A  ECE9  F00F         	call	___wmul	;wreg free
  3720   00182E  5007               	movf	atoi@s^0,w,c
  3721   001830  6ED9               	movwf	fsr2l,c
  3722   001832  6ADA               	clrf	fsr2h,c
  3723   001834  50DF               	movf	indf2,w,c
  3724   001836  6E09               	movwf	??_atoi^0,c
  3725   001838  5009               	movf	??_atoi^0,w,c
  3726   00183A  5E01               	subwf	?___wmul^0,f,c
  3727   00183C  0E00               	movlw	0
  3728   00183E  5A02               	subwfb	(?___wmul+1)^0,f,c
  3729   001840  0E30               	movlw	48
  3730   001842  2401               	addwf	?___wmul^0,w,c
  3731   001844  6E0C               	movwf	atoi@n^0,c
  3732   001846  0E00               	movlw	0
  3733   001848  2002               	addwfc	(?___wmul+1)^0,w,c
  3734   00184A  6E0D               	movwf	(atoi@n+1)^0,c
  3735   00184C  EFFC  F00B         	goto	i2l1796
  3736   001850                     i2l1806:
  3737   001850  5007               	movf	atoi@s^0,w,c
  3738   001852  6ED9               	movwf	fsr2l,c
  3739   001854  6ADA               	clrf	fsr2h,c
  3740   001856  50DF               	movf	indf2,w,c
  3741   001858  6E09               	movwf	??_atoi^0,c
  3742   00185A  0ED0               	movlw	208
  3743   00185C  2609               	addwf	??_atoi^0,f,c
  3744   00185E  0E09               	movlw	9
  3745   001860  6409               	cpfsgt	??_atoi^0,c
  3746   001862  EF35  F00C         	goto	i2u130_41
  3747   001866  EF37  F00C         	goto	i2u130_40
  3748   00186A                     i2u130_41:
  3749   00186A  EF0D  F00C         	goto	i2l1802
  3750   00186E                     i2u130_40:
  3751   00186E  500B               	movf	atoi@neg^0,w,c
  3752   001870  A4D8               	btfss	status,2,c
  3753   001872  EF3D  F00C         	goto	i2u131_41
  3754   001876  EF3F  F00C         	goto	i2u131_40
  3755   00187A                     i2u131_41:
  3756   00187A  EF4D  F00C         	goto	i2l875
  3757   00187E                     i2u131_40:
  3758   00187E  C00C  F009         	movff	atoi@n,??_atoi
  3759   001882  C00D  F00A         	movff	atoi@n+1,??_atoi+1
  3760   001886  1E09               	comf	??_atoi^0,f,c
  3761   001888  1E0A               	comf	(??_atoi+1)^0,f,c
  3762   00188A  4A09               	infsnz	??_atoi^0,f,c
  3763   00188C  2A0A               	incf	(??_atoi+1)^0,f,c
  3764   00188E  C009  F007         	movff	??_atoi,?_atoi
  3765   001892  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3766   001896  EF51  F00C         	goto	i2l878
  3767   00189A                     i2l875:
  3768   00189A  C00C  F007         	movff	atoi@n,?_atoi
  3769   00189E  C00D  F008         	movff	atoi@n+1,?_atoi+1
  3770   0018A2                     i2l878:
  3771   0018A2  0012               	return		;funcret
  3772   0018A4                     __end_of_atoi:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function ___wmul *****************
  3776 ;; Defined at:
  3777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  multiplier      2    0[COMRAM] unsigned int 
  3780 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  product         2    4[COMRAM] unsigned int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2    0[COMRAM] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, prodl, prodh
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3792 ;;      Params:         4       0       0       0       0       0       0       0       0
  3793 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3795 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3796 ;;Total ram usage:        6 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_atoi
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text20
  3806   001FD2                     __ptext20:
  3807                           	callstack 0
  3808   001FD2                     ___wmul:
  3809                           	callstack 24
  3810   001FD2  5001               	movf	___wmul@multiplier^0,w,c
  3811   001FD4  0203               	mulwf	___wmul@multiplicand^0,c
  3812   001FD6  CFF3 F005          	movff	prodl,___wmul@product
  3813   001FDA  CFF4 F006          	movff	prodh,___wmul@product+1
  3814   001FDE  5001               	movf	___wmul@multiplier^0,w,c
  3815   001FE0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3816   001FE2  50F3               	movf	243,w,c
  3817   001FE4  2606               	addwf	(___wmul@product+1)^0,f,c
  3818   001FE6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3819   001FE8  0203               	mulwf	___wmul@multiplicand^0,c
  3820   001FEA  50F3               	movf	243,w,c
  3821   001FEC  2606               	addwf	(___wmul@product+1)^0,f,c
  3822   001FEE  C005  F001         	movff	___wmul@product,?___wmul
  3823   001FF2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3824   001FF6  0012               	return		;funcret
  3825   001FF8                     __end_of___wmul:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _buf_clean *****************
  3829 ;; Defined at:
  3830 ;;		line 188 in file "main.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 1
  3851 ;; This function calls:
  3852 ;;		_memset
  3853 ;; This function is called by:
  3854 ;;		_hint
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text21
  3859   001FF8                     __ptext21:
  3860                           	callstack 0
  3861   001FF8                     _buf_clean:
  3862                           	callstack 25
  3863   001FF8                     
  3864                           ;main.c: 191:     memset(arreglo, 0, sizeof(arreglo));
  3865   001FF8  0E3F               	movlw	low _arreglo
  3866   001FFA  6E01               	movwf	memset@dest^0,c
  3867   001FFC  0E00               	movlw	0
  3868   001FFE  6E03               	movwf	(memset@c+1)^0,c
  3869   002000  0E00               	movlw	0
  3870   002002  6E02               	movwf	memset@c^0,c
  3871   002004  0E00               	movlw	0
  3872   002006  6E05               	movwf	(memset@n+1)^0,c
  3873   002008  0E0C               	movlw	12
  3874   00200A  6E04               	movwf	memset@n^0,c
  3875   00200C  ECD1  F00F         	call	_memset	;wreg free
  3876   002010  0012               	return		;funcret
  3877   002012                     __end_of_buf_clean:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _memset *****************
  3881 ;; Defined at:
  3882 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  dest            1    0[COMRAM] PTR void 
  3885 ;;		 -> arreglo(12), 
  3886 ;;  c               2    1[COMRAM] int 
  3887 ;;  n               2    3[COMRAM] unsigned int 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  p               1    5[COMRAM] PTR unsigned char 
  3890 ;;		 -> arreglo(12), 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      PTR void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3900 ;;      Params:         5       0       0       0       0       0       0       0       0
  3901 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3904 ;;Total ram usage:        6 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_buf_clean
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text22
  3914   001FA2                     __ptext22:
  3915                           	callstack 0
  3916   001FA2                     _memset:
  3917                           	callstack 25
  3918   001FA2  C001  F006         	movff	memset@dest,memset@p
  3919   001FA6  EFDB  F00F         	goto	i2l1758
  3920   001FAA                     i2l1754:
  3921   001FAA  5006               	movf	memset@p^0,w,c
  3922   001FAC  6ED9               	movwf	fsr2l,c
  3923   001FAE  6ADA               	clrf	fsr2h,c
  3924   001FB0  C002  FFDF         	movff	memset@c,indf2
  3925   001FB4  2A06               	incf	memset@p^0,f,c
  3926   001FB6                     i2l1758:
  3927   001FB6  0604               	decf	memset@n^0,f,c
  3928   001FB8  A0D8               	btfss	status,0,c
  3929   001FBA  0605               	decf	(memset@n+1)^0,f,c
  3930   001FBC  2804               	incf	memset@n^0,w,c
  3931   001FBE  E106               	bnz	i2u123_41
  3932   001FC0  2805               	incf	(memset@n+1)^0,w,c
  3933   001FC2  A4D8               	btfss	status,2,c
  3934   001FC4  EFE6  F00F         	goto	i2u123_41
  3935   001FC8  EFE8  F00F         	goto	i2u123_40
  3936   001FCC                     i2u123_41:
  3937   001FCC  EFD5  F00F         	goto	i2l1754
  3938   001FD0                     i2u123_40:
  3939   001FD0  0012               	return		;funcret
  3940   001FD2                     __end_of_memset:
  3941                           	callstack 0
  3942                           
  3943                           	psect	rparam
  3944   000000                     
  3945                           	psect	temp
  3946   00004B                     btemp:
  3947                           	callstack 0
  3948   00004B                     	ds	1
  3949   000000                     int$flags	set	btemp
  3950   000000                     wtemp8	set	btemp+1
  3951   000000                     ttemp5	set	btemp+1
  3952   000000                     ttemp6	set	btemp+4
  3953   000000                     ttemp7	set	btemp+8
  3954                           
  3955                           	psect	idloc
  3956                           
  3957                           ;Config register IDLOC0 @ 0x200000
  3958                           ;	unspecified, using default values
  3959   200000                     	org	2097152
  3960   200000  FF                 	db	255
  3961                           
  3962                           ;Config register IDLOC1 @ 0x200001
  3963                           ;	unspecified, using default values
  3964   200001                     	org	2097153
  3965   200001  FF                 	db	255
  3966                           
  3967                           ;Config register IDLOC2 @ 0x200002
  3968                           ;	unspecified, using default values
  3969   200002                     	org	2097154
  3970   200002  FF                 	db	255
  3971                           
  3972                           ;Config register IDLOC3 @ 0x200003
  3973                           ;	unspecified, using default values
  3974   200003                     	org	2097155
  3975   200003  FF                 	db	255
  3976                           
  3977                           ;Config register IDLOC4 @ 0x200004
  3978                           ;	unspecified, using default values
  3979   200004                     	org	2097156
  3980   200004  FF                 	db	255
  3981                           
  3982                           ;Config register IDLOC5 @ 0x200005
  3983                           ;	unspecified, using default values
  3984   200005                     	org	2097157
  3985   200005  FF                 	db	255
  3986                           
  3987                           ;Config register IDLOC6 @ 0x200006
  3988                           ;	unspecified, using default values
  3989   200006                     	org	2097158
  3990   200006  FF                 	db	255
  3991                           
  3992                           ;Config register IDLOC7 @ 0x200007
  3993                           ;	unspecified, using default values
  3994   200007                     	org	2097159
  3995   200007  FF                 	db	255
  3996                           
  3997                           	psect	config
  3998                           
  3999                           ;Config register CONFIG1L @ 0x300000
  4000                           ;	unspecified, using default values
  4001                           ;	PLL Selection
  4002                           ;	PLLSEL = 0x0, unprogrammed default
  4003                           ;	PLL Enable Configuration bit
  4004                           ;	CFGPLLEN = 0x0, unprogrammed default
  4005                           ;	CPU System Clock Postscaler
  4006                           ;	CPUDIV = 0x0, unprogrammed default
  4007                           ;	Low Speed USB mode with 48 MHz system clock
  4008                           ;	LS48MHZ = 0x0, unprogrammed default
  4009   300000                     	org	3145728
  4010   300000  00                 	db	0
  4011                           
  4012                           ;Config register CONFIG1H @ 0x300001
  4013                           ;	unspecified, using default values
  4014                           ;	Oscillator Selection
  4015                           ;	FOSC = 0x5, unprogrammed default
  4016                           ;	Primary Oscillator Shutdown
  4017                           ;	PCLKEN = 0x1, unprogrammed default
  4018                           ;	Fail-Safe Clock Monitor
  4019                           ;	FCMEN = 0x0, unprogrammed default
  4020                           ;	Internal/External Oscillator Switchover
  4021                           ;	IESO = 0x0, unprogrammed default
  4022   300001                     	org	3145729
  4023   300001  25                 	db	37
  4024                           
  4025                           ;Config register CONFIG2L @ 0x300002
  4026                           ;	unspecified, using default values
  4027                           ;	Power-up Timer Enable
  4028                           ;	nPWRTEN = 0x1, unprogrammed default
  4029                           ;	Brown-out Reset Enable
  4030                           ;	BOREN = 0x3, unprogrammed default
  4031                           ;	Brown-out Reset Voltage
  4032                           ;	BORV = 0x3, unprogrammed default
  4033                           ;	Low-Power Brown-out Reset
  4034                           ;	nLPBOR = 0x1, unprogrammed default
  4035   300002                     	org	3145730
  4036   300002  5F                 	db	95
  4037                           
  4038                           ;Config register CONFIG2H @ 0x300003
  4039                           ;	unspecified, using default values
  4040                           ;	Watchdog Timer Enable bits
  4041                           ;	WDTEN = 0x3, unprogrammed default
  4042                           ;	Watchdog Timer Postscaler
  4043                           ;	WDTPS = 0xF, unprogrammed default
  4044   300003                     	org	3145731
  4045   300003  3F                 	db	63
  4046                           
  4047                           ; Padding undefined space
  4048   300004                     	org	3145732
  4049   300004  FF                 	db	255
  4050                           
  4051                           ;Config register CONFIG3H @ 0x300005
  4052                           ;	unspecified, using default values
  4053                           ;	CCP2 MUX bit
  4054                           ;	CCP2MX = 0x1, unprogrammed default
  4055                           ;	PORTB A/D Enable bit
  4056                           ;	PBADEN = 0x1, unprogrammed default
  4057                           ;	Timer3 Clock Input MUX bit
  4058                           ;	T3CMX = 0x1, unprogrammed default
  4059                           ;	SDO Output MUX bit
  4060                           ;	SDOMX = 0x1, unprogrammed default
  4061                           ;	Master Clear Reset Pin Enable
  4062                           ;	MCLRE = 0x1, unprogrammed default
  4063   300005                     	org	3145733
  4064   300005  D3                 	db	211
  4065                           
  4066                           ;Config register CONFIG4L @ 0x300006
  4067                           ;	unspecified, using default values
  4068                           ;	Stack Full/Underflow Reset
  4069                           ;	STVREN = 0x1, unprogrammed default
  4070                           ;	Single-Supply ICSP Enable bit
  4071                           ;	LVP = 0x1, unprogrammed default
  4072                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4073                           ;	ICPRT = 0x0, unprogrammed default
  4074                           ;	Extended Instruction Set Enable bit
  4075                           ;	XINST = 0x0, unprogrammed default
  4076                           ;	Background Debugger Enable bit
  4077                           ;	DEBUG = 0x1, unprogrammed default
  4078   300006                     	org	3145734
  4079   300006  85                 	db	133
  4080                           
  4081                           ; Padding undefined space
  4082   300007                     	org	3145735
  4083   300007  FF                 	db	255
  4084                           
  4085                           ;Config register CONFIG5L @ 0x300008
  4086                           ;	unspecified, using default values
  4087                           ;	Block 0 Code Protect
  4088                           ;	CP0 = 0x1, unprogrammed default
  4089                           ;	Block 1 Code Protect
  4090                           ;	CP1 = 0x1, unprogrammed default
  4091                           ;	Block 2 Code Protect
  4092                           ;	CP2 = 0x1, unprogrammed default
  4093                           ;	Block 3 Code Protect
  4094                           ;	CP3 = 0x1, unprogrammed default
  4095   300008                     	org	3145736
  4096   300008  0F                 	db	15
  4097                           
  4098                           ;Config register CONFIG5H @ 0x300009
  4099                           ;	unspecified, using default values
  4100                           ;	Boot Block Code Protect
  4101                           ;	CPB = 0x1, unprogrammed default
  4102                           ;	Data EEPROM Code Protect
  4103                           ;	CPD = 0x1, unprogrammed default
  4104   300009                     	org	3145737
  4105   300009  C0                 	db	192
  4106                           
  4107                           ;Config register CONFIG6L @ 0x30000A
  4108                           ;	unspecified, using default values
  4109                           ;	Block 0 Write Protect
  4110                           ;	WRT0 = 0x1, unprogrammed default
  4111                           ;	Block 1 Write Protect
  4112                           ;	WRT1 = 0x1, unprogrammed default
  4113                           ;	Block 2 Write Protect
  4114                           ;	WRT2 = 0x1, unprogrammed default
  4115                           ;	Block 3 Write Protect
  4116                           ;	WRT3 = 0x1, unprogrammed default
  4117   30000A                     	org	3145738
  4118   30000A  0F                 	db	15
  4119                           
  4120                           ;Config register CONFIG6H @ 0x30000B
  4121                           ;	unspecified, using default values
  4122                           ;	Configuration Registers Write Protect
  4123                           ;	WRTC = 0x1, unprogrammed default
  4124                           ;	Boot Block Write Protect
  4125                           ;	WRTB = 0x1, unprogrammed default
  4126                           ;	Data EEPROM Write Protect
  4127                           ;	WRTD = 0x1, unprogrammed default
  4128   30000B                     	org	3145739
  4129   30000B  E0                 	db	224
  4130                           
  4131                           ;Config register CONFIG7L @ 0x30000C
  4132                           ;	unspecified, using default values
  4133                           ;	Block 0 Table Read Protect
  4134                           ;	EBTR0 = 0x1, unprogrammed default
  4135                           ;	Block 1 Table Read Protect
  4136                           ;	EBTR1 = 0x1, unprogrammed default
  4137                           ;	Block 2 Table Read Protect
  4138                           ;	EBTR2 = 0x1, unprogrammed default
  4139                           ;	Block 3 Table Read Protect
  4140                           ;	EBTR3 = 0x1, unprogrammed default
  4141   30000C                     	org	3145740
  4142   30000C  0F                 	db	15
  4143                           
  4144                           ;Config register CONFIG7H @ 0x30000D
  4145                           ;	unspecified, using default values
  4146                           ;	Boot Block Table Read Protect
  4147                           ;	EBTRB = 0x1, unprogrammed default
  4148   30000D                     	org	3145741
  4149   30000D  40                 	db	64
  4150                           tosu	equ	0xFFF
  4151                           tosh	equ	0xFFE
  4152                           tosl	equ	0xFFD
  4153                           stkptr	equ	0xFFC
  4154                           pclatu	equ	0xFFB
  4155                           pclath	equ	0xFFA
  4156                           pcl	equ	0xFF9
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           indf0	equ	0xFEF
  4164                           postinc0	equ	0xFEE
  4165                           postdec0	equ	0xFED
  4166                           preinc0	equ	0xFEC
  4167                           plusw0	equ	0xFEB
  4168                           fsr0h	equ	0xFEA
  4169                           fsr0l	equ	0xFE9
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           postinc1	equ	0xFE6
  4173                           postdec1	equ	0xFE5
  4174                           preinc1	equ	0xFE4
  4175                           plusw1	equ	0xFE3
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           bsr	equ	0xFE0
  4179                           indf2	equ	0xFDF
  4180                           postinc2	equ	0xFDE
  4181                           postdec2	equ	0xFDD
  4182                           preinc2	equ	0xFDC
  4183                           plusw2	equ	0xFDB
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    16
    Data        2
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      74
    BANK0           160     62     101
    BANK1           256     22      22
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    netw_trans@mensaje	PTR const unsigned char  size(2) Largest target is 30
		 -> arreglo(COMRAM[12]), netw_procss@mensaje(BANK0[30]), netw_procss@message(BANK0[30]), STR_10(CODE[6]), 
		 -> STR_2(CODE[11]), STR_3(CODE[3]), STR_4(CODE[6]), STR_9(CODE[6]), 

    S1694$buffer	PTR unsigned char  size(2) Largest target is 0

    S1694$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_7(CODE[23]), STR_8(CODE[22]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 30
		 -> netw_procss@mensaje(BANK0[30]), netw_procss@message(BANK0[30]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_6(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 12
		 -> arreglo(COMRAM[12]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_5(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_7(CODE[23]), STR_8(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_7(CODE[23]), STR_8(CODE[22]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_7(CODE[23]), STR_8(CODE[22]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lint in COMRAM

    None.

Critical Paths under _hint in COMRAM

    _netw_procss->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->i2___awmod
    _atoi->___wmul
    _buf_clean->_memset

Critical Paths under _main in BANK0

    None.

Critical Paths under _lint in BANK0

    None.

Critical Paths under _hint in BANK0

    _hint->_netw_procss

Critical Paths under _main in BANK1

    None.

Critical Paths under _lint in BANK1

    _lint->___awmod
    ___awmod->___awdiv

Critical Paths under _hint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lint in BANK2

    None.

Critical Paths under _hint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lint in BANK3

    None.

Critical Paths under _hint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lint in BANK4

    None.

Critical Paths under _hint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lint in BANK5

    None.

Critical Paths under _hint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lint in BANK6

    None.

Critical Paths under _hint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lint in BANK7

    None.

Critical Paths under _hint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _lint                                                 8     8      0    2821
                                             14 BANK1      8     8      0
                            ___awdiv
                            ___awmod
                              _shift
 ---------------------------------------------------------------------------------
 (3) _shift                                                3     3      0     173
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1373
                                              8 BANK1      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1275
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _hint                                                12    12      0    7902
                                             42 COMRAM    12    12      0
                          _buf_clean
                        _netw_procss
                         _netw_trans
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _netw_procss                                         62    62      0    6047
                                              0 BANK0     62    62      0
                               _atoi
                         _netw_trans
                            _sprintf
                             _strcmp
                            _strncmp
                          i2___awmod
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              5     1      4     635
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _strcmp                                               3     1      2     264
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             19    15      4    3291
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             4     1      3    2788
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           11     8      3    2438
                                             10 COMRAM    11     8      3
                                _abs
                              _fputc
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (6) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _netw_trans                                           2     0      2     653
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2     615
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _buf_clean                                            0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               6     1      5     324
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config

 _lint (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _shift

 _hint (ROOT)
   _buf_clean
     _memset
   _netw_procss
     _atoi
       ___wmul
     _netw_trans
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _abs
             i2___awmod (ARG)
           _fputc
             _putch
           i2___awdiv
           i2___awmod
     _strcmp
     _strncmp
     i2___awmod
   _netw_trans
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     16      16       7        8.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      65       5       63.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4A       1       78.7%
BITBIGSFRlhhl       1B      0       0      32        0.0%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRhhhlll     17      0       0      24        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlhhh        C      0       0      31        0.0%
BITBIGSFRhhll        B      0       0      26        0.0%
BITBIGSFRll          8      0       0      34        0.0%
BITBIGSFRhhhlll      7      0       0      25        0.0%
BITBIGSFRhlhlh       4      0       0      28        0.0%
BITBIGSFRhlhll       4      0       0      29        0.0%
BITBIGSFRhhhlll      1      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhlhh        1      0       0      27        0.0%
BITBIGSFRhhhllh      1      0       0      22        0.0%
BITBIGSFRhll         1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      35        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 16 11:18:07 2024

                      _i 003E             ___awdiv@sign 0105                       bsr 0FE0  
    ___wmul@multiplicand 0003                      l103 2018                      l104 2018  
                    l188 1D94                      _abs 1F6E             ___awmod@sign 010D  
                    wreg 0FE8               _TXSTA1bits 0FAC                     ?_abs 0007  
                   l2132 2012                     l2134 2016                     l1900 1D32  
                   l1910 1D48                     l1902 1D34                     l1920 1D52  
                   l1912 1D4A                     l1904 1D36                     l1930 1D68  
                   l1922 1D54                     l1914 1D4C                     l1906 1D44  
                   l1940 1D86                     l1932 1D6E                     l1924 1D56  
                   l1916 1D4E                     l1908 1D46                     l1942 1D88  
                   l1934 1D70                     l1926 1D58                     l1918 1D50  
                   l1870 1D0C                     l1944 1D8A                     l1936 1D82  
                   l1928 1D5A                     l1880 1D16                     l1872 1D0E  
                   l1864 1CF6                     l1946 1D8C                     l1938 1D84  
                   l1890 1D28                     l1882 1D18                     l1874 1D10  
                   l1866 1D08                     l1948 1D92                     l1892 1D2A  
                   l1884 1D1A                     l1876 1D12                     l1868 1D0A  
                   l1894 1D2C                     l1886 1D20                     l1878 1D14  
                   l1896 1D2E                     l1888 1D22                     l1898 1D30  
                   STR_1 129B                     STR_2 1290                     STR_3 12B2  
                   STR_4 12AC                     STR_5 12A4                     STR_6 129B  
                   STR_7 1263                     STR_8 127A                     STR_9 12AC  
                   i1l55 1E80                     i1l56 1EB8                     i1l57 1E94  
                   i1l59 1EBC                     i1l93 10D2                     i1l95 1122  
                   i1l96 1172                     i1l97 11C2                     i2l66 148A  
                   i1l98 122E                     abs@a 0007                     _dbuf 009E  
                   _atoi 1794                     _main 2012                     _hint 1008  
                   _lint 1018                     _t_ms 00C3                     _prec 0039  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf1 0FE7  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 004B                     prodh 0FF4                     prodl 0FF3  
                   start 124E             ___param_bank 0000                    ??_abs 0009  
                  ?_atoi 0007                    ?_main 0001                    ?_hint 0001  
                  ?_lint 0001          __end_of___awdiv 196A                    STR_10 12AC  
        __end_of___awmod 1B9C          ___awdiv@divisor 0102                    i1l422 1968  
                  i2l123 1D9A                    i1l435 1B9A                    i2l109 2010  
                  i2l118 1792                    i2l127 1DFE                    i2l422 1A2C  
                  i2l191 1FF6                    i2l435 1C4A                    i2l942 1FA0  
                  i2l935 1F38                    i2l929 166C                    i2l954 1CF4  
                  i2l875 189A                    i2l939 1F88                    i2l891 1F6C  
                  i2l884 1FD0          ___awdiv@counter 0104                    i2l965 2022  
                  i2l973 1E64                    i2l878 18A2                    i2l977 1AE8  
           vfpfcnvrt@fmt 000C                    _TMR0H 0FD7                    _TMR0L 0FD6  
                  _TRISE 0F96                    _TXREG 0FAD                    _flags 003D  
                  _firma 1006                    _fputc 1C4C                    _shift 1E66  
                  atoi@n 000C                    atoi@s 0007                    _width 0037  
                  _putch 2022                    tablat 0FF5                    ttemp5 004C  
                  ttemp6 004F                    ttemp7 0053                    status 0FD8  
                  wtemp8 004C          __end_of_sprintf 1F6E          __end_of_strncmp 1AEA  
        __initialization 1EBE             __end_of_atoi 18A4             __end_of_main 2020  
           __end_of_hint 14B6             __end_of_lint 124E                   ??_atoi 0009  
                 ??_main 0116                   ??_hint 002B                   ??_lint 010E  
          __activetblptr 0002             ?_netw_procss 0001                   ?_fputc 0001  
                 ?_shift 0001         ___awdiv@dividend 0100                   _ANSELA 0F5B  
                 ?_putch 0001                   _ANSELC 0F5D                   _ANSELD 0F5E  
                 _ANSELE 0F5F                   i1l2200 1960                   i1l2210 1B06  
                 i1l2220 1B3A                   i1l2212 1B0A                   i1l2204 1AEA  
                 i1l2230 1B74                   i1l2222 1B42                   i1l2214 1B18  
                 i1l2206 1AF0                   i1l2150 1EA0                   i1l2160 18A4  
                 i1l2224 1B50                   i1l2232 1B7A                   i1l2216 1B20  
                 i1l2208 1AFE                   i1l2152 1EA2                   i1l2144 1E8E  
                 i1l2136 1E6A                   i1l2240 1036                   i1l2170 18D2  
                 i1l2162 18AA                   i1l2234 1B8A                   i1l2226 1B66  
                 i1l2218 1B32                   i1l2154 1EA4                   i1l2146 1E96  
                 i1l2138 1E76                   i1l2250 1062                   i1l2242 1044  
                 i1l2180 1900                   i1l2172 18DA                   i1l2164 18B8  
                 i1l2236 1B92                   i1l2228 1B6E                   i1l2156 1EA6  
                 i1l2148 1E9C                   i1l2260 10DA                   i1l2252 109C  
                 i1l2244 1048                   i1l2190 193A                   i1l2182 1908  
                 i1l2174 18DE                   i1l2166 18C0                   i1l2158 1EA8  
                 i1l2262 112A                   i1l2254 10A2                   i1l2270 11FC  
                 i1l2246 105A                   i1l2192 193C                   i1l2184 1916  
                 i1l2176 18E6                   i1l2168 18C4                   i1l2264 117A  
                 i1l2272 1224                   i1l2256 10AA                   i1l2248 105E  
                 i1l2194 1942                   i1l2186 191C                   i1l2178 18F8  
                 i1l2274 122C                   i1l2266 11CA                   i1l2258 10C6  
                 i1l2188 1932                   i1l2196 1948                   i1l2198 1958  
                 i2l2030 12DE                   i2l2032 12EC                   i2l2050 1338  
                 i2l2034 12FE                   i2l2042 1310                   i2l2060 13BC  
                 i2l2052 134A                   i2l2044 1320                   i2l2036 1304  
                 i2l2070 13F0                   i2l2062 13C0                   i2l2054 135A  
                 i2l2046 132C                   i2l2038 1308                   i2l1600 19CC  
                 i2l2080 144A                   i2l2072 1402                   i2l2064 13C4  
                 i2l2056 1380                   i2l2048 132E                   i2l1610 1A00  
                 i2l1602 19DA                   i2l2082 145C                   i2l2074 1414  
                 i2l2066 13CC                   i2l2058 1392                   i2l2090 1488  
                 i2l1612 1A06                   i2l1604 19E0                   i2l2084 1474  
                 i2l2076 1426                   i2l2068 13DE                   i2l1710 1FEE  
                 i2l1606 19F6                   i2l1614 1A0C                   i2l1630 1BBA  
                 i2l1622 1B9C                   i2l1702 164A                   i2l2078 1438  
                 i2l1560 1C4C                   i2l1616 1A1C                   i2l1608 19FE  
                 i2l1640 1BF2                   i2l1632 1BC8                   i2l1624 1BA0  
                 i2l1720 1F30                   i2l1810 187E                   i2l1802 181A  
                 i2l1570 1CC4                   i2l1562 1C5C                   i2l1618 1A24  
                 i2l1642 1C00                   i2l1650 1C2A                   i2l1634 1BD0  
                 i2l1626 1BAE                   i2l1714 1EFC                   i2l1730 1A54  
                 i2l1708 1FD2                   i2l1564 1C6C                   i2l1580 196E  
                 i2l1652 1C3A                   i2l1644 1C16                   i2l1636 1BE2  
                 i2l1628 1BB6                   i2l1660 14D8                   i2l1716 1F04  
                 i2l1740 1AC8                   i2l1732 1A5E                   i2l1724 1A2E  
                 i2l1806 1850                   i2l1750 1DCE                   i2l1574 1F6E  
                 i2l1566 1C76                   i2l1590 199E                   i2l1582 197C  
                 i2l1654 1C42                   i2l1646 1C1E                   i2l1638 1BEA  
                 i2l1670 1516                   i2l1662 14E0                   i2l1718 1F14  
                 i2l1734 1A74                   i2l1726 1A48                   i2l1752 1FA2  
                 i2l1808 186E                   i2l1744 1D96                   i2l1576 1F7C  
                 i2l1568 1C92                   i2l1592 19A2                   i2l1584 1984  
                 i2l1648 1C24                   i2l1680 159C                   i2l1672 1532  
                 i2l1664 14EC                   i2l1760 1E00                   i2l1736 1A90  
                 i2l1840 1694                   i2l1754 1FAA                   i2l1746 1DA8  
                 i2l1594 19AA                   i2l1586 1988                   i2l1578 196A  
                 i2l1690 15FA                   i2l1682 15B8                   i2l1674 154A  
                 i2l1666 14F0                   i2l1658 14B6                   i2l1762 1E04  
                 i2l1738 1AA2                   i2l1850 1702                   i2l1842 16B2  
                 i2l1756 1FB4                   i2l1836 1FF8                   i2l1748 1DCA  
                 i2l1596 19BC                   i2l1588 1996                   i2l1692 160C  
                 i2l1684 15CA                   i2l1676 1554                   i2l1668 14FA  
                 i2l1780 1F62                   i2l1772 1F3A                   i2l1764 1E08  
                 i2l1852 171E                   i2l1860 176E                   i2l1844 16C6  
                 i2l1758 1FB6                   i2l1790 17BE                   i2l1598 19C4  
                 i2l1694 1626                   i2l1686 15DA                   i2l1678 156C  
                 i2l1774 1F42                   i2l1766 1E2E                   i2l1854 1744  
                 i2l1846 16D4                   i2l1862 1782                   i2l1838 166E  
                 i2l1792 17DC                   i2l1784 1794                   i2l1688 15EA  
                 i2l1696 1628                   i2l1776 1F4A                   i2l1768 1E44  
                 i2l1856 174C                   i2l1848 16E4                   i2l1794 17F4  
                 i2l1786 17A4                   i2l1698 163E                   i2l1778 1F52  
                 i2l1858 1760                   i2l1796 17F8                   i2l1788 17A6  
                 i2l1798 17FE                   _INTCON 0FF2                   _RCREG1 0FAE  
                 _OSCCON 0FD3            vfpfcnvrt@done 000F                   _SPBRG1 0FAF  
           vfprintf@cfmt 0019                   ___wmul 1FD2                ??___awdiv 0104  
              ??___awmod 010C                   _config 1CF6                   _memset 1FA2  
                 clear_0 1EDC                   clear_1 1EE8         ___awdiv@quotient 0106  
        ___awmod@divisor 010A                   isa$std 0001          ___awmod@counter 010C  
                 _strcmp 1E00           i2___awdiv@sign 0006                   fputc@c 0001  
      __end_ofi2___awdiv 1A2E        __end_ofi2___awmod 1C4C             __mediumconst 0000  
                 shift@k 0100                   shift@n 0102                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8                   putch@c 0001  
       __end_of_vfprintf 1F3A           i2___awmod@sign 0006                ??_sprintf 001E  
              ??_strncmp 0005               __accesstop 0060  __end_of__initialization 1EEE  
          ___rparam_used 0001           __pcstackCOMRAM 0001             __pidataBANK0 2020  
          __end_of_firma 1008            __end_of_fputc 1CF6            __end_of_shift 1EBE  
          __end_of_putch 2024                  ??_fputc 0004                  ??_shift 0100  
                ??_putch 0001               __pbssBANK0 009E                  ?___wmul 0001  
                ?_config 0001                  ?_memset 0001                  ?_strcmp 0001  
                _OSCCON2 0FD2                  _OSCTUNE 0F9B                  i2u90_40 1F7C  
                i2u90_41 1F78                  i2u91_40 197C                  i2u91_41 1978  
                _SPBRGH1 0FB0                  i2u92_40 1996                  i2u92_41 1992  
                i2u93_40 19BC                  i2u93_41 19B8                  i2u86_40 1C5C  
                i2u94_40 19DA                  i2u86_41 1C58                  i2u94_41 19D6  
                i2u87_40 1C6C                  i2u95_40 19F6                  i2u87_41 1C68  
                i2u95_41 19F2                  i2u88_40 1C92                  i2u96_40 1A1C  
                i2u88_41 1C8E                  i2u96_41 1A18                  i2u89_40 1CC4  
                i2u97_40 1BAE                  i2u89_41 1CC0                  i2u97_41 1BAA  
                i2u98_40 1BC8                  i2u98_41 1BC4                  i2u99_40 1BE2  
                i2u99_41 1BDE                  __Hparam 0000                  __Lparam 0000  
      __end_of_buf_clean 2012                  ___awdiv 18A4                  ___awmod 1AEA  
              ?_vfprintf 0016             __psmallconst 1252                  __pcinit 1EBE  
                __ramtop 0800                  __ptext0 2012                  __ptext1 1CF6  
                __ptext3 1E66                  __ptext4 1AEA                  __ptext5 18A4  
                __ptext7 166E                  __ptext8 1A2E                  __ptext9 1E00  
                _arreglo 003F                _T0CONbits 0FD5         ___awmod@dividend 0108  
                atoi@neg 000B                  _sprintf 1F3A                  _strncmp 1A2E  
         __pintcode_body 12B6     end_of_initialization 1EEE               _netw_trans 1D96  
      __end_of_segmentos 1263                  fputc@fp 0003                  memset@c 0002  
                memset@n 0004                  memset@p 0006            __Lmediumconst 0000  
                int_func 12B6            __p_firma_text 1006        __end_of_vfpfcnvrt 166E  
                postdec2 0FDD                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE         vfpfcnvrt@convarg 0011               ??_vfprintf 0019  
                strcmp@l 0001                  strcmp@r 0002                _TRISAbits 0F92  
              _TRISBbits 0F93                _TRISCbits 0F94                _TRISDbits 0F95  
              i2___awdiv 196A                i2___awmod 1B9C       netw_procss@mensaje 007E  
              _TXSTAbits 0FAC       netw_procss@message 0060       i2___awdiv@dividend 0001  
            vfpfcnvrt@ap 000D              vfpfcnvrt@cp 0010              vfpfcnvrt@fp 000B  
         __end_of___wmul 1FF8           __end_of_config 1D96           __end_of_memset 1FD2  
         __end_of_strcmp 1E66      start_initialization 1EBE       i2___awdiv@quotient 0007  
            __end_of_abs 1FA2               ?i2___awdiv 0001               ?i2___awmod 0001  
            ?_netw_trans 0001              vfprintf@fmt 0017                 ??___wmul 0005  
               ??_config 0116              __pdataBANK0 00C3                 ??_memset 0006  
             memset@dest 0001                 ??_strcmp 0003              __pbssCOMRAM 0037  
          __pcstackBANK0 0060            __pcstackBANK1 0100                __pintcode 1008  
               ?___awdiv 0100                 ?___awmod 0108                _buf_clean 1FF8  
            __pintcodelo 1018              __smallconst 1252            ??_netw_procss 002B  
               _BAUDCON1 0FB8              ??i2___awdiv 0005              ??i2___awmod 0005  
               ?_sprintf 001A                 ?_strncmp 0001           ___wmul@product 0005  
               _LATAbits 0F89                 _LATBbits 0F8A                 _LATCbits 0F8B  
               _LATEbits 0F8D                 _IPR1bits 0F9F                 _PIE1bits 0F9D  
              _segmentos 1253                 i1u171_20 1E8E                 i1u171_21 1E8A  
               i1u180_20 1B18                 i1u172_20 1EB8                 i1u180_21 1B14  
               i1u172_21 1EB4                 i2u100_40 1C00                 i2u100_41 1BFC  
               i1u173_20 18B8                 i1u181_20 1B32                 i1u173_21 18B4  
               i1u181_21 1B2E                 i2u101_40 1C16                 i2u101_41 1C12  
               i1u174_20 18D2                 i1u182_20 1B50                 i1u174_21 18CE  
               i1u182_21 1B4C                 i2u102_40 1C3A                 i2u110_40 15EA  
               i2u102_41 1C36                 i2u110_41 15E6                 i1u175_20 18F8  
               i1u183_20 1B66                 i1u175_21 18F4                 i1u183_21 1B62  
               i2u111_40 15FA                 i2u103_40 14D8                 i2u111_41 15F6  
               i2u103_41 14D4                 i1u176_20 1916                 i1u184_20 1B8A  
               i1u176_21 1912                 i1u184_21 1B86                 i2u120_40 1DC8  
               i2u112_40 163A                 i2u104_40 1516                 i2u112_41 1636  
               i2u104_41 1512                 i1u177_20 1932                 i1u185_20 1044  
               i1u177_21 192E                 i1u185_21 1040                 i2u120_47 1DBE  
               i2u121_40 1DEE                 i2u105_40 1532                 i2u113_40 1F30  
               i2u105_41 152E                 i2u113_41 1F2C                 i1u178_20 1958  
               i1u186_20 105A                 i1u178_21 1954                 i1u186_21 1056  
               i2u121_47 1DE4                 i2u130_40 186E                 i2u122_40 1DFE  
               i2u106_40 1568                 i2u114_40 1A48                 i2u130_41 186A  
               i2u122_41 1DFA                 i2u106_41 1562                 i2u114_41 1A44  
               i1u179_20 1AFE                 i1u187_20 109C                 i1u179_21 1AFA  
               i1u187_21 1098                 i2u123_40 1FD0                 i2u131_40 187E  
               i2u107_40 156A                 i2u115_40 1A74                 i2u123_41 1FCC  
               i2u131_41 187A                 i2u115_41 1A70                 i1u188_20 10C6  
               i1u188_21 10C2                 i2u108_40 15CA                 i2u124_40 1E2E  
               i2u116_40 1A90                 i2u108_41 15C6                 i2u124_41 1E2A  
               i2u116_41 1A8C                 i2u109_40 15DA                 i2u125_40 1E44  
               i2u117_40 1AA2                 i2u109_41 15D6                 i2u125_41 1E40  
               i2u117_41 1A9E                 i2u126_40 17BE                 i2u118_40 1AC8  
               i2u134_40 1694                 i2u126_41 17BA                 i2u118_41 1AC4  
               i2u134_41 1690                 i2u127_40 17DC                 i2u119_40 1DA8  
               i2u135_40 16B2                 i2u151_40 12EC                 i2u127_41 17D8  
               i2u119_41 1DA4                 i2u135_41 16AE                 i2u151_41 12E8  
               i2u128_40 17F4                 i2u136_40 1702                 i2u160_40 1402  
               i2u152_40 12FE                 i2u128_41 17F0                 i2u136_41 16FE  
               i2u160_41 13FE                 i2u152_41 12FA                 i2u129_40 1816  
               i2u137_40 171E                 i2u161_40 1414                 i2u153_40 1320  
               i2u129_41 1812                 i2u137_41 171A                 i2u161_41 1410  
               i2u153_41 131C                 i2u138_40 1744                 i2u162_40 1426  
               i2u154_40 134A                 i2u138_41 1740                 i2u162_41 1422  
               i2u154_41 1346                 i2u163_40 1438                 i2u155_40 135A  
               i2u163_41 1434                 i2u155_41 1356                 i2u164_40 144A  
               i2u156_40 1380                 i2u164_41 1446                 i2u156_41 137C  
               i2u165_40 145C                 i2u157_40 1392                 i2u165_41 1458  
               i2u157_41 138E                 i2u166_40 1474                 i2u158_40 13DE  
               i2u166_41 1470                 i2u158_41 13DA                 i2u159_40 13F0  
               i2u159_41 13EC                 _PIR1bits 0F9E                 _RCONbits 0FD0  
             ?_buf_clean 0001                _vfpfcnvrt 14B6        ___wmul@multiplier 0001  
      i2___awdiv@divisor 0003        i2___awdiv@counter 0005               vfpfcnvrt@c 0015  
            _INTCON2bits 0FF1      __end_of_netw_procss 1794       i2___awmod@dividend 0001  
               __Hrparam 0000               vfprintf@ap 0018                 __Lrparam 0000  
             vfprintf@fp 0016                lint@cont1 00C0                lint@cont2 00BE  
              lint@pulso 003B               ?_vfpfcnvrt 000B               _ANSELAbits 0F5B  
      netw_trans@mensaje 0001               sprintf@fmt 001B                 __ptext10 1F3A  
               __ptext11 1EFC                 __ptext20 1FD2                 __ptext12 14B6  
               __ptext21 1FF8                 __ptext13 1B9C                 __ptext22 1FA2  
               __ptext14 196A                 __ptext15 1C4C                 __ptext16 2022  
               __ptext17 1F6E                 __ptext18 1D96                 __ptext19 1794  
           ??_netw_trans 0003                shift@dato 0101                 isa$xinst 0000  
               int$flags 004B                 _vfprintf 1EFC              ??_buf_clean 0007  
               hint@leer 0036       __end_of_netw_trans 1E00        i2___awmod@divisor 0003  
      i2___awmod@counter 0005              _netw_procss 166E               _INTCONbits 0FF2  
               lint@rota 00C2                 intlevel1 0000                 intlevel2 0000  
              sprintf@ap 001E             _VREFCON1bits 0F7C             _VREFCON2bits 0F7B  
             _RCSTA1bits 0FAB              ??_vfpfcnvrt 000E                 sprintf@f 001F  
               sprintf@s 001A  netw_procss@tiempo_nuevo 009C                 strncmp@l 0001  
               strncmp@n 0003                 strncmp@r 0002            _firma_absaddr 1006  
