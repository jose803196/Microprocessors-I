

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 10 04:22:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	_firma_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34   000000                     
    35                           ; Generated 05/01/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F45K50 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	mediumconst
    71   0010D0                     __pmediumconst:
    72                           	callstack 0
    73   0010D0  00                 	db	0
    74   0010D1                     _mens1:
    75                           	callstack 0
    76   0010D1  50                 	db	80
    77   0010D2  75                 	db	117
    78   0010D3  6C                 	db	108
    79   0010D4  73                 	db	115
    80   0010D5  61                 	db	97
    81   0010D6  64                 	db	100
    82   0010D7  6F                 	db	111
    83   0010D8  72                 	db	114
    84   0010D9  20                 	db	32
    85   0010DA  52                 	db	82
    86   0010DB  42                 	db	66
    87   0010DC  30                 	db	48
    88   0010DD  20                 	db	32
    89   0010DE  61                 	db	97
    90   0010DF  63                 	db	99
    91   0010E0  74                 	db	116
    92   0010E1  69                 	db	105
    93   0010E2  76                 	db	118
    94   0010E3  61                 	db	97
    95   0010E4  64                 	db	100
    96   0010E5  6F                 	db	111
    97   0010E6  20                 	db	32
    98   0010E7  0A                 	db	10
    99   0010E8  00                 	db	0
   100   0010E9                     __end_of_mens1:
   101                           	callstack 0
   102   0010E9                     _segmentos:
   103                           	callstack 0
   104   0010E9  5F                 	db	95
   105   0010EA  41                 	db	65
   106   0010EB  9B                 	db	155
   107   0010EC  D3                 	db	211
   108   0010ED  C5                 	db	197
   109   0010EE  D6                 	db	214
   110   0010EF  DE                 	db	222
   111   0010F0  43                 	db	67
   112   0010F1  DF                 	db	223
   113   0010F2  D7                 	db	215
   114   0010F3  CF                 	db	207
   115   0010F4  DC                 	db	220
   116   0010F5  1E                 	db	30
   117   0010F6  D9                 	db	217
   118   0010F7  9E                 	db	158
   119   0010F8  8E                 	db	142
   120   0010F9                     __end_of_segmentos:
   121                           	callstack 0
   122   000000                     _firma_absaddr	set	4102
   123   000000                     _firma_absaddr	set	4102
   124   0010F9                     STR_12:
   125   0010F9  53                 	db	83	;'S'
   126   0010FA  69                 	db	105	;'i'
   127   0010FB  73                 	db	115	;'s'
   128   0010FC  74                 	db	116	;'t'
   129   0010FD  65                 	db	101	;'e'
   130   0010FE  6D                 	db	109	;'m'
   131   0010FF  61                 	db	97	;'a'
   132   001100  20                 	db	32
   133   001101  63                 	db	99	;'c'
   134   001102  65                 	db	101	;'e'
   135   001103  72                 	db	114	;'r'
   136   001104  72                 	db	114	;'r'
   137   001105  61                 	db	97	;'a'
   138   001106  64                 	db	100	;'d'
   139   001107  6F                 	db	111	;'o'
   140   001108  20                 	db	32
   141   001109  6E                 	db	110	;'n'
   142   00110A  6F                 	db	111	;'o'
   143   00110B  20                 	db	32
   144   00110C  73                 	db	115	;'s'
   145   00110D  65                 	db	101	;'e'
   146   00110E  20                 	db	32
   147   00110F  70                 	db	112	;'p'
   148   001110  75                 	db	117	;'u'
   149   001111  65                 	db	101	;'e'
   150   001112  64                 	db	100	;'d'
   151   001113  65                 	db	101	;'e'
   152   001114  20                 	db	32
   153   001115  63                 	db	99	;'c'
   154   001116  61                 	db	97	;'a'
   155   001117  72                 	db	114	;'r'
   156   001118  67                 	db	103	;'g'
   157   001119  61                 	db	97	;'a'
   158   00111A  72                 	db	114	;'r'
   159   00111B  20                 	db	32
   160   00111C  63                 	db	99	;'c'
   161   00111D  6F                 	db	111	;'o'
   162   00111E  64                 	db	100	;'d'
   163   00111F  69                 	db	105	;'i'
   164   001120  67                 	db	103	;'g'
   165   001121  6F                 	db	111	;'o'
   166   001122  2E                 	db	46
   167   001123  0A                 	db	10
   168   001124  00                 	db	0
   169   001125                     STR_6:
   170   001125  43                 	db	67	;'C'
   171   001126  6F                 	db	111	;'o'
   172   001127  64                 	db	100	;'d'
   173   001128  69                 	db	105	;'i'
   174   001129  67                 	db	103	;'g'
   175   00112A  6F                 	db	111	;'o'
   176   00112B  73                 	db	115	;'s'
   177   00112C  20                 	db	32
   178   00112D  63                 	db	99	;'c'
   179   00112E  61                 	db	97	;'a'
   180   00112F  72                 	db	114	;'r'
   181   001130  67                 	db	103	;'g'
   182   001131  61                 	db	97	;'a'
   183   001132  64                 	db	100	;'d'
   184   001133  6F                 	db	111	;'o'
   185   001134  73                 	db	115	;'s'
   186   001135  20                 	db	32
   187   001136  63                 	db	99	;'c'
   188   001137  6F                 	db	111	;'o'
   189   001138  72                 	db	114	;'r'
   190   001139  72                 	db	114	;'r'
   191   00113A  65                 	db	101	;'e'
   192   00113B  63                 	db	99	;'c'
   193   00113C  74                 	db	116	;'t'
   194   00113D  61                 	db	97	;'a'
   195   00113E  6D                 	db	109	;'m'
   196   00113F  65                 	db	101	;'e'
   197   001140  6E                 	db	110	;'n'
   198   001141  74                 	db	116	;'t'
   199   001142  65                 	db	101	;'e'
   200   001143  20                 	db	32
   201   001144  0A                 	db	10
   202   001145  00                 	db	0
   203   001146                     STR_7:
   204   001146  53                 	db	83	;'S'
   205   001147  65                 	db	101	;'e'
   206   001148  20                 	db	32
   207   001149  76                 	db	118	;'v'
   208   00114A  61                 	db	97	;'a'
   209   00114B  20                 	db	32
   210   00114C  61                 	db	97	;'a'
   211   00114D  20                 	db	32
   212   00114E  63                 	db	99	;'c'
   213   00114F  65                 	db	101	;'e'
   214   001150  72                 	db	114	;'r'
   215   001151  72                 	db	114	;'r'
   216   001152  61                 	db	97	;'a'
   217   001153  72                 	db	114	;'r'
   218   001154  20                 	db	32
   219   001155  65                 	db	101	;'e'
   220   001156  6C                 	db	108	;'l'
   221   001157  20                 	db	32
   222   001158  73                 	db	115	;'s'
   223   001159  69                 	db	105	;'i'
   224   00115A  73                 	db	115	;'s'
   225   00115B  74                 	db	116	;'t'
   226   00115C  65                 	db	101	;'e'
   227   00115D  6D                 	db	109	;'m'
   228   00115E  61                 	db	97	;'a'
   229   00115F  20                 	db	32
   230   001160  0A                 	db	10
   231   001161  00                 	db	0
   232   001162                     STR_5:
   233   001162  43                 	db	67	;'C'
   234   001163  61                 	db	97	;'a'
   235   001164  72                 	db	114	;'r'
   236   001165  67                 	db	103	;'g'
   237   001166  61                 	db	97	;'a'
   238   001167  72                 	db	114	;'r'
   239   001168  20                 	db	32
   240   001169  6C                 	db	108	;'l'
   241   00116A  6F                 	db	111	;'o'
   242   00116B  73                 	db	115	;'s'
   243   00116C  20                 	db	32
   244   00116D  63                 	db	99	;'c'
   245   00116E  6F                 	db	111	;'o'
   246   00116F  64                 	db	100	;'d'
   247   001170  69                 	db	105	;'i'
   248   001171  67                 	db	103	;'g'
   249   001172  6F                 	db	111	;'o'
   250   001173  73                 	db	115	;'s'
   251   001174  3A                 	db	58	;':'
   252   001175  20                 	db	32
   253   001176  0A                 	db	10
   254   001177  00                 	db	0
   255   001178                     STR_2:
   256   001178  56                 	db	86	;'V'
   257   001179  65                 	db	101	;'e'
   258   00117A  72                 	db	114	;'r'
   259   00117B  69                 	db	105	;'i'
   260   00117C  66                 	db	102	;'f'
   261   00117D  69                 	db	105	;'i'
   262   00117E  63                 	db	99	;'c'
   263   00117F  61                 	db	97	;'a'
   264   001180  6E                 	db	110	;'n'
   265   001181  64                 	db	100	;'d'
   266   001182  6F                 	db	111	;'o'
   267   001183  20                 	db	32
   268   001184  73                 	db	115	;'s'
   269   001185  69                 	db	105	;'i'
   270   001186  73                 	db	115	;'s'
   271   001187  74                 	db	116	;'t'
   272   001188  65                 	db	101	;'e'
   273   001189  6D                 	db	109	;'m'
   274   00118A  61                 	db	97	;'a'
   275   00118B  20                 	db	32
   276   00118C  0A                 	db	10
   277   00118D  00                 	db	0
   278   00118E                     STR_14:
   279   00118E  43                 	db	67	;'C'
   280   00118F  65                 	db	101	;'e'
   281   001190  72                 	db	114	;'r'
   282   001191  72                 	db	114	;'r'
   283   001192  61                 	db	97	;'a'
   284   001193  6E                 	db	110	;'n'
   285   001194  64                 	db	100	;'d'
   286   001195  6F                 	db	111	;'o'
   287   001196  20                 	db	32
   288   001197  20                 	db	32
   289   001198  73                 	db	115	;'s'
   290   001199  69                 	db	105	;'i'
   291   00119A  73                 	db	115	;'s'
   292   00119B  74                 	db	116	;'t'
   293   00119C  65                 	db	101	;'e'
   294   00119D  6D                 	db	109	;'m'
   295   00119E  61                 	db	97	;'a'
   296   00119F  20                 	db	32
   297   0011A0  0A                 	db	10
   298   0011A1  00                 	db	0
   299   0011A2                     STR_13:
   300   0011A2  41                 	db	65	;'A'
   301   0011A3  62                 	db	98	;'b'
   302   0011A4  72                 	db	114	;'r'
   303   0011A5  69                 	db	105	;'i'
   304   0011A6  65                 	db	101	;'e'
   305   0011A7  6E                 	db	110	;'n'
   306   0011A8  64                 	db	100	;'d'
   307   0011A9  6F                 	db	111	;'o'
   308   0011AA  20                 	db	32
   309   0011AB  20                 	db	32
   310   0011AC  73                 	db	115	;'s'
   311   0011AD  69                 	db	105	;'i'
   312   0011AE  73                 	db	115	;'s'
   313   0011AF  74                 	db	116	;'t'
   314   0011B0  65                 	db	101	;'e'
   315   0011B1  6D                 	db	109	;'m'
   316   0011B2  61                 	db	97	;'a'
   317   0011B3  20                 	db	32
   318   0011B4  0A                 	db	10
   319   0011B5  00                 	db	0
   320   0011B6                     STR_11:
   321   0011B6  56                 	db	86	;'V'
   322   0011B7  61                 	db	97	;'a'
   323   0011B8  6C                 	db	108	;'l'
   324   0011B9  6F                 	db	111	;'o'
   325   0011BA  72                 	db	114	;'r'
   326   0011BB  20                 	db	32
   327   0011BC  69                 	db	105	;'i'
   328   0011BD  6E                 	db	110	;'n'
   329   0011BE  63                 	db	99	;'c'
   330   0011BF  6F                 	db	111	;'o'
   331   0011C0  72                 	db	114	;'r'
   332   0011C1  72                 	db	114	;'r'
   333   0011C2  65                 	db	101	;'e'
   334   0011C3  63                 	db	99	;'c'
   335   0011C4  74                 	db	116	;'t'
   336   0011C5  6F                 	db	111	;'o'
   337   0011C6  2E                 	db	46
   338   0011C7  0A                 	db	10
   339   0011C8  00                 	db	0
   340   0011C9                     STR_9:
   341   0011C9  44                 	db	68	;'D'
   342   0011CA  61                 	db	97	;'a'
   343   0011CB  74                 	db	116	;'t'
   344   0011CC  6F                 	db	111	;'o'
   345   0011CD  20                 	db	32
   346   0011CE  43                 	db	67	;'C'
   347   0011CF  6F                 	db	111	;'o'
   348   0011D0  72                 	db	114	;'r'
   349   0011D1  72                 	db	114	;'r'
   350   0011D2  65                 	db	101	;'e'
   351   0011D3  63                 	db	99	;'c'
   352   0011D4  74                 	db	116	;'t'
   353   0011D5  6F                 	db	111	;'o'
   354   0011D6  2E                 	db	46
   355   0011D7  0A                 	db	10
   356   0011D8  00                 	db	0
   357   0011D9                     STR_1:
   358   0011D9  42                 	db	66	;'B'
   359   0011DA  69                 	db	105	;'i'
   360   0011DB  65                 	db	101	;'e'
   361   0011DC  6E                 	db	110	;'n'
   362   0011DD  76                 	db	118	;'v'
   363   0011DE  65                 	db	101	;'e'
   364   0011DF  6E                 	db	110	;'n'
   365   0011E0  69                 	db	105	;'i'
   366   0011E1  64                 	db	100	;'d'
   367   0011E2  6F                 	db	111	;'o'
   368   0011E3  73                 	db	115	;'s'
   369   0011E4  20                 	db	32
   370   0011E5  0A                 	db	10
   371   0011E6  00                 	db	0
   372   0011E7                     STR_4:
   373   0011E7  4F                 	db	79	;'O'
   374   0011E8  6B                 	db	107	;'k'
   375   0011E9  2C                 	db	44
   376   0011EA  20                 	db	32
   377   0011EB  63                 	db	99	;'c'
   378   0011EC  69                 	db	105	;'i'
   379   0011ED  65                 	db	101	;'e'
   380   0011EE  72                 	db	114	;'r'
   381   0011EF  72                 	db	114	;'r'
   382   0011F0  61                 	db	97	;'a'
   383   0011F1  20                 	db	32
   384   0011F2  0A                 	db	10
   385   0011F3  00                 	db	0
   386   0011F4                     STR_3:
   387   0011F4  4F                 	db	79	;'O'
   388   0011F5  6B                 	db	107	;'k'
   389   0011F6  2C                 	db	44
   390   0011F7  20                 	db	32
   391   0011F8  61                 	db	97	;'a'
   392   0011F9  62                 	db	98	;'b'
   393   0011FA  72                 	db	114	;'r'
   394   0011FB  65                 	db	101	;'e'
   395   0011FC  20                 	db	32
   396   0011FD  0A                 	db	10
   397   0011FE  00                 	db	0
   398   0011FF                     STR_10:
   399   0011FF  0A                 	db	10
   400   001200  45                 	db	69	;'E'
   401   001201  72                 	db	114	;'r'
   402   001202  72                 	db	114	;'r'
   403   001203  6F                 	db	111	;'o'
   404   001204  72                 	db	114	;'r'
   405   001205  0A                 	db	10
   406   001206  00                 	db	0
   407   001207                     STR_8:
   408   001207  4F                 	db	79	;'O'
   409   001208  6B                 	db	107	;'k'
   410   001209  20                 	db	32
   411   00120A  0A                 	db	10
   412   00120B  00                 	db	0
   413   00120C  00                 	db	0	; dummy byte at the end
   414   000000                     
   415                           	psect	_firma_text
   416   001006                     __p_firma_text:
   417                           	callstack 0
   418   001006                     _firma:
   419                           	callstack 0
   420   001006  600D               	dw	24589
   421   001008                     __end_of_firma:
   422                           	callstack 0
   423   000000                     _ANSELB	set	3932
   424   000000                     _TXSTA1bits	set	4012
   425   000000                     _INTCON2bits	set	4081
   426   000000                     _ANSELC	set	3933
   427   000000                     _LATBbits	set	3978
   428   000000                     _LATCbits	set	3979
   429   000000                     _EECON2	set	4007
   430   000000                     _INTCONbits	set	4082
   431   000000                     _TXREG1	set	4013
   432   000000                     _ANSELAbits	set	3931
   433   000000                     _INTCON	set	4082
   434   000000                     _RCSTAbits	set	4011
   435   000000                     _ANSELA	set	3931
   436   000000                     _PORTBbits	set	3969
   437   000000                     _LATAbits	set	3977
   438   000000                     _LATDbits	set	3980
   439   000000                     _PIR1bits	set	3998
   440   000000                     _INTCON3bits	set	4080
   441   000000                     _IPR1bits	set	3999
   442   000000                     _EECON1bits	set	4006
   443   000000                     _EEDATA	set	4008
   444   000000                     _EEADR	set	4009
   445   000000                     _RCSTA1bits	set	4011
   446   000000                     _RCREG1	set	4014
   447   000000                     _BAUDCON1	set	4024
   448   000000                     _SPBRGH1	set	4016
   449   000000                     _SPBRG1	set	4015
   450   000000                     _RCONbits	set	4048
   451   000000                     _OSCCON2	set	4050
   452   000000                     _OSCCON	set	4051
   453   000000                     _TMR0L	set	4054
   454   000000                     _TMR0H	set	4055
   455   000000                     _TRISAbits	set	3986
   456   000000                     _OSCTUNE	set	3995
   457   000000                     _LATEbits	set	3981
   458   000000                     _T0CONbits	set	4053
   459   000000                     _PIE1bits	set	3997
   460   000000                     _TRISE	set	3990
   461   000000                     _TRISDbits	set	3989
   462   000000                     _TRISCbits	set	3988
   463   000000                     _TRISBbits	set	3987
   464   000000                     _ANSELE	set	3935
   465   000000                     _ANSELD	set	3934
   466                           
   467                           ; #config settings
   468                           
   469                           	psect	cinit
   470   001C20                     __pcinit:
   471                           	callstack 0
   472   001C20                     start_initialization:
   473                           	callstack 0
   474   001C20                     __initialization:
   475                           	callstack 0
   476                           
   477                           ; Clear objects allocated to COMRAM (39 bytes)
   478   001C20  EE00  F001         	lfsr	0,__pbssCOMRAM
   479   001C24  0E27               	movlw	39
   480   001C26                     clear_0:
   481   001C26  6AEE               	clrf	postinc0,c
   482   001C28  06E8               	decf	wreg,f,c
   483   001C2A  E1FD               	bnz	clear_0
   484   001C2C                     end_of_initialization:
   485                           	callstack 0
   486   001C2C                     __end_of__initialization:
   487                           	callstack 0
   488   001C2C  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   489   001C2E  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   490   001C30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   491   001C32  6EF8               	movwf	tblptru,c
   492   001C34  0100               	movlb	0
   493   001C36  EF38  F00D         	goto	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMRAM
   496   000001                     __pbssCOMRAM:
   497                           	callstack 0
   498   000001                     _codigo:
   499                           	callstack 0
   500   000001                     	ds	5
   501   000006                     _wig_val:
   502                           	callstack 0
   503   000006                     	ds	4
   504   00000A                     lint@pulso:
   505                           	callstack 0
   506   00000A                     	ds	2
   507   00000C                     _w_ceros:
   508                           	callstack 0
   509   00000C                     	ds	2
   510   00000E                     _w_unos:
   511                           	callstack 0
   512   00000E                     	ds	2
   513   000010                     _aux_de_carga_inicial:
   514                           	callstack 0
   515   000010                     	ds	2
   516   000012                     _contador_de_carga:
   517                           	callstack 0
   518   000012                     	ds	2
   519   000014                     _contador_de_lectura:
   520                           	callstack 0
   521   000014                     	ds	2
   522   000016                     _estado:
   523                           	callstack 0
   524   000016                     	ds	2
   525   000018                     _tecla:
   526                           	callstack 0
   527   000018                     	ds	1
   528   000019                     _d4:
   529                           	callstack 0
   530   000019                     	ds	1
   531   00001A                     _d3:
   532                           	callstack 0
   533   00001A                     	ds	1
   534   00001B                     _d2:
   535                           	callstack 0
   536   00001B                     	ds	1
   537   00001C                     _d1:
   538                           	callstack 0
   539   00001C                     	ds	1
   540   00001D                     _p_par:
   541                           	callstack 0
   542   00001D                     	ds	1
   543   00001E                     _p_imp:
   544                           	callstack 0
   545   00001E                     	ds	1
   546   00001F                     _nbits1:
   547                           	callstack 0
   548   00001F                     	ds	1
   549   000020                     _nbits0:
   550                           	callstack 0
   551   000020                     	ds	1
   552   000021                     _nbits:
   553                           	callstack 0
   554   000021                     	ds	1
   555   000022                     _timeout:
   556                           	callstack 0
   557   000022                     	ds	1
   558   000023                     _rota:
   559                           	callstack 0
   560   000023                     	ds	1
   561   000024                     _byte_de_verif:
   562                           	callstack 0
   563   000024                     	ds	1
   564   000025                     _b0:
   565                           	callstack 0
   566   000025                     	ds	1
   567   000026                     _b1:
   568                           	callstack 0
   569   000026                     	ds	1
   570   000027                     _b2:
   571                           	callstack 0
   572   000027                     	ds	1
   573                           
   574                           	psect	cstackCOMRAM
   575   000028                     __pcstackCOMRAM:
   576                           	callstack 0
   577   000028                     ??_hint:
   578   000028                     
   579                           ; 1 bytes @ 0x0
   580   000028                     	ds	2
   581   00002A                     hint@rx_buf:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x2
   585   00002A                     	ds	1
   586   00002B                     ??_lint:
   587                           
   588                           ; 1 bytes @ 0x3
   589   00002B                     	ds	5
   590   000030                     ??_dis_cerrado:
   591   000030                     ??_ver_par:
   592   000030                     weeprom@dato:
   593                           	callstack 0
   594   000030                     reeprom@dir:
   595                           	callstack 0
   596   000030                     shift@k:
   597                           	callstack 0
   598   000030                     tx_232@mensaje:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x8
   602   000030                     	ds	1
   603   000031                     weeprom@dir:
   604                           	callstack 0
   605   000031                     shift@dato:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x9
   609   000031                     	ds	1
   610   000032                     shift@n:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614   000032                     	ds	1
   615   000033                     permutacion_de_estados@estados:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0xB
   619   000033                     	ds	1
   620   000034                     ver_par@unos_1:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0xC
   624   000034                     	ds	1
   625   000035                     ver_par@unos_2:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xD
   629   000035                     	ds	1
   630   000036                     ver_par@wig_val2:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0xE
   634   000036                     	ds	4
   635   00003A                     ver_par@cont:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x12
   639   00003A                     	ds	1
   640   00003B                     wiegand@b2:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x13
   644   00003B                     	ds	1
   645   00003C                     wiegand@b1:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x14
   649   00003C                     	ds	1
   650   00003D                     wiegand@b0:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x15
   654   00003D                     	ds	1
   655   00003E                     ??_wiegand:
   656                           
   657                           ; 1 bytes @ 0x16
   658   00003E                     	ds	4
   659   000042                     wiegand@s:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x1A
   663   000042                     	ds	4
   664   000046                     main@retorno:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x1E
   668   000046                     	ds	1
   669                           
   670 ;;
   671 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   672 ;;
   673 ;; *************** function _main *****************
   674 ;; Defined at:
   675 ;;		line 141 in file "main_display_teclado_wiegand.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  retorno         1   30[COMRAM] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   689 ;;      Params:         0       0       0       0       0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0       0       0
   692 ;;      Totals:         1       0       0       0       0       0       0       0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels required when called: 7
   695 ;; This function calls:
   696 ;;		_carga_ini
   697 ;;		_conf_wig
   698 ;;		_config
   699 ;;		_lectura_tarjeta
   700 ;;		_reeprom
   701 ;;		_tx_232
   702 ;;		_verificacion
   703 ;;		_verificacion_ini
   704 ;;		_weeprom
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text0
   711   001A70                     __ptext0:
   712                           	callstack 0
   713   001A70                     _main:
   714                           	callstack 24
   715   001A70                     
   716                           ;main_display_teclado_wiegand.c: 142:     config();
   717   001A70  ECCB  F00B         	call	_config	;wreg free
   718                           
   719                           ;main_display_teclado_wiegand.c: 143:     conf_wig();
   720   001A74  EC00  F00E         	call	_conf_wig	;wreg free
   721   001A78                     
   722                           ;main_display_teclado_wiegand.c: 146:     retorno=reeprom(0x01);
   723   001A78  0E01               	movlw	1
   724   001A7A  EC1D  F00E         	call	_reeprom
   725   001A7E  6E46               	movwf	main@retorno^0,c
   726   001A80                     
   727                           ;main_display_teclado_wiegand.c: 147:     tx_232(&retorno);
   728   001A80  0E46               	movlw	low main@retorno
   729   001A82  6E30               	movwf	tx_232@mensaje^0,c
   730   001A84  6A31               	clrf	(tx_232@mensaje+1)^0,c
   731   001A86  ECCC  F00C         	call	_tx_232	;wreg free
   732   001A8A                     
   733                           ;main_display_teclado_wiegand.c: 148:     retorno++;
   734   001A8A  2A46               	incf	main@retorno^0,f,c
   735   001A8C                     
   736                           ;main_display_teclado_wiegand.c: 149:     weeprom(0x1,retorno);
   737   001A8C  C046  F030         	movff	main@retorno,weeprom@dato
   738   001A90  0E01               	movlw	1
   739   001A92  ECEA  F00D         	call	_weeprom
   740   001A96                     
   741                           ;main_display_teclado_wiegand.c: 151:     LATAbits.LATA3=1;
   742   001A96  8689               	bsf	137,3,c	;volatile
   743   001A98                     
   744                           ;main_display_teclado_wiegand.c: 152:     tx_232("Bienvenidos \n");
   745   001A98  0ED9               	movlw	low STR_1
   746   001A9A  6E30               	movwf	tx_232@mensaje^0,c
   747   001A9C  0E11               	movlw	high STR_1
   748   001A9E  6E31               	movwf	(tx_232@mensaje+1)^0,c
   749   001AA0  ECCC  F00C         	call	_tx_232	;wreg free
   750   001AA4                     
   751                           ;main_display_teclado_wiegand.c: 153:     tx_232("Verificando sistema \n");
   752   001AA4  0E78               	movlw	low STR_2
   753   001AA6  6E30               	movwf	tx_232@mensaje^0,c
   754   001AA8  0E11               	movlw	high STR_2
   755   001AAA  6E31               	movwf	(tx_232@mensaje+1)^0,c
   756   001AAC  ECCC  F00C         	call	_tx_232	;wreg free
   757   001AB0                     
   758                           ;main_display_teclado_wiegand.c: 156:     verificacion_ini();
   759   001AB0  EC93  F00C         	call	_verificacion_ini	;wreg free
   760   001AB4                     
   761                           ;main_display_teclado_wiegand.c: 158:     if(aux_de_carga_inicial==1){
   762   001AB4  0410               	decf	_aux_de_carga_inicial^0,w,c
   763   001AB6  1011               	iorwf	(_aux_de_carga_inicial+1)^0,w,c
   764   001AB8  A4D8               	btfss	status,2,c
   765   001ABA  EF61  F00D         	goto	u861
   766   001ABE  EF63  F00D         	goto	u860
   767   001AC2                     u861:
   768   001AC2  EF65  F00D         	goto	l155
   769   001AC6                     u860:
   770   001AC6                     
   771                           ;main_display_teclado_wiegand.c: 159:         carga_ini();
   772   001AC6  EC6D  F00D         	call	_carga_ini	;wreg free
   773   001ACA                     l155:
   774                           
   775                           ;main_display_teclado_wiegand.c: 163:         verificacion();
   776   001ACA  EC07  F009         	call	_verificacion	;wreg free
   777   001ACE                     
   778                           ;main_display_teclado_wiegand.c: 164:         lectura_tarjeta();
   779   001ACE  ECCF  F00A         	call	_lectura_tarjeta	;wreg free
   780   001AD2  EF65  F00D         	goto	l155
   781   001AD6  EF66  F008         	goto	start
   782   001ADA                     __end_of_main:
   783                           	callstack 0
   784                           
   785 ;; *************** function _verificacion_ini *****************
   786 ;; Defined at:
   787 ;;		line 252 in file "main_display_teclado_wiegand.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   801 ;;      Params:         0       0       0       0       0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 5
   808 ;; This function calls:
   809 ;;		_dis_abierto
   810 ;;		_dis_cerrado
   811 ;;		_reeprom
   812 ;;		_tx_232
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text1
   819   001926                     __ptext1:
   820                           	callstack 0
   821   001926                     _verificacion_ini:
   822                           	callstack 25
   823   001926                     
   824                           ;main_display_teclado_wiegand.c: 253:     if(reeprom(0x01)==0xff && reeprom(0x04)==0xff)
      +                          {
   825   001926  0E01               	movlw	1
   826   001928  EC1D  F00E         	call	_reeprom
   827   00192C  0AFF               	xorlw	255
   828   00192E  A4D8               	btfss	status,2,c
   829   001930  EF9C  F00C         	goto	u761
   830   001934  EF9E  F00C         	goto	u760
   831   001938                     u761:
   832   001938  EFBB  F00C         	goto	l1688
   833   00193C                     u760:
   834   00193C  0E04               	movlw	4
   835   00193E  EC1D  F00E         	call	_reeprom
   836   001942  0AFF               	xorlw	255
   837   001944  A4D8               	btfss	status,2,c
   838   001946  EFA7  F00C         	goto	u771
   839   00194A  EFA9  F00C         	goto	u770
   840   00194E                     u771:
   841   00194E  EFBB  F00C         	goto	l1688
   842   001952                     u770:
   843   001952                     
   844                           ;main_display_teclado_wiegand.c: 254:         estado=1;
   845   001952  0E00               	movlw	0
   846   001954  6E17               	movwf	(_estado+1)^0,c
   847   001956  0E01               	movlw	1
   848   001958  6E16               	movwf	_estado^0,c
   849                           
   850                           ;main_display_teclado_wiegand.c: 255:         aux_de_carga_inicial=1;
   851   00195A  0E00               	movlw	0
   852   00195C  6E11               	movwf	(_aux_de_carga_inicial+1)^0,c
   853   00195E  0E01               	movlw	1
   854   001960  6E10               	movwf	_aux_de_carga_inicial^0,c
   855   001962                     
   856                           ;main_display_teclado_wiegand.c: 256:         dis_abierto();
   857   001962  EC28  F00B         	call	_dis_abierto	;wreg free
   858   001966                     
   859                           ;main_display_teclado_wiegand.c: 257:         tx_232("Ok, abre \n");
   860   001966  0EF4               	movlw	low STR_3
   861   001968  6E30               	movwf	tx_232@mensaje^0,c
   862   00196A  0E11               	movlw	high STR_3
   863   00196C  6E31               	movwf	(tx_232@mensaje+1)^0,c
   864   00196E  ECCC  F00C         	call	_tx_232	;wreg free
   865                           
   866                           ;main_display_teclado_wiegand.c: 258:     }
   867   001972  EFCB  F00C         	goto	l191
   868   001976                     l1688:
   869                           
   870                           ;main_display_teclado_wiegand.c: 260:         estado=0;
   871   001976  0E00               	movlw	0
   872   001978  6E17               	movwf	(_estado+1)^0,c
   873   00197A  0E00               	movlw	0
   874   00197C  6E16               	movwf	_estado^0,c
   875                           
   876                           ;main_display_teclado_wiegand.c: 261:         aux_de_carga_inicial=0;
   877   00197E  0E00               	movlw	0
   878   001980  6E11               	movwf	(_aux_de_carga_inicial+1)^0,c
   879   001982  0E00               	movlw	0
   880   001984  6E10               	movwf	_aux_de_carga_inicial^0,c
   881   001986                     
   882                           ;main_display_teclado_wiegand.c: 262:         dis_cerrado();
   883   001986  EC02  F00D         	call	_dis_cerrado	;wreg free
   884   00198A                     
   885                           ;main_display_teclado_wiegand.c: 263:         tx_232("Ok, cierra \n");
   886   00198A  0EE7               	movlw	low STR_4
   887   00198C  6E30               	movwf	tx_232@mensaje^0,c
   888   00198E  0E11               	movlw	high STR_4
   889   001990  6E31               	movwf	(tx_232@mensaje+1)^0,c
   890   001992  ECCC  F00C         	call	_tx_232	;wreg free
   891   001996                     l191:
   892   001996  0012               	return		;funcret
   893   001998                     __end_of_verificacion_ini:
   894                           	callstack 0
   895                           
   896 ;; *************** function _lectura_tarjeta *****************
   897 ;; Defined at:
   898 ;;		line 381 in file "main_display_teclado_wiegand.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   912 ;;      Params:         0       0       0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 6
   919 ;; This function calls:
   920 ;;		_permutacion_de_estados
   921 ;;		_reeprom
   922 ;;		_wiegand
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text2
   929   00159E                     __ptext2:
   930                           	callstack 0
   931   00159E                     _lectura_tarjeta:
   932                           	callstack 24
   933   00159E                     
   934                           ;main_display_teclado_wiegand.c: 383:     if(wiegand (&b2,&b1,&b0)){
   935   00159E  0E27               	movlw	low _b2
   936   0015A0  6E3B               	movwf	wiegand@b2^0,c
   937   0015A2  0E26               	movlw	low _b1
   938   0015A4  6E3C               	movwf	wiegand@b1^0,c
   939   0015A6  0E25               	movlw	low _b0
   940   0015A8  6E3D               	movwf	wiegand@b0^0,c
   941   0015AA  EC4C  F00A         	call	_wiegand	;wreg free
   942   0015AE  0900               	iorlw	0
   943   0015B0  B4D8               	btfsc	status,2,c
   944   0015B2  EFDD  F00A         	goto	u791
   945   0015B6  EFDF  F00A         	goto	u790
   946   0015BA                     u791:
   947   0015BA  EF27  F00B         	goto	l231
   948   0015BE                     u790:
   949   0015BE                     
   950                           ;main_display_teclado_wiegand.c: 385:         if ((reeprom(0x01)==b2 && reeprom(0x02)==b
      +                          1 && reeprom(0x03)==b0) || (reeprom(0x04)==b2 && reeprom(0x05)==b1 && reeprom(0x06)==b0)
      +                          ){
   951   0015BE  0E01               	movlw	1
   952   0015C0  EC1D  F00E         	call	_reeprom
   953   0015C4  1827               	xorwf	_b2^0,w,c
   954   0015C6  A4D8               	btfss	status,2,c
   955   0015C8  EFE8  F00A         	goto	u801
   956   0015CC  EFEA  F00A         	goto	u800
   957   0015D0                     u801:
   958   0015D0  EF00  F00B         	goto	l1720
   959   0015D4                     u800:
   960   0015D4  0E02               	movlw	2
   961   0015D6  EC1D  F00E         	call	_reeprom
   962   0015DA  1826               	xorwf	_b1^0,w,c
   963   0015DC  A4D8               	btfss	status,2,c
   964   0015DE  EFF3  F00A         	goto	u811
   965   0015E2  EFF5  F00A         	goto	u810
   966   0015E6                     u811:
   967   0015E6  EF00  F00B         	goto	l1720
   968   0015EA                     u810:
   969   0015EA  0E03               	movlw	3
   970   0015EC  EC1D  F00E         	call	_reeprom
   971   0015F0  1825               	xorwf	_b0^0,w,c
   972   0015F2  B4D8               	btfsc	status,2,c
   973   0015F4  EFFE  F00A         	goto	u821
   974   0015F8  EF00  F00B         	goto	u820
   975   0015FC                     u821:
   976   0015FC  EF21  F00B         	goto	l1726
   977   001600                     u820:
   978   001600                     l1720:
   979   001600  0E04               	movlw	4
   980   001602  EC1D  F00E         	call	_reeprom
   981   001606  1827               	xorwf	_b2^0,w,c
   982   001608  A4D8               	btfss	status,2,c
   983   00160A  EF09  F00B         	goto	u831
   984   00160E  EF0B  F00B         	goto	u830
   985   001612                     u831:
   986   001612  EF27  F00B         	goto	l231
   987   001616                     u830:
   988   001616  0E05               	movlw	5
   989   001618  EC1D  F00E         	call	_reeprom
   990   00161C  1826               	xorwf	_b1^0,w,c
   991   00161E  A4D8               	btfss	status,2,c
   992   001620  EF14  F00B         	goto	u841
   993   001624  EF16  F00B         	goto	u840
   994   001628                     u841:
   995   001628  EF27  F00B         	goto	l231
   996   00162C                     u840:
   997   00162C  0E06               	movlw	6
   998   00162E  EC1D  F00E         	call	_reeprom
   999   001632  1825               	xorwf	_b0^0,w,c
  1000   001634  A4D8               	btfss	status,2,c
  1001   001636  EF1F  F00B         	goto	u851
  1002   00163A  EF21  F00B         	goto	u850
  1003   00163E                     u851:
  1004   00163E  EF27  F00B         	goto	l231
  1005   001642                     u850:
  1006   001642                     l1726:
  1007                           
  1008                           ;main_display_teclado_wiegand.c: 386:             permutacion_de_estados(estado);
  1009   001642  C016  F033         	movff	_estado,permutacion_de_estados@estados
  1010   001646  C017  F034         	movff	_estado+1,permutacion_de_estados@estados+1
  1011   00164A  ECC6  F00D         	call	_permutacion_de_estados	;wreg free
  1012   00164E                     l231:
  1013   00164E  0012               	return		;funcret
  1014   001650                     __end_of_lectura_tarjeta:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _wiegand *****************
  1018 ;; Defined at:
  1019 ;;		line 40 in file "wiegand.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  b2              1   19[COMRAM] PTR unsigned char 
  1022 ;;		 -> b2(1), 
  1023 ;;  b1              1   20[COMRAM] PTR unsigned char 
  1024 ;;		 -> b1(1), 
  1025 ;;  b0              1   21[COMRAM] PTR unsigned char 
  1026 ;;		 -> b0(1), 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  s               4   26[COMRAM] volatile unsigned long 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         3       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1041 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:       11 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 4
  1045 ;; This function calls:
  1046 ;;		_ver_par
  1047 ;; This function is called by:
  1048 ;;		_lectura_tarjeta
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text3
  1053   001498                     __ptext3:
  1054                           	callstack 0
  1055   001498                     _wiegand:
  1056                           	callstack 25
  1057   001498                     
  1058                           ;wiegand.c: 41:     volatile unsigned long int s;;wiegand.c: 42:     if(nbits==26){
  1059   001498  0E1A               	movlw	26
  1060   00149A  1821               	xorwf	_nbits^0,w,c
  1061   00149C  A4D8               	btfss	status,2,c
  1062   00149E  EF53  F00A         	goto	u711
  1063   0014A2  EF55  F00A         	goto	u710
  1064   0014A6                     u711:
  1065   0014A6  EF5F  F00A         	goto	l1632
  1066   0014AA                     u710:
  1067   0014AA                     
  1068                           ;wiegand.c: 45:         if(!ver_par()) return 0;
  1069   0014AA  ECAE  F009         	call	_ver_par	;wreg free
  1070   0014AE  0900               	iorlw	0
  1071   0014B0  A4D8               	btfss	status,2,c
  1072   0014B2  EF5D  F00A         	goto	u721
  1073   0014B6  EF5F  F00A         	goto	u720
  1074   0014BA                     u721:
  1075   0014BA  EF62  F00A         	goto	l1636
  1076   0014BE                     u720:
  1077   0014BE                     l1632:
  1078   0014BE  0E00               	movlw	0
  1079   0014C0  EFCE  F00A         	goto	l339
  1080   0014C4                     l1636:
  1081                           
  1082                           ;wiegand.c: 46:         nbits=0;
  1083   0014C4  0E00               	movlw	0
  1084   0014C6  6E21               	movwf	_nbits^0,c
  1085                           
  1086                           ;wiegand.c: 47:         w_unos=0;
  1087   0014C8  0E00               	movlw	0
  1088   0014CA  6E0F               	movwf	(_w_unos+1)^0,c
  1089   0014CC  0E00               	movlw	0
  1090   0014CE  6E0E               	movwf	_w_unos^0,c
  1091                           
  1092                           ;wiegand.c: 48:         w_ceros=0;
  1093   0014D0  0E00               	movlw	0
  1094   0014D2  6E0D               	movwf	(_w_ceros+1)^0,c
  1095   0014D4  0E00               	movlw	0
  1096   0014D6  6E0C               	movwf	_w_ceros^0,c
  1097                           
  1098                           ;wiegand.c: 49:         nbits0=0;
  1099   0014D8  0E00               	movlw	0
  1100   0014DA  6E20               	movwf	_nbits0^0,c
  1101                           
  1102                           ;wiegand.c: 50:         nbits1=0;
  1103   0014DC  0E00               	movlw	0
  1104   0014DE  6E1F               	movwf	_nbits1^0,c
  1105                           
  1106                           ;wiegand.c: 52:         p_imp=0;
  1107   0014E0  0E00               	movlw	0
  1108   0014E2  6E1E               	movwf	_p_imp^0,c
  1109                           
  1110                           ;wiegand.c: 53:         p_par=0;
  1111   0014E4  0E00               	movlw	0
  1112   0014E6  6E1D               	movwf	_p_par^0,c
  1113   0014E8                     
  1114                           ;wiegand.c: 55:         s=(wig_val>>1)&0x000000ff;
  1115   0014E8  C006  F03E         	movff	_wig_val,??_wiegand
  1116   0014EC  C007  F03F         	movff	_wig_val+1,??_wiegand+1
  1117   0014F0  C008  F040         	movff	_wig_val+2,??_wiegand+2
  1118   0014F4  C009  F041         	movff	_wig_val+3,??_wiegand+3
  1119   0014F8  90D8               	bcf	status,0,c
  1120   0014FA  3241               	rrcf	(??_wiegand+3)^0,f,c
  1121   0014FC  3240               	rrcf	(??_wiegand+2)^0,f,c
  1122   0014FE  323F               	rrcf	(??_wiegand+1)^0,f,c
  1123   001500  323E               	rrcf	??_wiegand^0,f,c
  1124   001502  503E               	movf	??_wiegand^0,w,c
  1125   001504  6E42               	movwf	wiegand@s^0,c	;volatile
  1126   001506  6A43               	clrf	(wiegand@s+1)^0,c	;volatile
  1127   001508  6A44               	clrf	(wiegand@s+2)^0,c	;volatile
  1128   00150A  6A45               	clrf	(wiegand@s+3)^0,c	;volatile
  1129   00150C                     
  1130                           ;wiegand.c: 56:         *b0=(char)s;
  1131   00150C  503D               	movf	wiegand@b0^0,w,c
  1132   00150E  6ED9               	movwf	fsr2l,c
  1133   001510  6ADA               	clrf	fsr2h,c
  1134   001512  C042  FFDF         	movff	wiegand@s,indf2	;volatile
  1135   001516                     
  1136                           ;wiegand.c: 57:         s=(wig_val>>9)&0x000000ff;
  1137   001516  C006  F03E         	movff	_wig_val,??_wiegand
  1138   00151A  C007  F03F         	movff	_wig_val+1,??_wiegand+1
  1139   00151E  C008  F040         	movff	_wig_val+2,??_wiegand+2
  1140   001522  C009  F041         	movff	_wig_val+3,??_wiegand+3
  1141   001526  0E0A               	movlw	10
  1142   001528  EF9B  F00A         	goto	u730
  1143   00152C                     u735:
  1144   00152C  90D8               	bcf	status,0,c
  1145   00152E  3241               	rrcf	(??_wiegand+3)^0,f,c
  1146   001530  3240               	rrcf	(??_wiegand+2)^0,f,c
  1147   001532  323F               	rrcf	(??_wiegand+1)^0,f,c
  1148   001534  323E               	rrcf	??_wiegand^0,f,c
  1149   001536                     u730:
  1150   001536  2EE8               	decfsz	wreg,f,c
  1151   001538  EF96  F00A         	goto	u735
  1152   00153C  503E               	movf	??_wiegand^0,w,c
  1153   00153E  6E42               	movwf	wiegand@s^0,c	;volatile
  1154   001540  6A43               	clrf	(wiegand@s+1)^0,c	;volatile
  1155   001542  6A44               	clrf	(wiegand@s+2)^0,c	;volatile
  1156   001544  6A45               	clrf	(wiegand@s+3)^0,c	;volatile
  1157   001546                     
  1158                           ;wiegand.c: 58:         *b1=(char)s;
  1159   001546  503C               	movf	wiegand@b1^0,w,c
  1160   001548  6ED9               	movwf	fsr2l,c
  1161   00154A  6ADA               	clrf	fsr2h,c
  1162   00154C  C042  FFDF         	movff	wiegand@s,indf2	;volatile
  1163   001550                     
  1164                           ;wiegand.c: 59:         s=(wig_val>>17)&0x000000ff;
  1165   001550  C006  F03E         	movff	_wig_val,??_wiegand
  1166   001554  C007  F03F         	movff	_wig_val+1,??_wiegand+1
  1167   001558  C008  F040         	movff	_wig_val+2,??_wiegand+2
  1168   00155C  C009  F041         	movff	_wig_val+3,??_wiegand+3
  1169   001560  0E12               	movlw	18
  1170   001562  EFB8  F00A         	goto	u740
  1171   001566                     u745:
  1172   001566  90D8               	bcf	status,0,c
  1173   001568  3241               	rrcf	(??_wiegand+3)^0,f,c
  1174   00156A  3240               	rrcf	(??_wiegand+2)^0,f,c
  1175   00156C  323F               	rrcf	(??_wiegand+1)^0,f,c
  1176   00156E  323E               	rrcf	??_wiegand^0,f,c
  1177   001570                     u740:
  1178   001570  2EE8               	decfsz	wreg,f,c
  1179   001572  EFB3  F00A         	goto	u745
  1180   001576  503E               	movf	??_wiegand^0,w,c
  1181   001578  6E42               	movwf	wiegand@s^0,c	;volatile
  1182   00157A  6A43               	clrf	(wiegand@s+1)^0,c	;volatile
  1183   00157C  6A44               	clrf	(wiegand@s+2)^0,c	;volatile
  1184   00157E  6A45               	clrf	(wiegand@s+3)^0,c	;volatile
  1185   001580                     
  1186                           ;wiegand.c: 60:         *b2=(char)s;
  1187   001580  503B               	movf	wiegand@b2^0,w,c
  1188   001582  6ED9               	movwf	fsr2l,c
  1189   001584  6ADA               	clrf	fsr2h,c
  1190   001586  C042  FFDF         	movff	wiegand@s,indf2	;volatile
  1191   00158A                     
  1192                           ;wiegand.c: 61:         wig_val=0;
  1193   00158A  0E00               	movlw	0
  1194   00158C  6E06               	movwf	_wig_val^0,c
  1195   00158E  0E00               	movlw	0
  1196   001590  6E07               	movwf	(_wig_val+1)^0,c
  1197   001592  0E00               	movlw	0
  1198   001594  6E08               	movwf	(_wig_val+2)^0,c
  1199   001596  0E00               	movlw	0
  1200   001598  6E09               	movwf	(_wig_val+3)^0,c
  1201   00159A                     
  1202                           ;wiegand.c: 62:         return 1;
  1203   00159A  0E01               	movlw	1
  1204   00159C                     l339:
  1205   00159C  0012               	return		;funcret
  1206   00159E                     __end_of_wiegand:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _ver_par *****************
  1210 ;; Defined at:
  1211 ;;		line 8 in file "wiegand.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  wig_val2        4   14[COMRAM] unsigned long 
  1216 ;;  cont            1   18[COMRAM] unsigned char 
  1217 ;;  unos_2          1   13[COMRAM] unsigned char 
  1218 ;;  unos_1          1   12[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      unsigned char 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1231 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:       11 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 3
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_wiegand
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text4
  1243   00135C                     __ptext4:
  1244                           	callstack 0
  1245   00135C                     _ver_par:
  1246                           	callstack 25
  1247   00135C                     
  1248                           ;wiegand.c: 11:     unos_1=0;
  1249   00135C  0E00               	movlw	0
  1250   00135E  6E34               	movwf	ver_par@unos_1^0,c
  1251                           
  1252                           ;wiegand.c: 12:     unsigned long int wig_val2=0;
  1253   001360  0E00               	movlw	0
  1254   001362  6E36               	movwf	ver_par@wig_val2^0,c
  1255   001364  0E00               	movlw	0
  1256   001366  6E37               	movwf	(ver_par@wig_val2+1)^0,c
  1257   001368  0E00               	movlw	0
  1258   00136A  6E38               	movwf	(ver_par@wig_val2+2)^0,c
  1259   00136C  0E00               	movlw	0
  1260   00136E  6E39               	movwf	(ver_par@wig_val2+3)^0,c
  1261   001370                     
  1262                           ;wiegand.c: 14:     wig_val2=wig_val>>1;
  1263   001370  C006  F030         	movff	_wig_val,??_ver_par
  1264   001374  C007  F031         	movff	_wig_val+1,??_ver_par+1
  1265   001378  C008  F032         	movff	_wig_val+2,??_ver_par+2
  1266   00137C  C009  F033         	movff	_wig_val+3,??_ver_par+3
  1267   001380  90D8               	bcf	status,0,c
  1268   001382  3233               	rrcf	(??_ver_par+3)^0,f,c
  1269   001384  3232               	rrcf	(??_ver_par+2)^0,f,c
  1270   001386  3231               	rrcf	(??_ver_par+1)^0,f,c
  1271   001388  3230               	rrcf	??_ver_par^0,f,c
  1272   00138A  C030  F036         	movff	??_ver_par,ver_par@wig_val2
  1273   00138E  C031  F037         	movff	??_ver_par+1,ver_par@wig_val2+1
  1274   001392  C032  F038         	movff	??_ver_par+2,ver_par@wig_val2+2
  1275   001396  C033  F039         	movff	??_ver_par+3,ver_par@wig_val2+3
  1276   00139A                     
  1277                           ;wiegand.c: 16:     for(cont=0;cont<=11;cont++){
  1278   00139A  0E00               	movlw	0
  1279   00139C  6E3A               	movwf	ver_par@cont^0,c
  1280   00139E                     l326:
  1281                           
  1282                           ;wiegand.c: 18:         if(wig_val2&0x01)unos_1++;
  1283   00139E  A036               	btfss	ver_par@wig_val2^0,0,c
  1284   0013A0  EFD4  F009         	goto	u101
  1285   0013A4  EFD6  F009         	goto	u100
  1286   0013A8                     u101:
  1287   0013A8  EFD7  F009         	goto	l328
  1288   0013AC                     u100:
  1289   0013AC  2A34               	incf	ver_par@unos_1^0,f,c
  1290   0013AE                     l328:
  1291                           
  1292                           ;wiegand.c: 19:         wig_val2=wig_val2>>1;
  1293   0013AE  C036  F030         	movff	ver_par@wig_val2,??_ver_par
  1294   0013B2  C037  F031         	movff	ver_par@wig_val2+1,??_ver_par+1
  1295   0013B6  C038  F032         	movff	ver_par@wig_val2+2,??_ver_par+2
  1296   0013BA  C039  F033         	movff	ver_par@wig_val2+3,??_ver_par+3
  1297   0013BE  90D8               	bcf	status,0,c
  1298   0013C0  3233               	rrcf	(??_ver_par+3)^0,f,c
  1299   0013C2  3232               	rrcf	(??_ver_par+2)^0,f,c
  1300   0013C4  3231               	rrcf	(??_ver_par+1)^0,f,c
  1301   0013C6  3230               	rrcf	??_ver_par^0,f,c
  1302   0013C8  C030  F036         	movff	??_ver_par,ver_par@wig_val2
  1303   0013CC  C031  F037         	movff	??_ver_par+1,ver_par@wig_val2+1
  1304   0013D0  C032  F038         	movff	??_ver_par+2,ver_par@wig_val2+2
  1305   0013D4  C033  F039         	movff	??_ver_par+3,ver_par@wig_val2+3
  1306                           
  1307                           ;wiegand.c: 21:     }
  1308   0013D8  2A3A               	incf	ver_par@cont^0,f,c
  1309   0013DA  0E0B               	movlw	11
  1310   0013DC  643A               	cpfsgt	ver_par@cont^0,c
  1311   0013DE  EFF3  F009         	goto	u111
  1312   0013E2  EFF5  F009         	goto	u110
  1313   0013E6                     u111:
  1314   0013E6  EFCF  F009         	goto	l326
  1315   0013EA                     u110:
  1316   0013EA                     
  1317                           ;wiegand.c: 22:     unos_1=unos_1&0x01;
  1318   0013EA  5034               	movf	ver_par@unos_1^0,w,c
  1319   0013EC  0B01               	andlw	1
  1320   0013EE  6E34               	movwf	ver_par@unos_1^0,c
  1321   0013F0                     
  1322                           ;wiegand.c: 23:     if((unos_1==0)&&(p_par==0)) return 0;
  1323   0013F0  5034               	movf	ver_par@unos_1^0,w,c
  1324   0013F2  A4D8               	btfss	status,2,c
  1325   0013F4  EFFE  F009         	goto	u121
  1326   0013F8  EF00  F00A         	goto	u120
  1327   0013FC                     u121:
  1328   0013FC  EF0B  F00A         	goto	l1134
  1329   001400                     u120:
  1330   001400  501D               	movf	_p_par^0,w,c
  1331   001402  A4D8               	btfss	status,2,c
  1332   001404  EF06  F00A         	goto	u131
  1333   001408  EF08  F00A         	goto	u130
  1334   00140C                     u131:
  1335   00140C  EF0B  F00A         	goto	l1134
  1336   001410                     u130:
  1337   001410                     l1130:
  1338   001410  0E00               	movlw	0
  1339   001412  EF4B  F00A         	goto	l330
  1340   001416                     l1134:
  1341                           
  1342                           ;wiegand.c: 26:     unos_2=0;
  1343   001416  0E00               	movlw	0
  1344   001418  6E35               	movwf	ver_par@unos_2^0,c
  1345                           
  1346                           ;wiegand.c: 27:      for(cont=0;cont<=11;cont++){
  1347   00141A  0E00               	movlw	0
  1348   00141C  6E3A               	movwf	ver_par@cont^0,c
  1349   00141E                     l331:
  1350                           
  1351                           ;wiegand.c: 29:         if(wig_val2&0x01)unos_2++;
  1352   00141E  A036               	btfss	ver_par@wig_val2^0,0,c
  1353   001420  EF14  F00A         	goto	u141
  1354   001424  EF16  F00A         	goto	u140
  1355   001428                     u141:
  1356   001428  EF17  F00A         	goto	l333
  1357   00142C                     u140:
  1358   00142C  2A35               	incf	ver_par@unos_2^0,f,c
  1359   00142E                     l333:
  1360                           
  1361                           ;wiegand.c: 30:         wig_val2=wig_val2>>1;
  1362   00142E  C036  F030         	movff	ver_par@wig_val2,??_ver_par
  1363   001432  C037  F031         	movff	ver_par@wig_val2+1,??_ver_par+1
  1364   001436  C038  F032         	movff	ver_par@wig_val2+2,??_ver_par+2
  1365   00143A  C039  F033         	movff	ver_par@wig_val2+3,??_ver_par+3
  1366   00143E  90D8               	bcf	status,0,c
  1367   001440  3233               	rrcf	(??_ver_par+3)^0,f,c
  1368   001442  3232               	rrcf	(??_ver_par+2)^0,f,c
  1369   001444  3231               	rrcf	(??_ver_par+1)^0,f,c
  1370   001446  3230               	rrcf	??_ver_par^0,f,c
  1371   001448  C030  F036         	movff	??_ver_par,ver_par@wig_val2
  1372   00144C  C031  F037         	movff	??_ver_par+1,ver_par@wig_val2+1
  1373   001450  C032  F038         	movff	??_ver_par+2,ver_par@wig_val2+2
  1374   001454  C033  F039         	movff	??_ver_par+3,ver_par@wig_val2+3
  1375                           
  1376                           ;wiegand.c: 32:     }
  1377   001458  2A3A               	incf	ver_par@cont^0,f,c
  1378   00145A  0E0B               	movlw	11
  1379   00145C  643A               	cpfsgt	ver_par@cont^0,c
  1380   00145E  EF33  F00A         	goto	u151
  1381   001462  EF35  F00A         	goto	u150
  1382   001466                     u151:
  1383   001466  EF0F  F00A         	goto	l331
  1384   00146A                     u150:
  1385   00146A                     
  1386                           ;wiegand.c: 33:     unos_2=unos_2&0x01;
  1387   00146A  5035               	movf	ver_par@unos_2^0,w,c
  1388   00146C  0B01               	andlw	1
  1389   00146E  6E35               	movwf	ver_par@unos_2^0,c
  1390                           
  1391                           ;wiegand.c: 34:     if((unos_2==1)&&(p_imp==0)) return 0;
  1392   001470  0435               	decf	ver_par@unos_2^0,w,c
  1393   001472  A4D8               	btfss	status,2,c
  1394   001474  EF3E  F00A         	goto	u161
  1395   001478  EF40  F00A         	goto	u160
  1396   00147C                     u161:
  1397   00147C  EF4A  F00A         	goto	l1152
  1398   001480                     u160:
  1399   001480  501E               	movf	_p_imp^0,w,c
  1400   001482  A4D8               	btfss	status,2,c
  1401   001484  EF46  F00A         	goto	u171
  1402   001488  EF48  F00A         	goto	u170
  1403   00148C                     u171:
  1404   00148C  EF4A  F00A         	goto	l1152
  1405   001490                     u170:
  1406   001490  EF08  F00A         	goto	l1130
  1407   001494                     l1152:
  1408                           
  1409                           ;wiegand.c: 36:     return 1;
  1410   001494  0E01               	movlw	1
  1411   001496                     l330:
  1412   001496  0012               	return		;funcret
  1413   001498                     __end_of_ver_par:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _reeprom *****************
  1417 ;; Defined at:
  1418 ;;		line 205 in file "main_display_teclado_wiegand.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  dir             1    wreg     unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  dir             1    8[COMRAM] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      unsigned char 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0
  1433 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        1 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;;		_verificacion_ini
  1444 ;;		_lectura_tarjeta
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text5
  1449   001C3A                     __ptext5:
  1450                           	callstack 0
  1451   001C3A                     _reeprom:
  1452                           	callstack 26
  1453                           
  1454                           ;incstack = 0
  1455                           ;reeprom@dir stored from wreg
  1456   001C3A  6E30               	movwf	reeprom@dir^0,c
  1457   001C3C                     
  1458                           ;main_display_teclado_wiegand.c: 206:     EEADR=dir;
  1459   001C3C  C030  FFA9         	movff	reeprom@dir,4009	;volatile
  1460   001C40                     
  1461                           ;main_display_teclado_wiegand.c: 207:     EECON1bits.EEPGD=0;
  1462   001C40  9EA6               	bcf	166,7,c	;volsfr
  1463   001C42                     
  1464                           ;main_display_teclado_wiegand.c: 208:     EECON1bits.CFGS=0;
  1465   001C42  9CA6               	bcf	166,6,c	;volsfr
  1466   001C44                     
  1467                           ;main_display_teclado_wiegand.c: 209:     EEDATA=0;
  1468   001C44  0E00               	movlw	0
  1469   001C46  6EA8               	movwf	168,c	;volatile
  1470   001C48                     
  1471                           ;main_display_teclado_wiegand.c: 210:     EECON1bits.RD= 1;
  1472   001C48  80A6               	bsf	166,0,c	;volsfr
  1473   001C4A                     
  1474                           ;main_display_teclado_wiegand.c: 211:     return EEDATA;
  1475   001C4A  50A8               	movf	168,w,c	;volatile
  1476   001C4C  0012               	return		;funcret
  1477   001C4E                     __end_of_reeprom:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _permutacion_de_estados *****************
  1481 ;; Defined at:
  1482 ;;		line 392 in file "main_display_teclado_wiegand.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  estados         2   11[COMRAM] int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         2       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 5
  1503 ;; This function calls:
  1504 ;;		_dis_abierto
  1505 ;;		_dis_cerrado
  1506 ;;		_tx_232
  1507 ;; This function is called by:
  1508 ;;		_lectura_tarjeta
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text6
  1513   001B8C                     __ptext6:
  1514                           	callstack 0
  1515   001B8C                     _permutacion_de_estados:
  1516                           	callstack 24
  1517   001B8C                     
  1518                           ;main_display_teclado_wiegand.c: 393:     if(estados==0){
  1519   001B8C  5033               	movf	permutacion_de_estados@estados^0,w,c
  1520   001B8E  1034               	iorwf	(permutacion_de_estados@estados+1)^0,w,c
  1521   001B90  A4D8               	btfss	status,2,c
  1522   001B92  EFCD  F00D         	goto	u751
  1523   001B96  EFCF  F00D         	goto	u750
  1524   001B9A                     u751:
  1525   001B9A  EFDD  F00D         	goto	l1670
  1526   001B9E                     u750:
  1527   001B9E                     
  1528                           ;main_display_teclado_wiegand.c: 394:         estado=1;
  1529   001B9E  0E00               	movlw	0
  1530   001BA0  6E17               	movwf	(_estado+1)^0,c
  1531   001BA2  0E01               	movlw	1
  1532   001BA4  6E16               	movwf	_estado^0,c
  1533   001BA6                     
  1534                           ;main_display_teclado_wiegand.c: 395:         dis_abierto();
  1535   001BA6  EC28  F00B         	call	_dis_abierto	;wreg free
  1536   001BAA                     
  1537                           ;main_display_teclado_wiegand.c: 396:         tx_232("Abriendo  sistema \n");
  1538   001BAA  0EA2               	movlw	low STR_13
  1539   001BAC  6E30               	movwf	tx_232@mensaje^0,c
  1540   001BAE  0E11               	movlw	high STR_13
  1541   001BB0  6E31               	movwf	(tx_232@mensaje+1)^0,c
  1542   001BB2  ECCC  F00C         	call	_tx_232	;wreg free
  1543                           
  1544                           ;main_display_teclado_wiegand.c: 397:     }else{
  1545   001BB6  EFE9  F00D         	goto	l236
  1546   001BBA                     l1670:
  1547                           
  1548                           ;main_display_teclado_wiegand.c: 398:         estado=0;
  1549   001BBA  0E00               	movlw	0
  1550   001BBC  6E17               	movwf	(_estado+1)^0,c
  1551   001BBE  0E00               	movlw	0
  1552   001BC0  6E16               	movwf	_estado^0,c
  1553   001BC2                     
  1554                           ;main_display_teclado_wiegand.c: 399:         dis_cerrado();
  1555   001BC2  EC02  F00D         	call	_dis_cerrado	;wreg free
  1556   001BC6                     
  1557                           ;main_display_teclado_wiegand.c: 400:         tx_232("Cerrando  sistema \n");
  1558   001BC6  0E8E               	movlw	low STR_14
  1559   001BC8  6E30               	movwf	tx_232@mensaje^0,c
  1560   001BCA  0E11               	movlw	high STR_14
  1561   001BCC  6E31               	movwf	(tx_232@mensaje+1)^0,c
  1562   001BCE  ECCC  F00C         	call	_tx_232	;wreg free
  1563   001BD2                     l236:
  1564   001BD2  0012               	return		;funcret
  1565   001BD4                     __end_of_permutacion_de_estados:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _dis_abierto *****************
  1569 ;; Defined at:
  1570 ;;		line 268 in file "main_display_teclado_wiegand.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 4
  1591 ;; This function calls:
  1592 ;;		_shift
  1593 ;; This function is called by:
  1594 ;;		_verificacion_ini
  1595 ;;		_permutacion_de_estados
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text7
  1600   001650                     __ptext7:
  1601                           	callstack 0
  1602   001650                     _dis_abierto:
  1603                           	callstack 25
  1604   001650                     
  1605                           ;main_display_teclado_wiegand.c: 269:     if(INTCONbits.TMR0IF){
  1606   001650  A4F2               	btfss	242,2,c	;volatile
  1607   001652  EF2D  F00B         	goto	u81
  1608   001656  EF2F  F00B         	goto	u80
  1609   00165A                     u81:
  1610   00165A  EF79  F00B         	goto	l203
  1611   00165E                     u80:
  1612   00165E                     
  1613                           ;main_display_teclado_wiegand.c: 270:         TMR0H=0xd1;;
  1614   00165E  0ED1               	movlw	209
  1615   001660  6ED7               	movwf	215,c	;volatile
  1616                           
  1617                           ;main_display_teclado_wiegand.c: 271:         TMR0L=0x1f;;
  1618   001662  0E1F               	movlw	31
  1619   001664  6ED6               	movwf	214,c	;volatile
  1620   001666                     
  1621                           ;main_display_teclado_wiegand.c: 272:         if (rota>=4)rota=1;
  1622   001666  0E03               	movlw	3
  1623   001668  6423               	cpfsgt	_rota^0,c
  1624   00166A  EF39  F00B         	goto	u91
  1625   00166E  EF3B  F00B         	goto	u90
  1626   001672                     u91:
  1627   001672  EF3F  F00B         	goto	l1092
  1628   001676                     u90:
  1629   001676  0E01               	movlw	1
  1630   001678  6E23               	movwf	_rota^0,c
  1631   00167A  EF66  F00B         	goto	l1104
  1632   00167E                     l1092:
  1633                           
  1634                           ;main_display_teclado_wiegand.c: 274:             rota++;
  1635   00167E  2A23               	incf	_rota^0,f,c
  1636   001680  EF66  F00B         	goto	l1104
  1637   001684                     l198:
  1638                           
  1639                           ;main_display_teclado_wiegand.c: 281:                 LATCbits.LATC1=1;
  1640   001684  828B               	bsf	139,1,c	;volatile
  1641                           
  1642                           ;main_display_teclado_wiegand.c: 282:                 LATEbits.LATE2=1;
  1643   001686  848D               	bsf	141,2,c	;volatile
  1644                           
  1645                           ;main_display_teclado_wiegand.c: 283:                 LATEbits.LATE1=1;
  1646   001688  828D               	bsf	141,1,c	;volatile
  1647                           
  1648                           ;main_display_teclado_wiegand.c: 284:                 LATEbits.LATE0=0;
  1649   00168A  908D               	bcf	141,0,c	;volatile
  1650   00168C                     
  1651                           ;main_display_teclado_wiegand.c: 285:                 shift(0xdc);
  1652   00168C  0EDC               	movlw	220
  1653   00168E  EC9C  F00D         	call	_shift
  1654                           
  1655                           ;main_display_teclado_wiegand.c: 287:                 break;
  1656   001692  EF79  F00B         	goto	l203
  1657   001696                     l200:
  1658                           
  1659                           ;main_display_teclado_wiegand.c: 290:                 LATCbits.LATC1=1;
  1660   001696  828B               	bsf	139,1,c	;volatile
  1661                           
  1662                           ;main_display_teclado_wiegand.c: 291:                 LATEbits.LATE2=1;
  1663   001698  848D               	bsf	141,2,c	;volatile
  1664                           
  1665                           ;main_display_teclado_wiegand.c: 292:                 LATEbits.LATE1=0;
  1666   00169A  928D               	bcf	141,1,c	;volatile
  1667                           
  1668                           ;main_display_teclado_wiegand.c: 293:                 LATEbits.LATE0=1;
  1669   00169C  808D               	bsf	141,0,c	;volatile
  1670   00169E                     
  1671                           ;main_display_teclado_wiegand.c: 294:                 shift(0x1e);
  1672   00169E  0E1E               	movlw	30
  1673   0016A0  EC9C  F00D         	call	_shift
  1674                           
  1675                           ;main_display_teclado_wiegand.c: 297:                 break;
  1676   0016A4  EF79  F00B         	goto	l203
  1677   0016A8                     l201:
  1678                           
  1679                           ;main_display_teclado_wiegand.c: 299:                 LATCbits.LATC1=1;
  1680   0016A8  828B               	bsf	139,1,c	;volatile
  1681                           
  1682                           ;main_display_teclado_wiegand.c: 300:                 LATEbits.LATE2=0;
  1683   0016AA  948D               	bcf	141,2,c	;volatile
  1684                           
  1685                           ;main_display_teclado_wiegand.c: 301:                 LATEbits.LATE1=1;
  1686   0016AC  828D               	bsf	141,1,c	;volatile
  1687                           
  1688                           ;main_display_teclado_wiegand.c: 302:                 LATEbits.LATE0=1;
  1689   0016AE  808D               	bsf	141,0,c	;volatile
  1690   0016B0                     
  1691                           ;main_display_teclado_wiegand.c: 304:                 shift(0x41);
  1692   0016B0  0E41               	movlw	65
  1693   0016B2  EC9C  F00D         	call	_shift
  1694                           
  1695                           ;main_display_teclado_wiegand.c: 306:                 break;
  1696   0016B6  EF79  F00B         	goto	l203
  1697   0016BA                     l202:
  1698                           
  1699                           ;main_display_teclado_wiegand.c: 308:                 LATCbits.LATC1=0;
  1700   0016BA  928B               	bcf	139,1,c	;volatile
  1701                           
  1702                           ;main_display_teclado_wiegand.c: 309:                 LATEbits.LATE2=1;
  1703   0016BC  848D               	bsf	141,2,c	;volatile
  1704                           
  1705                           ;main_display_teclado_wiegand.c: 310:                 LATEbits.LATE1=1;
  1706   0016BE  828D               	bsf	141,1,c	;volatile
  1707                           
  1708                           ;main_display_teclado_wiegand.c: 311:                 LATEbits.LATE0=1;
  1709   0016C0  808D               	bsf	141,0,c	;volatile
  1710   0016C2                     
  1711                           ;main_display_teclado_wiegand.c: 313:                 shift(0x9e);
  1712   0016C2  0E9E               	movlw	158
  1713   0016C4  EC9C  F00D         	call	_shift
  1714                           
  1715                           ;main_display_teclado_wiegand.c: 315:                 break;
  1716   0016C8  EF79  F00B         	goto	l203
  1717   0016CC                     l1104:
  1718   0016CC  5023               	movf	_rota^0,w,c
  1719                           
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 4, Range of values is 1 to 4
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           13     7 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726   0016CE  0A01               	xorlw	1	; case 1
  1727   0016D0  B4D8               	btfsc	status,2,c
  1728   0016D2  EF42  F00B         	goto	l198
  1729   0016D6  0A03               	xorlw	3	; case 2
  1730   0016D8  B4D8               	btfsc	status,2,c
  1731   0016DA  EF4B  F00B         	goto	l200
  1732   0016DE  0A01               	xorlw	1	; case 3
  1733   0016E0  B4D8               	btfsc	status,2,c
  1734   0016E2  EF54  F00B         	goto	l201
  1735   0016E6  0A07               	xorlw	7	; case 4
  1736   0016E8  B4D8               	btfsc	status,2,c
  1737   0016EA  EF5D  F00B         	goto	l202
  1738   0016EE  EF79  F00B         	goto	l203
  1739   0016F2                     l203:
  1740   0016F2  0012               	return		;funcret
  1741   0016F4                     __end_of_dis_abierto:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _shift *****************
  1745 ;; Defined at:
  1746 ;;		line 216 in file "main_display_teclado_wiegand.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  dato            1    wreg     unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  dato            1    9[COMRAM] unsigned char 
  1751 ;;  n               1   10[COMRAM] unsigned char 
  1752 ;;  k               1    8[COMRAM] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1762 ;;      Params:         0       0       0       0       0       0       0       0       0
  1763 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1765 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 3
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_dis_abierto
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text8
  1777   001B38                     __ptext8:
  1778                           	callstack 0
  1779   001B38                     _shift:
  1780                           	callstack 25
  1781                           
  1782                           ;incstack = 0
  1783                           ;shift@dato stored from wreg
  1784   001B38  6E31               	movwf	shift@dato^0,c
  1785   001B3A                     
  1786                           ;main_display_teclado_wiegand.c: 219:     LATCbits.LATC0=1;
  1787   001B3A  808B               	bsf	139,0,c	;volatile
  1788                           
  1789                           ;main_display_teclado_wiegand.c: 220:     LATBbits.LATB5=1;
  1790   001B3C  8A8A               	bsf	138,5,c	;volatile
  1791                           
  1792                           ;main_display_teclado_wiegand.c: 223:     LATBbits.LATB5=0;
  1793   001B3E  9A8A               	bcf	138,5,c	;volatile
  1794                           
  1795                           ;main_display_teclado_wiegand.c: 224:     LATBbits.LATB5=1;
  1796   001B40  8A8A               	bsf	138,5,c	;volatile
  1797                           
  1798                           ;main_display_teclado_wiegand.c: 227:     LATAbits.LATA5=0;
  1799   001B42  9A89               	bcf	137,5,c	;volatile
  1800                           
  1801                           ;main_display_teclado_wiegand.c: 228:     LATAbits.LATA4=0;
  1802   001B44  9889               	bcf	137,4,c	;volatile
  1803   001B46                     
  1804                           ;main_display_teclado_wiegand.c: 231:     char n=0,k=0;
  1805   001B46  0E00               	movlw	0
  1806   001B48  6E32               	movwf	shift@n^0,c
  1807                           
  1808                           ;main_display_teclado_wiegand.c: 233:     for(n=0;n<=7;n++){
  1809   001B4A  0E00               	movlw	0
  1810   001B4C  6E32               	movwf	shift@n^0,c
  1811   001B4E                     l182:
  1812                           
  1813                           ;main_display_teclado_wiegand.c: 235:         if(dato&0x1) LATCbits.LATC0=1;
  1814   001B4E  A031               	btfss	shift@dato^0,0,c
  1815   001B50  EFAC  F00D         	goto	u11
  1816   001B54  EFAE  F00D         	goto	u10
  1817   001B58                     u11:
  1818   001B58  EFB1  F00D         	goto	l184
  1819   001B5C                     u10:
  1820   001B5C  808B               	bsf	139,0,c	;volatile
  1821   001B5E  EFB2  F00D         	goto	l1046
  1822   001B62                     l184:
  1823   001B62  908B               	bcf	139,0,c	;volatile
  1824   001B64                     l1046:
  1825                           
  1826                           ;main_display_teclado_wiegand.c: 239:         k=dato>>1;
  1827   001B64  90D8               	bcf	status,0,c
  1828   001B66  3031               	rrcf	shift@dato^0,w,c
  1829   001B68  6E30               	movwf	shift@k^0,c
  1830   001B6A                     
  1831                           ;main_display_teclado_wiegand.c: 240:         dato=k;
  1832   001B6A  C030  F031         	movff	shift@k,shift@dato
  1833   001B6E                     
  1834                           ;main_display_teclado_wiegand.c: 243:     LATAbits.LATA4=0;
  1835   001B6E  9889               	bcf	137,4,c	;volatile
  1836   001B70                     
  1837                           ;main_display_teclado_wiegand.c: 244:     LATAbits.LATA4=1;
  1838   001B70  8889               	bsf	137,4,c	;volatile
  1839   001B72                     
  1840                           ;main_display_teclado_wiegand.c: 245:     LATAbits.LATA4=0;
  1841   001B72  9889               	bcf	137,4,c	;volatile
  1842   001B74                     
  1843                           ;main_display_teclado_wiegand.c: 246:     }
  1844   001B74  2A32               	incf	shift@n^0,f,c
  1845   001B76  0E07               	movlw	7
  1846   001B78  6432               	cpfsgt	shift@n^0,c
  1847   001B7A  EFC1  F00D         	goto	u21
  1848   001B7E  EFC3  F00D         	goto	u20
  1849   001B82                     u21:
  1850   001B82  EFA7  F00D         	goto	l182
  1851   001B86                     u20:
  1852   001B86                     
  1853                           ;main_display_teclado_wiegand.c: 248:     LATAbits.LATA5=1;
  1854   001B86  8A89               	bsf	137,5,c	;volatile
  1855                           
  1856                           ;main_display_teclado_wiegand.c: 249:     LATAbits.LATA5=0;
  1857   001B88  9A89               	bcf	137,5,c	;volatile
  1858   001B8A  0012               	return		;funcret
  1859   001B8C                     __end_of_shift:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _config *****************
  1863 ;; Defined at:
  1864 ;;		line 15 in file "config.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 3
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text9
  1893   001796                     __ptext9:
  1894                           	callstack 0
  1895   001796                     _config:
  1896                           	callstack 27
  1897   001796                     
  1898                           ;config.c: 19:         OSCCON=0x70;
  1899   001796  0E70               	movlw	112
  1900   001798  6ED3               	movwf	211,c	;volatile
  1901                           
  1902                           ;config.c: 21:   OSCCON2=0x10;
  1903   00179A  0E10               	movlw	16
  1904   00179C  6ED2               	movwf	210,c	;volatile
  1905                           
  1906                           ;config.c: 22:   OSCTUNE=0x80;
  1907   00179E  0E80               	movlw	128
  1908   0017A0  6E9B               	movwf	155,c	;volatile
  1909                           
  1910                           ;config.c: 28:     ANSELA=0;
  1911   0017A2  0E00               	movlw	0
  1912   0017A4  010F               	movlb	15	; () banked
  1913   0017A6  6F5B               	movwf	91,b	;volatile
  1914   0017A8                     
  1915                           ; BSR set to: 15
  1916                           ;config.c: 29:     ANSELAbits.ANSA2=1;
  1917   0017A8  855B               	bsf	91,2,b	;volatile
  1918   0017AA                     
  1919                           ; BSR set to: 15
  1920                           ;config.c: 31:     TRISAbits.RA0=0;
  1921   0017AA  9092               	bcf	146,0,c	;volatile
  1922   0017AC                     
  1923                           ; BSR set to: 15
  1924                           ;config.c: 32:     TRISAbits.RA3=0;
  1925   0017AC  9692               	bcf	146,3,c	;volatile
  1926   0017AE                     
  1927                           ; BSR set to: 15
  1928                           ;config.c: 33:     TRISAbits.RA1=0;
  1929   0017AE  9292               	bcf	146,1,c	;volatile
  1930   0017B0                     
  1931                           ; BSR set to: 15
  1932                           ;config.c: 34:     TRISAbits.RA4=0;
  1933   0017B0  9892               	bcf	146,4,c	;volatile
  1934   0017B2                     
  1935                           ; BSR set to: 15
  1936                           ;config.c: 35:     TRISAbits.RA5=0;
  1937   0017B2  9A92               	bcf	146,5,c	;volatile
  1938   0017B4                     
  1939                           ; BSR set to: 15
  1940                           ;config.c: 36:     TRISAbits.RA6=0;
  1941   0017B4  9C92               	bcf	146,6,c	;volatile
  1942   0017B6                     
  1943                           ; BSR set to: 15
  1944                           ;config.c: 37:     TRISBbits.RB0=1;
  1945   0017B6  8093               	bsf	147,0,c	;volatile
  1946   0017B8                     
  1947                           ; BSR set to: 15
  1948                           ;config.c: 38:     TRISBbits.RB5=0;
  1949   0017B8  9A93               	bcf	147,5,c	;volatile
  1950   0017BA                     
  1951                           ; BSR set to: 15
  1952                           ;config.c: 39:     TRISBbits.RB6=0;
  1953   0017BA  9C93               	bcf	147,6,c	;volatile
  1954                           
  1955                           ;config.c: 41:     ANSELC=0;
  1956   0017BC  0E00               	movlw	0
  1957   0017BE  6F5D               	movwf	93,b	;volatile
  1958   0017C0                     
  1959                           ; BSR set to: 15
  1960                           ;config.c: 42:     TRISCbits.RC0=0;
  1961   0017C0  9094               	bcf	148,0,c	;volatile
  1962   0017C2                     
  1963                           ; BSR set to: 15
  1964                           ;config.c: 43:     TRISCbits.RC1=0;
  1965   0017C2  9294               	bcf	148,1,c	;volatile
  1966                           
  1967                           ;config.c: 47:     ANSELD=0;
  1968   0017C4  0E00               	movlw	0
  1969   0017C6  6F5E               	movwf	94,b	;volatile
  1970   0017C8                     
  1971                           ; BSR set to: 15
  1972                           ;config.c: 49:     TRISDbits.RD4=0;
  1973   0017C8  9895               	bcf	149,4,c	;volatile
  1974   0017CA                     
  1975                           ; BSR set to: 15
  1976                           ;config.c: 50:     TRISDbits.RD5=0;
  1977   0017CA  9A95               	bcf	149,5,c	;volatile
  1978   0017CC                     
  1979                           ; BSR set to: 15
  1980                           ;config.c: 51:     TRISDbits.RD6=0;
  1981   0017CC  9C95               	bcf	149,6,c	;volatile
  1982   0017CE                     
  1983                           ; BSR set to: 15
  1984                           ;config.c: 52:     TRISDbits.RD7=0;
  1985   0017CE  9E95               	bcf	149,7,c	;volatile
  1986   0017D0                     
  1987                           ; BSR set to: 15
  1988                           ;config.c: 54:     TRISDbits.RD3=1;
  1989   0017D0  8695               	bsf	149,3,c	;volatile
  1990   0017D2                     
  1991                           ; BSR set to: 15
  1992                           ;config.c: 55:     TRISDbits.RD2=1;
  1993   0017D2  8495               	bsf	149,2,c	;volatile
  1994   0017D4                     
  1995                           ; BSR set to: 15
  1996                           ;config.c: 56:     TRISDbits.RD1=1;
  1997   0017D4  8295               	bsf	149,1,c	;volatile
  1998   0017D6                     
  1999                           ; BSR set to: 15
  2000                           ;config.c: 57:     TRISDbits.RD0=1;
  2001   0017D6  8095               	bsf	149,0,c	;volatile
  2002                           
  2003                           ;config.c: 59:     ANSELE=0;
  2004   0017D8  0E00               	movlw	0
  2005   0017DA  6F5F               	movwf	95,b	;volatile
  2006                           
  2007                           ;config.c: 61:     TRISE=0;
  2008   0017DC  0E00               	movlw	0
  2009   0017DE  6E96               	movwf	150,c	;volatile
  2010                           
  2011                           ;config.c: 67:     INTCON=0;
  2012   0017E0  0E00               	movlw	0
  2013   0017E2  6EF2               	movwf	242,c	;volatile
  2014   0017E4                     
  2015                           ; BSR set to: 15
  2016                           ;config.c: 68:     RCONbits.IPEN=1;
  2017   0017E4  8ED0               	bsf	208,7,c	;volatile
  2018   0017E6                     
  2019                           ; BSR set to: 15
  2020                           ;config.c: 69:     INTCONbits.INT0E=1;
  2021   0017E6  88F2               	bsf	242,4,c	;volatile
  2022   0017E8                     
  2023                           ; BSR set to: 15
  2024                           ;config.c: 70:     INTCON2bits.INTEDG0=0;
  2025   0017E8  9CF1               	bcf	241,6,c	;volatile
  2026   0017EA                     
  2027                           ; BSR set to: 15
  2028                           ;config.c: 71:     INTCONbits.GIEH=1;
  2029   0017EA  8EF2               	bsf	242,7,c	;volatile
  2030   0017EC                     
  2031                           ; BSR set to: 15
  2032                           ;config.c: 72:     INTCONbits.GIEL=1;
  2033   0017EC  8CF2               	bsf	242,6,c	;volatile
  2034   0017EE                     
  2035                           ; BSR set to: 15
  2036                           ;config.c: 73:     INTCONbits.T0IE=1;
  2037   0017EE  8AF2               	bsf	242,5,c	;volatile
  2038   0017F0                     
  2039                           ; BSR set to: 15
  2040                           ;config.c: 74:     INTCON2bits.T0IP=0;
  2041   0017F0  94F1               	bcf	241,2,c	;volatile
  2042   0017F2                     
  2043                           ; BSR set to: 15
  2044                           ;config.c: 75:     PIE1bits.RCIE=1;
  2045   0017F2  8A9D               	bsf	157,5,c	;volatile
  2046   0017F4                     
  2047                           ; BSR set to: 15
  2048                           ;config.c: 76:     IPR1bits.RCIP=1;
  2049   0017F4  8A9F               	bsf	159,5,c	;volatile
  2050   0017F6                     
  2051                           ; BSR set to: 15
  2052                           ;config.c: 79:     T0CONbits.T08BIT=0;
  2053   0017F6  9CD5               	bcf	213,6,c	;volatile
  2054   0017F8                     
  2055                           ; BSR set to: 15
  2056                           ;config.c: 80:     T0CONbits.T0CS=0;
  2057   0017F8  9AD5               	bcf	213,5,c	;volatile
  2058   0017FA                     
  2059                           ; BSR set to: 15
  2060                           ;config.c: 81:     T0CONbits.PSA=0;
  2061   0017FA  96D5               	bcf	213,3,c	;volatile
  2062                           
  2063                           ;config.c: 82:     T0CONbits.T0PS=1;
  2064   0017FC  50D5               	movf	213,w,c	;volatile
  2065   0017FE  0BF8               	andlw	-8
  2066   001800  0901               	iorlw	1
  2067   001802  6ED5               	movwf	213,c	;volatile
  2068                           
  2069                           ;config.c: 86:     TMR0H=0xd1;;
  2070   001804  0ED1               	movlw	209
  2071   001806  6ED7               	movwf	215,c	;volatile
  2072                           
  2073                           ;config.c: 87:     TMR0L=0x1f;;
  2074   001808  0E1F               	movlw	31
  2075   00180A  6ED6               	movwf	214,c	;volatile
  2076                           
  2077                           ;config.c: 91:     SPBRG1 = 0x4d;
  2078   00180C  0E4D               	movlw	77
  2079   00180E  6EAF               	movwf	175,c	;volatile
  2080                           
  2081                           ;config.c: 92:     SPBRGH1 = 0;
  2082   001810  0E00               	movlw	0
  2083   001812  6EB0               	movwf	176,c	;volatile
  2084   001814                     
  2085                           ; BSR set to: 15
  2086                           ;config.c: 93:     TXSTA1bits.BRGH=0;
  2087   001814  94AC               	bcf	172,2,c	;volatile
  2088   001816                     
  2089                           ; BSR set to: 15
  2090                           ;config.c: 94:     TXSTA1bits.TX9=0;
  2091   001816  9CAC               	bcf	172,6,c	;volatile
  2092   001818                     
  2093                           ; BSR set to: 15
  2094                           ;config.c: 95:     TXSTA1bits.TXEN=1;
  2095   001818  8AAC               	bsf	172,5,c	;volatile
  2096   00181A                     
  2097                           ; BSR set to: 15
  2098                           ;config.c: 96:     TXSTA1bits.SYNC=0;
  2099   00181A  98AC               	bcf	172,4,c	;volatile
  2100   00181C                     
  2101                           ; BSR set to: 15
  2102                           ;config.c: 97:     RCSTA1bits.RX9=0;
  2103   00181C  9CAB               	bcf	171,6,c	;volatile
  2104   00181E                     
  2105                           ; BSR set to: 15
  2106                           ;config.c: 98:     RCSTA1bits.CREN=1;
  2107   00181E  88AB               	bsf	171,4,c	;volatile
  2108                           
  2109                           ;config.c: 99:     BAUDCON1=0x40;
  2110   001820  0E40               	movlw	64
  2111   001822  6EB8               	movwf	184,c	;volatile
  2112   001824                     
  2113                           ; BSR set to: 15
  2114                           ;config.c: 100:     RCSTA1bits.SPEN=1;
  2115   001824  8EAB               	bsf	171,7,c	;volatile
  2116   001826                     
  2117                           ; BSR set to: 15
  2118   001826  0012               	return		;funcret
  2119   001828                     __end_of_config:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _conf_wig *****************
  2123 ;; Defined at:
  2124 ;;		line 100 in file "wiegand.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 3
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153   001C00                     __ptext10:
  2154                           	callstack 0
  2155   001C00                     _conf_wig:
  2156                           	callstack 27
  2157   001C00                     
  2158                           ;wiegand.c: 102:     ANSELA=0;
  2159   001C00  0E00               	movlw	0
  2160   001C02  010F               	movlb	15	; () banked
  2161   001C04  6F5B               	movwf	91,b	;volatile
  2162                           
  2163                           ;wiegand.c: 103:     ANSELB=0;
  2164   001C06  0E00               	movlw	0
  2165   001C08  6F5C               	movwf	92,b	;volatile
  2166                           
  2167                           ;wiegand.c: 104:     ANSELC=0;
  2168   001C0A  0E00               	movlw	0
  2169   001C0C  6F5D               	movwf	93,b	;volatile
  2170   001C0E                     
  2171                           ; BSR set to: 15
  2172                           ;wiegand.c: 107:     TRISBbits.RB1=1;
  2173   001C0E  8293               	bsf	147,1,c	;volatile
  2174   001C10                     
  2175                           ; BSR set to: 15
  2176                           ;wiegand.c: 108:     TRISBbits.RB2=1;
  2177   001C10  8493               	bsf	147,2,c	;volatile
  2178   001C12                     
  2179                           ; BSR set to: 15
  2180                           ;wiegand.c: 110:     INTCON2bits.INTEDG1=0;
  2181   001C12  9AF1               	bcf	241,5,c	;volatile
  2182   001C14                     
  2183                           ; BSR set to: 15
  2184                           ;wiegand.c: 111:     INTCON2bits.INTEDG2=0;
  2185   001C14  98F1               	bcf	241,4,c	;volatile
  2186   001C16                     
  2187                           ; BSR set to: 15
  2188                           ;wiegand.c: 112:     INTCON3bits.INT1E=1;
  2189   001C16  86F0               	bsf	240,3,c	;volatile
  2190   001C18                     
  2191                           ; BSR set to: 15
  2192                           ;wiegand.c: 113:     INTCON3bits.INT2E=1;
  2193   001C18  88F0               	bsf	240,4,c	;volatile
  2194   001C1A                     
  2195                           ; BSR set to: 15
  2196                           ;wiegand.c: 114:     INTCON3bits.INT1IP=1;
  2197   001C1A  8CF0               	bsf	240,6,c	;volatile
  2198   001C1C                     
  2199                           ; BSR set to: 15
  2200                           ;wiegand.c: 115:     INTCON3bits.INT2IP=1;
  2201   001C1C  8EF0               	bsf	240,7,c	;volatile
  2202   001C1E                     
  2203                           ; BSR set to: 15
  2204   001C1E  0012               	return		;funcret
  2205   001C20                     __end_of_conf_wig:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _carga_ini *****************
  2209 ;; Defined at:
  2210 ;;		line 328 in file "main_display_teclado_wiegand.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 5
  2231 ;; This function calls:
  2232 ;;		_dis_cerrado
  2233 ;;		_tx_232
  2234 ;;		_verificacion
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text11
  2241   001ADA                     __ptext11:
  2242                           	callstack 0
  2243   001ADA                     _carga_ini:
  2244                           	callstack 25
  2245   001ADA                     
  2246                           ;main_display_teclado_wiegand.c: 329:     tx_232("Cargar los codigos: \n");
  2247   001ADA  0E62               	movlw	low STR_5
  2248   001ADC  6E30               	movwf	tx_232@mensaje^0,c
  2249   001ADE  0E11               	movlw	high STR_5
  2250   001AE0  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2251   001AE2  ECCC  F00C         	call	_tx_232	;wreg free
  2252                           
  2253                           ;main_display_teclado_wiegand.c: 331:     while(contador_de_carga<2){
  2254   001AE6  EF77  F00D         	goto	l1700
  2255   001AEA                     l1698:
  2256                           
  2257                           ;main_display_teclado_wiegand.c: 332:     verificacion();
  2258   001AEA  EC07  F009         	call	_verificacion	;wreg free
  2259   001AEE                     l1700:
  2260                           
  2261                           ;main_display_teclado_wiegand.c: 331:     while(contador_de_carga<2){
  2262   001AEE  BE13               	btfsc	(_contador_de_carga+1)^0,7,c
  2263   001AF0  EF83  F00D         	goto	u781
  2264   001AF4  5013               	movf	(_contador_de_carga+1)^0,w,c
  2265   001AF6  E109               	bnz	u780
  2266   001AF8  0E02               	movlw	2
  2267   001AFA  5C12               	subwf	_contador_de_carga^0,w,c
  2268   001AFC  A0D8               	btfss	status,0,c
  2269   001AFE  EF83  F00D         	goto	u781
  2270   001B02  EF85  F00D         	goto	u780
  2271   001B06                     u781:
  2272   001B06  EF75  F00D         	goto	l1698
  2273   001B0A                     u780:
  2274   001B0A                     
  2275                           ;main_display_teclado_wiegand.c: 335:     tx_232("Codigos cargados correctamente \n");
  2276   001B0A  0E25               	movlw	low STR_6
  2277   001B0C  6E30               	movwf	tx_232@mensaje^0,c
  2278   001B0E  0E11               	movlw	high STR_6
  2279   001B10  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2280   001B12  ECCC  F00C         	call	_tx_232	;wreg free
  2281                           
  2282                           ;main_display_teclado_wiegand.c: 336:     tx_232("Se va a cerrar el sistema \n");
  2283   001B16  0E46               	movlw	low STR_7
  2284   001B18  6E30               	movwf	tx_232@mensaje^0,c
  2285   001B1A  0E11               	movlw	high STR_7
  2286   001B1C  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2287   001B1E  ECCC  F00C         	call	_tx_232	;wreg free
  2288   001B22                     
  2289                           ;main_display_teclado_wiegand.c: 337:     dis_cerrado();
  2290   001B22  EC02  F00D         	call	_dis_cerrado	;wreg free
  2291   001B26                     
  2292                           ;main_display_teclado_wiegand.c: 338:     estado=0;
  2293   001B26  0E00               	movlw	0
  2294   001B28  6E17               	movwf	(_estado+1)^0,c
  2295   001B2A  0E00               	movlw	0
  2296   001B2C  6E16               	movwf	_estado^0,c
  2297   001B2E                     
  2298                           ;main_display_teclado_wiegand.c: 339:     aux_de_carga_inicial=0;
  2299   001B2E  0E00               	movlw	0
  2300   001B30  6E11               	movwf	(_aux_de_carga_inicial+1)^0,c
  2301   001B32  0E00               	movlw	0
  2302   001B34  6E10               	movwf	_aux_de_carga_inicial^0,c
  2303   001B36  0012               	return		;funcret
  2304   001B38                     __end_of_carga_ini:
  2305                           	callstack 0
  2306                           
  2307 ;; *************** function _verificacion *****************
  2308 ;; Defined at:
  2309 ;;		line 344 in file "main_display_teclado_wiegand.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 4
  2330 ;; This function calls:
  2331 ;;		_tx_232
  2332 ;;		_weeprom
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;;		_carga_ini
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text12
  2340   00120E                     __ptext12:
  2341                           	callstack 0
  2342   00120E                     _verificacion:
  2343                           	callstack 26
  2344   00120E                     
  2345                           ;main_display_teclado_wiegand.c: 346:      if(contador_de_lectura>=5){
  2346   00120E  BE15               	btfsc	(_contador_de_lectura+1)^0,7,c
  2347   001210  EF13  F009         	goto	u621
  2348   001214  5015               	movf	(_contador_de_lectura+1)^0,w,c
  2349   001216  E109               	bnz	u620
  2350   001218  0E05               	movlw	5
  2351   00121A  5C14               	subwf	_contador_de_lectura^0,w,c
  2352   00121C  A0D8               	btfss	status,0,c
  2353   00121E  EF13  F009         	goto	u621
  2354   001222  EF15  F009         	goto	u620
  2355   001226                     u621:
  2356   001226  EFAD  F009         	goto	l222
  2357   00122A                     u620:
  2358   00122A                     
  2359                           ;main_display_teclado_wiegand.c: 347:             contador_de_lectura=0;
  2360   00122A  0E00               	movlw	0
  2361   00122C  6E15               	movwf	(_contador_de_lectura+1)^0,c
  2362   00122E  0E00               	movlw	0
  2363   001230  6E14               	movwf	_contador_de_lectura^0,c
  2364   001232                     
  2365                           ;main_display_teclado_wiegand.c: 349:             byte_de_verif=(codigo[0]+codigo[1]+cod
      +                          igo[2]+codigo[3])&0xFF;
  2366   001232  5002               	movf	(_codigo+1)^0,w,c
  2367   001234  2403               	addwf	(_codigo+2)^0,w,c
  2368   001236  2404               	addwf	(_codigo+3)^0,w,c
  2369   001238  2401               	addwf	_codigo^0,w,c
  2370   00123A  6E24               	movwf	_byte_de_verif^0,c
  2371   00123C                     
  2372                           ;main_display_teclado_wiegand.c: 351:             if(byte_de_verif==codigo[5] && estado=
      +                          =1 && codigo[0]== 01){
  2373   00123C  5024               	movf	_byte_de_verif^0,w,c
  2374   00123E  1806               	xorwf	(_codigo+5)^0,w,c
  2375   001240  A4D8               	btfss	status,2,c
  2376   001242  EF25  F009         	goto	u631
  2377   001246  EF27  F009         	goto	u630
  2378   00124A                     u631:
  2379   00124A  EF52  F009         	goto	l1604
  2380   00124E                     u630:
  2381   00124E  0416               	decf	_estado^0,w,c
  2382   001250  1017               	iorwf	(_estado+1)^0,w,c
  2383   001252  A4D8               	btfss	status,2,c
  2384   001254  EF2E  F009         	goto	u641
  2385   001258  EF30  F009         	goto	u640
  2386   00125C                     u641:
  2387   00125C  EF52  F009         	goto	l1604
  2388   001260                     u640:
  2389   001260  0401               	decf	_codigo^0,w,c
  2390   001262  A4D8               	btfss	status,2,c
  2391   001264  EF36  F009         	goto	u651
  2392   001268  EF38  F009         	goto	u650
  2393   00126C                     u651:
  2394   00126C  EF52  F009         	goto	l1604
  2395   001270                     u650:
  2396   001270                     
  2397                           ;main_display_teclado_wiegand.c: 352:                 weeprom(codigo[0],codigo[1]);
  2398   001270  C002  F030         	movff	_codigo+1,weeprom@dato
  2399   001274  5001               	movf	_codigo^0,w,c
  2400   001276  ECEA  F00D         	call	_weeprom
  2401   00127A                     
  2402                           ;main_display_teclado_wiegand.c: 353:                 weeprom(codigo[0]+0x01,codigo[2]);
  2403   00127A  C003  F030         	movff	_codigo+2,weeprom@dato
  2404   00127E  2801               	incf	_codigo^0,w,c
  2405   001280  ECEA  F00D         	call	_weeprom
  2406   001284                     
  2407                           ;main_display_teclado_wiegand.c: 354:                 weeprom(codigo[0]+0x02,codigo[3]);
  2408   001284  C004  F030         	movff	_codigo+3,weeprom@dato
  2409   001288  5001               	movf	_codigo^0,w,c
  2410   00128A  0F02               	addlw	2
  2411   00128C  ECEA  F00D         	call	_weeprom
  2412   001290                     
  2413                           ;main_display_teclado_wiegand.c: 355:                 tx_232("Ok \n");
  2414   001290  0E07               	movlw	low STR_8
  2415   001292  6E30               	movwf	tx_232@mensaje^0,c
  2416   001294  0E12               	movlw	high STR_8
  2417   001296  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2418   001298  ECCC  F00C         	call	_tx_232	;wreg free
  2419   00129C                     l1602:
  2420                           
  2421                           ;main_display_teclado_wiegand.c: 356:                 contador_de_carga++;
  2422   00129C  4A12               	infsnz	_contador_de_carga^0,f,c
  2423   00129E  2A13               	incf	(_contador_de_carga+1)^0,f,c
  2424                           
  2425                           ;main_display_teclado_wiegand.c: 357:             }
  2426   0012A0  EFAD  F009         	goto	l222
  2427   0012A4                     l1604:
  2428                           
  2429                           ;main_display_teclado_wiegand.c: 359:                 if(byte_de_verif==codigo[5] && est
      +                          ado==1 && codigo[0]== 02){
  2430   0012A4  5024               	movf	_byte_de_verif^0,w,c
  2431   0012A6  1806               	xorwf	(_codigo+5)^0,w,c
  2432   0012A8  A4D8               	btfss	status,2,c
  2433   0012AA  EF59  F009         	goto	u661
  2434   0012AE  EF5B  F009         	goto	u660
  2435   0012B2                     u661:
  2436   0012B2  EF87  F009         	goto	l1616
  2437   0012B6                     u660:
  2438   0012B6  0416               	decf	_estado^0,w,c
  2439   0012B8  1017               	iorwf	(_estado+1)^0,w,c
  2440   0012BA  A4D8               	btfss	status,2,c
  2441   0012BC  EF62  F009         	goto	u671
  2442   0012C0  EF64  F009         	goto	u670
  2443   0012C4                     u671:
  2444   0012C4  EF87  F009         	goto	l1616
  2445   0012C8                     u670:
  2446   0012C8  0E02               	movlw	2
  2447   0012CA  1801               	xorwf	_codigo^0,w,c
  2448   0012CC  A4D8               	btfss	status,2,c
  2449   0012CE  EF6B  F009         	goto	u681
  2450   0012D2  EF6D  F009         	goto	u680
  2451   0012D6                     u681:
  2452   0012D6  EF87  F009         	goto	l1616
  2453   0012DA                     u680:
  2454   0012DA                     
  2455                           ;main_display_teclado_wiegand.c: 360:                     weeprom(codigo[0]+0x02,codigo[
      +                          1]);
  2456   0012DA  C002  F030         	movff	_codigo+1,weeprom@dato
  2457   0012DE  5001               	movf	_codigo^0,w,c
  2458   0012E0  0F02               	addlw	2
  2459   0012E2  ECEA  F00D         	call	_weeprom
  2460                           
  2461                           ;main_display_teclado_wiegand.c: 361:                     weeprom(codigo[0]+0x03,codigo[
      +                          2]);
  2462   0012E6  C003  F030         	movff	_codigo+2,weeprom@dato
  2463   0012EA  5001               	movf	_codigo^0,w,c
  2464   0012EC  0F03               	addlw	3
  2465   0012EE  ECEA  F00D         	call	_weeprom
  2466                           
  2467                           ;main_display_teclado_wiegand.c: 362:                     weeprom(codigo[0]+0x04,codigo[
      +                          3]);
  2468   0012F2  C004  F030         	movff	_codigo+3,weeprom@dato
  2469   0012F6  5001               	movf	_codigo^0,w,c
  2470   0012F8  0F04               	addlw	4
  2471   0012FA  ECEA  F00D         	call	_weeprom
  2472   0012FE                     
  2473                           ;main_display_teclado_wiegand.c: 363:                     tx_232("Dato Correcto.\n");
  2474   0012FE  0EC9               	movlw	low STR_9
  2475   001300  6E30               	movwf	tx_232@mensaje^0,c
  2476   001302  0E11               	movlw	high STR_9
  2477   001304  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2478   001306  ECCC  F00C         	call	_tx_232	;wreg free
  2479   00130A  EF4E  F009         	goto	l1602
  2480   00130E                     l1616:
  2481                           
  2482                           ;main_display_teclado_wiegand.c: 367:                     tx_232("\nError\n");
  2483   00130E  0EFF               	movlw	low STR_10
  2484   001310  6E30               	movwf	tx_232@mensaje^0,c
  2485   001312  0E11               	movlw	high STR_10
  2486   001314  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2487   001316  ECCC  F00C         	call	_tx_232	;wreg free
  2488   00131A                     
  2489                           ;main_display_teclado_wiegand.c: 368:                     if (estado==1){
  2490   00131A  0416               	decf	_estado^0,w,c
  2491   00131C  1017               	iorwf	(_estado+1)^0,w,c
  2492   00131E  A4D8               	btfss	status,2,c
  2493   001320  EF94  F009         	goto	u691
  2494   001324  EF96  F009         	goto	u690
  2495   001328                     u691:
  2496   001328  EF9C  F009         	goto	l1622
  2497   00132C                     u690:
  2498   00132C                     
  2499                           ;main_display_teclado_wiegand.c: 369:                         tx_232("Valor incorrecto.\
      +                          n");
  2500   00132C  0EB6               	movlw	low STR_11
  2501   00132E  6E30               	movwf	tx_232@mensaje^0,c
  2502   001330  0E11               	movlw	high STR_11
  2503   001332  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2504   001334  ECCC  F00C         	call	_tx_232	;wreg free
  2505   001338                     l1622:
  2506                           
  2507                           ;main_display_teclado_wiegand.c: 371:                     if (estado==0){
  2508   001338  5016               	movf	_estado^0,w,c
  2509   00133A  1017               	iorwf	(_estado+1)^0,w,c
  2510   00133C  A4D8               	btfss	status,2,c
  2511   00133E  EFA3  F009         	goto	u701
  2512   001342  EFA5  F009         	goto	u700
  2513   001346                     u701:
  2514   001346  EFAD  F009         	goto	l215
  2515   00134A                     u700:
  2516   00134A                     
  2517                           ;main_display_teclado_wiegand.c: 372:                         tx_232("Sistema cerrado no
      +                           se puede cargar codigo.\n");
  2518   00134A  0EF9               	movlw	low STR_12
  2519   00134C  6E30               	movwf	tx_232@mensaje^0,c
  2520   00134E  0E10               	movlw	high STR_12
  2521   001350  6E31               	movwf	(tx_232@mensaje+1)^0,c
  2522   001352  ECCC  F00C         	call	_tx_232	;wreg free
  2523   001356  EFAD  F009         	goto	l222
  2524   00135A                     l215:
  2525   00135A                     l222:
  2526   00135A  0012               	return		;funcret
  2527   00135C                     __end_of_verificacion:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _weeprom *****************
  2531 ;; Defined at:
  2532 ;;		line 186 in file "main_display_teclado_wiegand.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dir             1    wreg     unsigned char 
  2535 ;;  dato            1    8[COMRAM] unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  dir             1    9[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         1       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2550 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        2 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 3
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;;		_verificacion
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text13
  2563   001BD4                     __ptext13:
  2564                           	callstack 0
  2565   001BD4                     _weeprom:
  2566                           	callstack 27
  2567                           
  2568                           ;incstack = 0
  2569                           ;weeprom@dir stored from wreg
  2570   001BD4  6E31               	movwf	weeprom@dir^0,c
  2571   001BD6                     
  2572                           ;main_display_teclado_wiegand.c: 188:     INTCONbits.GIE=0;
  2573   001BD6  9EF2               	bcf	242,7,c	;volatile
  2574   001BD8                     
  2575                           ;main_display_teclado_wiegand.c: 189:     EEADR= dir;
  2576   001BD8  C031  FFA9         	movff	weeprom@dir,4009	;volatile
  2577   001BDC                     
  2578                           ;main_display_teclado_wiegand.c: 190:     EEDATA=dato;
  2579   001BDC  C030  FFA8         	movff	weeprom@dato,4008	;volatile
  2580   001BE0                     
  2581                           ;main_display_teclado_wiegand.c: 192:     EECON1bits.WREN=1;
  2582   001BE0  84A6               	bsf	166,2,c	;volsfr
  2583   001BE2                     
  2584                           ;main_display_teclado_wiegand.c: 194:     EECON2=0x55;
  2585   001BE2  0E55               	movlw	85
  2586   001BE4  6EA7               	movwf	167,c	;volsfr
  2587   001BE6                     
  2588                           ;main_display_teclado_wiegand.c: 195:     EECON2=0xAA;
  2589   001BE6  0EAA               	movlw	170
  2590   001BE8  6EA7               	movwf	167,c	;volsfr
  2591   001BEA                     
  2592                           ;main_display_teclado_wiegand.c: 197:     EECON1bits.WR=1;
  2593   001BEA  82A6               	bsf	166,1,c	;volsfr
  2594   001BEC                     l173:
  2595   001BEC  B2A6               	btfsc	166,1,c	;volsfr
  2596   001BEE  EFFB  F00D         	goto	u611
  2597   001BF2  EFFD  F00D         	goto	u610
  2598   001BF6                     u611:
  2599   001BF6  EFF6  F00D         	goto	l173
  2600   001BFA                     u610:
  2601   001BFA                     
  2602                           ;main_display_teclado_wiegand.c: 199:     EECON1bits.WREN=0;
  2603   001BFA  94A6               	bcf	166,2,c	;volsfr
  2604                           
  2605                           ;main_display_teclado_wiegand.c: 200:     INTCONbits.GIE=1;
  2606   001BFC  8EF2               	bsf	242,7,c	;volatile
  2607   001BFE  0012               	return		;funcret
  2608   001C00                     __end_of_weeprom:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _tx_232 *****************
  2612 ;; Defined at:
  2613 ;;		line 173 in file "main_display_teclado_wiegand.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  mensaje         2    8[COMRAM] PTR unsigned char 
  2616 ;;		 -> STR_14(20), STR_13(20), STR_12(44), STR_11(19), 
  2617 ;;		 -> STR_10(8), STR_9(16), STR_8(5), STR_7(28), 
  2618 ;;		 -> STR_6(33), STR_5(22), STR_4(13), STR_3(11), 
  2619 ;;		 -> STR_2(22), STR_1(14), main@retorno(1), 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        2 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 3
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;;		_verificacion_ini
  2643 ;;		_carga_ini
  2644 ;;		_verificacion
  2645 ;;		_permutacion_de_estados
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text14
  2650   001998                     __ptext14:
  2651                           	callstack 0
  2652   001998                     _tx_232:
  2653                           	callstack 26
  2654   001998                     
  2655                           ;main_display_teclado_wiegand.c: 175:     while (*mensaje != 0){
  2656   001998  EFE9  F00C         	goto	l1566
  2657   00199C                     l1560:
  2658                           
  2659                           ;main_display_teclado_wiegand.c: 177:         TXREG1=*mensaje;
  2660   00199C  C030  FFF6         	movff	tx_232@mensaje,tblptrl
  2661   0019A0  C031  FFF7         	movff	tx_232@mensaje+1,tblptrh
  2662   0019A4  6AF8               	clrf	tblptru,c
  2663   0019A6  0E07               	movlw	(high __ramtop+-1)
  2664   0019A8  64F7               	cpfsgt	tblptrh,c
  2665   0019AA  D003               	bra	u577
  2666   0019AC  0008               	tblrd		*
  2667   0019AE  50F5               	movf	tablat,w,c
  2668   0019B0  D005               	bra	u570
  2669   0019B2                     u577:
  2670   0019B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2671   0019B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2672   0019BA  50EF               	movf	indf0,w,c
  2673   0019BC                     u570:
  2674   0019BC  6EAD               	movwf	173,c	;volatile
  2675   0019BE                     
  2676                           ;main_display_teclado_wiegand.c: 178:         PIR1bits.TXIF=0;
  2677   0019BE  989E               	bcf	158,4,c	;volatile
  2678   0019C0                     l166:
  2679   0019C0  A89E               	btfss	158,4,c	;volatile
  2680   0019C2  EFE5  F00C         	goto	u581
  2681   0019C6  EFE7  F00C         	goto	u580
  2682   0019CA                     u581:
  2683   0019CA  EFE0  F00C         	goto	l166
  2684   0019CE                     u580:
  2685   0019CE                     
  2686                           ;main_display_teclado_wiegand.c: 181:         mensaje++;
  2687   0019CE  4A30               	infsnz	tx_232@mensaje^0,f,c
  2688   0019D0  2A31               	incf	(tx_232@mensaje+1)^0,f,c
  2689   0019D2                     l1566:
  2690                           
  2691                           ;main_display_teclado_wiegand.c: 175:     while (*mensaje != 0){
  2692   0019D2  C030  FFF6         	movff	tx_232@mensaje,tblptrl
  2693   0019D6  C031  FFF7         	movff	tx_232@mensaje+1,tblptrh
  2694   0019DA  6AF8               	clrf	tblptru,c
  2695   0019DC  0E07               	movlw	(high __ramtop+-1)
  2696   0019DE  64F7               	cpfsgt	tblptrh,c
  2697   0019E0  D003               	bra	u597
  2698   0019E2  0008               	tblrd		*
  2699   0019E4  50F5               	movf	tablat,w,c
  2700   0019E6  D005               	bra	u590
  2701   0019E8                     u597:
  2702   0019E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  2703   0019EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  2704   0019F0  50EF               	movf	indf0,w,c
  2705   0019F2                     u590:
  2706   0019F2  0900               	iorlw	0
  2707   0019F4  A4D8               	btfss	status,2,c
  2708   0019F6  EFFF  F00C         	goto	u601
  2709   0019FA  EF01  F00D         	goto	u600
  2710   0019FE                     u601:
  2711   0019FE  EFCE  F00C         	goto	l1560
  2712   001A02                     u600:
  2713   001A02  0012               	return		;funcret
  2714   001A04                     __end_of_tx_232:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _dis_cerrado *****************
  2718 ;; Defined at:
  2719 ;;		line 320 in file "main_display_teclado_wiegand.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        1 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 3
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_verificacion_ini
  2744 ;;		_carga_ini
  2745 ;;		_permutacion_de_estados
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text15
  2750   001A04                     __ptext15:
  2751                           	callstack 0
  2752   001A04                     _dis_cerrado:
  2753                           	callstack 26
  2754   001A04                     
  2755                           ;main_display_teclado_wiegand.c: 321:     LATEbits.LATE0=segmentos[12];
  2756   001A04  0EF5               	movlw	low (_segmentos+12)
  2757   001A06  6EF6               	movwf	tblptrl,c
  2758   001A08  0E10               	movlw	high (_segmentos+12)
  2759   001A0A  6EF7               	movwf	tblptrh,c
  2760   001A0C                     	if	0	;tblptru may be non-zero
  2761   001A0C                     	endif
  2762   001A0C                     	if	0	;tblptru may be non-zero
  2763   001A0C                     	endif
  2764   001A0C  0008               	tblrd		*
  2765   001A0E  CFF5 F030          	movff	tablat,??_dis_cerrado
  2766   001A12  508D               	movf	141,w,c	;volatile
  2767   001A14  1830               	xorwf	??_dis_cerrado^0,w,c
  2768   001A16  0BFE               	andlw	-2
  2769   001A18  1830               	xorwf	??_dis_cerrado^0,w,c
  2770   001A1A  6E8D               	movwf	141,c	;volatile
  2771                           
  2772                           ;main_display_teclado_wiegand.c: 322:     LATEbits.LATE1=segmentos[11];
  2773   001A1C  0EF4               	movlw	low (_segmentos+11)
  2774   001A1E  6EF6               	movwf	tblptrl,c
  2775   001A20  0E10               	movlw	high (_segmentos+11)
  2776   001A22  6EF7               	movwf	tblptrh,c
  2777   001A24                     	if	0	;tblptru may be non-zero
  2778   001A24                     	endif
  2779   001A24                     	if	0	;tblptru may be non-zero
  2780   001A24                     	endif
  2781   001A24  0008               	tblrd		*
  2782   001A26  CFF5 F030          	movff	tablat,??_dis_cerrado
  2783   001A2A  4630               	rlncf	??_dis_cerrado^0,f,c
  2784   001A2C  508D               	movf	141,w,c	;volatile
  2785   001A2E  1830               	xorwf	??_dis_cerrado^0,w,c
  2786   001A30  0BFD               	andlw	-3
  2787   001A32  1830               	xorwf	??_dis_cerrado^0,w,c
  2788   001A34  6E8D               	movwf	141,c	;volatile
  2789                           
  2790                           ;main_display_teclado_wiegand.c: 323:     LATEbits.LATE2=segmentos[11];
  2791   001A36  0EF4               	movlw	low (_segmentos+11)
  2792   001A38  6EF6               	movwf	tblptrl,c
  2793   001A3A  0E10               	movlw	high (_segmentos+11)
  2794   001A3C  6EF7               	movwf	tblptrh,c
  2795   001A3E                     	if	0	;tblptru may be non-zero
  2796   001A3E                     	endif
  2797   001A3E                     	if	0	;tblptru may be non-zero
  2798   001A3E                     	endif
  2799   001A3E  0008               	tblrd		*
  2800   001A40  CFF5 F030          	movff	tablat,??_dis_cerrado
  2801   001A44  4630               	rlncf	??_dis_cerrado^0,f,c
  2802   001A46  4630               	rlncf	??_dis_cerrado^0,f,c
  2803   001A48  508D               	movf	141,w,c	;volatile
  2804   001A4A  1830               	xorwf	??_dis_cerrado^0,w,c
  2805   001A4C  0BFB               	andlw	-5
  2806   001A4E  1830               	xorwf	??_dis_cerrado^0,w,c
  2807   001A50  6E8D               	movwf	141,c	;volatile
  2808                           
  2809                           ;main_display_teclado_wiegand.c: 324:     LATCbits.LATC1=segmentos[15];
  2810   001A52  0EF8               	movlw	low (_segmentos+15)
  2811   001A54  6EF6               	movwf	tblptrl,c
  2812   001A56  0E10               	movlw	high (_segmentos+15)
  2813   001A58  6EF7               	movwf	tblptrh,c
  2814   001A5A                     	if	0	;tblptru may be non-zero
  2815   001A5A                     	endif
  2816   001A5A                     	if	0	;tblptru may be non-zero
  2817   001A5A                     	endif
  2818   001A5A  0008               	tblrd		*
  2819   001A5C  CFF5 F030          	movff	tablat,??_dis_cerrado
  2820   001A60  4630               	rlncf	??_dis_cerrado^0,f,c
  2821   001A62  508B               	movf	139,w,c	;volatile
  2822   001A64  1830               	xorwf	??_dis_cerrado^0,w,c
  2823   001A66  0BFD               	andlw	-3
  2824   001A68  1830               	xorwf	??_dis_cerrado^0,w,c
  2825   001A6A  6E8B               	movwf	139,c	;volatile
  2826   001A6C                     
  2827                           ;main_display_teclado_wiegand.c: 325:     PORTBbits.RB4 = 1;
  2828   001A6C  8881               	bsf	129,4,c	;volatile
  2829   001A6E  0012               	return		;funcret
  2830   001A70                     __end_of_dis_cerrado:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _lint *****************
  2834 ;; Defined at:
  2835 ;;		line 92 in file "main_display_teclado_wiegand.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2851 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2852 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2853 ;;Total ram usage:        5 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 2
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		Interrupt level 1
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	intcodelo
  2864   001018                     __pintcodelo:
  2865                           	callstack 0
  2866   001018                     _lint:
  2867                           	callstack 24
  2868                           
  2869                           ;incstack = 0
  2870   001018  8047               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2871   00101A  CFD8 F02D          	movff	status,??_lint+2
  2872   00101E  CFE8 F02E          	movff	wreg,??_lint+3
  2873   001022  CFE0 F02F          	movff	bsr,??_lint+4
  2874   001026                     
  2875                           ;main_display_teclado_wiegand.c: 94:         static unsigned int pulso=0;;main_display_t
      +                          eclado_wiegand.c: 97:         pulso++;
  2876   001026  4A0A               	infsnz	lint@pulso^0,f,c
  2877   001028  2A0B               	incf	(lint@pulso+1)^0,f,c
  2878   00102A                     
  2879                           ;main_display_teclado_wiegand.c: 99:         if(pulso==1000) pulso=0;
  2880   00102A  0EE8               	movlw	232
  2881   00102C  180A               	xorwf	lint@pulso^0,w,c
  2882   00102E  E107               	bnz	i1u54_21
  2883   001030  0E03               	movlw	3
  2884   001032  180B               	xorwf	(lint@pulso+1)^0,w,c
  2885   001034  A4D8               	btfss	status,2,c
  2886   001036  EF1F  F008         	goto	i1u54_21
  2887   00103A  EF21  F008         	goto	i1u54_20
  2888   00103E                     i1u54_21:
  2889   00103E  EF3F  F008         	goto	i1l1500
  2890   001042                     i1u54_20:
  2891   001042  0E00               	movlw	0
  2892   001044  6E0B               	movwf	(lint@pulso+1)^0,c
  2893   001046  0E00               	movlw	0
  2894   001048  6E0A               	movwf	lint@pulso^0,c
  2895   00104A  EF3F  F008         	goto	i1l1500
  2896   00104E                     i1l144:
  2897                           
  2898                           ;main_display_teclado_wiegand.c: 105:                 LATDbits.LATD7=0;
  2899   00104E  9E8C               	bcf	140,7,c	;volatile
  2900                           
  2901                           ;main_display_teclado_wiegand.c: 106:                 LATDbits.LATD6=1;
  2902   001050  8C8C               	bsf	140,6,c	;volatile
  2903                           
  2904                           ;main_display_teclado_wiegand.c: 107:                 LATDbits.LATD5=1;
  2905   001052  8A8C               	bsf	140,5,c	;volatile
  2906                           
  2907                           ;main_display_teclado_wiegand.c: 108:                 LATDbits.LATD4=1;
  2908   001054  888C               	bsf	140,4,c	;volatile
  2909                           
  2910                           ;main_display_teclado_wiegand.c: 110:                 break;
  2911   001056  EF5D  F008         	goto	i1l145
  2912   00105A                     i1l146:
  2913                           
  2914                           ;main_display_teclado_wiegand.c: 113:                 LATDbits.LATD7=1;
  2915   00105A  8E8C               	bsf	140,7,c	;volatile
  2916                           
  2917                           ;main_display_teclado_wiegand.c: 114:                 LATDbits.LATD6=0;
  2918   00105C  9C8C               	bcf	140,6,c	;volatile
  2919                           
  2920                           ;main_display_teclado_wiegand.c: 115:                 LATDbits.LATD5=1;
  2921   00105E  8A8C               	bsf	140,5,c	;volatile
  2922                           
  2923                           ;main_display_teclado_wiegand.c: 116:                 LATDbits.LATD4=1;
  2924   001060  888C               	bsf	140,4,c	;volatile
  2925                           
  2926                           ;main_display_teclado_wiegand.c: 119:                 break;
  2927   001062  EF5D  F008         	goto	i1l145
  2928   001066                     i1l147:
  2929                           
  2930                           ;main_display_teclado_wiegand.c: 121:                 LATDbits.LATD7=1;
  2931   001066  8E8C               	bsf	140,7,c	;volatile
  2932                           
  2933                           ;main_display_teclado_wiegand.c: 122:                 LATDbits.LATD6=1;
  2934   001068  8C8C               	bsf	140,6,c	;volatile
  2935                           
  2936                           ;main_display_teclado_wiegand.c: 123:                 LATDbits.LATD5=1;
  2937   00106A  8A8C               	bsf	140,5,c	;volatile
  2938                           
  2939                           ;main_display_teclado_wiegand.c: 124:                 LATDbits.LATD4=0;
  2940   00106C  988C               	bcf	140,4,c	;volatile
  2941                           
  2942                           ;main_display_teclado_wiegand.c: 127:                 break;
  2943   00106E  EF5D  F008         	goto	i1l145
  2944   001072                     i1l148:
  2945                           
  2946                           ;main_display_teclado_wiegand.c: 129:                 LATDbits.LATD7=1;
  2947   001072  8E8C               	bsf	140,7,c	;volatile
  2948                           
  2949                           ;main_display_teclado_wiegand.c: 130:                 LATDbits.LATD6=1;
  2950   001074  8C8C               	bsf	140,6,c	;volatile
  2951                           
  2952                           ;main_display_teclado_wiegand.c: 131:                 LATDbits.LATD5=0;
  2953   001076  9A8C               	bcf	140,5,c	;volatile
  2954                           
  2955                           ;main_display_teclado_wiegand.c: 132:                 LATDbits.LATD4=1;
  2956   001078  888C               	bsf	140,4,c	;volatile
  2957                           
  2958                           ;main_display_teclado_wiegand.c: 134:                 break;
  2959   00107A  EF5D  F008         	goto	i1l145
  2960   00107E                     i1l1500:
  2961   00107E  C00A  F02B         	movff	lint@pulso,??_lint
  2962   001082  C00B  F02C         	movff	lint@pulso+1,??_lint+1
  2963                           
  2964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2965                           ; Switch size 1, requested type "simple"
  2966                           ; Number of cases is 1, Range of values is 0 to 0
  2967                           ; switch strategies available:
  2968                           ; Name         Instructions Cycles
  2969                           ; simple_byte            4     3 (average)
  2970                           ;	Chosen strategy is simple_byte
  2971   001086  502C               	movf	(??_lint+1)^0,w,c
  2972   001088  0A00               	xorlw	0	; case 0
  2973   00108A  B4D8               	btfsc	status,2,c
  2974   00108C  EF4A  F008         	goto	i1l1776
  2975   001090  EF5D  F008         	goto	i1l145
  2976   001094                     i1l1776:
  2977                           
  2978                           ; Switch size 1, requested type "simple"
  2979                           ; Number of cases is 4, Range of values is 0 to 75
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte           13     7 (average)
  2983                           ;	Chosen strategy is simple_byte
  2984   001094  502B               	movf	??_lint^0,w,c
  2985   001096  0A00               	xorlw	0	; case 0
  2986   001098  B4D8               	btfsc	status,2,c
  2987   00109A  EF27  F008         	goto	i1l144
  2988   00109E  0A19               	xorlw	25	; case 25
  2989   0010A0  B4D8               	btfsc	status,2,c
  2990   0010A2  EF2D  F008         	goto	i1l146
  2991   0010A6  0A2B               	xorlw	43	; case 50
  2992   0010A8  B4D8               	btfsc	status,2,c
  2993   0010AA  EF33  F008         	goto	i1l147
  2994   0010AE  0A79               	xorlw	121	; case 75
  2995   0010B0  B4D8               	btfsc	status,2,c
  2996   0010B2  EF39  F008         	goto	i1l148
  2997   0010B6  EF5D  F008         	goto	i1l145
  2998   0010BA                     i1l145:
  2999                           
  3000                           ;main_display_teclado_wiegand.c: 136:             INTCONbits.TMR0IF=0;
  3001   0010BA  94F2               	bcf	242,2,c	;volatile
  3002   0010BC  C02F  FFE0         	movff	??_lint+4,bsr
  3003   0010C0  C02E  FFE8         	movff	??_lint+3,wreg
  3004   0010C4  C02D  FFD8         	movff	??_lint+2,status
  3005   0010C8  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3006   0010CA  0010               	retfie	
  3007   0010CC                     __end_of_lint:
  3008                           	callstack 0
  3009                           
  3010 ;; *************** function _hint *****************
  3011 ;; Defined at:
  3012 ;;		line 50 in file "main_display_teclado_wiegand.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  rx_buf          1    2[COMRAM] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0
  3027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3028 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3029 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3030 ;;Total ram usage:        3 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 1
  3033 ;; This function calls:
  3034 ;;		_wcero
  3035 ;;		_wuno
  3036 ;; This function is called by:
  3037 ;;		Interrupt level 2
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	intcode
  3042   001008                     __pintcode:
  3043                           	callstack 0
  3044   001008                     _hint:
  3045                           	callstack 24
  3046                           
  3047                           ;incstack = 0
  3048   001008  8247               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3049   00100A  EF7A  F00B         	goto	int_func
  3050                           
  3051                           	psect	intcode_body
  3052   0016F4                     __pintcode_body:
  3053                           	callstack 24
  3054   0016F4                     int_func:
  3055                           	callstack 24
  3056   0016F4  CFD9 F028          	movff	fsr2l,??_hint
  3057   0016F8  CFDA F029          	movff	fsr2h,??_hint+1
  3058   0016FC                     
  3059                           ;main_display_teclado_wiegand.c: 53:     if(INTCON3bits.INT1F){
  3060   0016FC  A0F0               	btfss	240,0,c	;volatile
  3061   0016FE  EF83  F00B         	goto	i2u48_41
  3062   001702  EF85  F00B         	goto	i2u48_40
  3063   001706                     i2u48_41:
  3064   001706  EF88  F00B         	goto	i2l1470
  3065   00170A                     i2u48_40:
  3066   00170A                     
  3067                           ;main_display_teclado_wiegand.c: 55:         wuno();
  3068   00170A  EC55  F00C         	call	_wuno	;wreg free
  3069   00170E                     
  3070                           ;main_display_teclado_wiegand.c: 57:             INTCON3bits.INT1F=0;
  3071   00170E  90F0               	bcf	240,0,c	;volatile
  3072   001710                     i2l1470:
  3073                           
  3074                           ;main_display_teclado_wiegand.c: 61:     if(INTCON3bits.INT2F){
  3075   001710  A2F0               	btfss	240,1,c	;volatile
  3076   001712  EF8D  F00B         	goto	i2u49_41
  3077   001716  EF8F  F00B         	goto	i2u49_40
  3078   00171A                     i2u49_41:
  3079   00171A  EF92  F00B         	goto	i2l1476
  3080   00171E                     i2u49_40:
  3081   00171E                     
  3082                           ;main_display_teclado_wiegand.c: 63:         wcero();
  3083   00171E  EC14  F00C         	call	_wcero	;wreg free
  3084   001722                     
  3085                           ;main_display_teclado_wiegand.c: 64:             INTCON3bits.INT2F=0;
  3086   001722  92F0               	bcf	240,1,c	;volatile
  3087   001724                     i2l1476:
  3088                           
  3089                           ;main_display_teclado_wiegand.c: 68:     if(PIR1bits.RCIF){
  3090   001724  AA9E               	btfss	158,5,c	;volatile
  3091   001726  EF97  F00B         	goto	i2u50_41
  3092   00172A  EF99  F00B         	goto	i2u50_40
  3093   00172E                     i2u50_41:
  3094   00172E  EFC5  F00B         	goto	i2l135
  3095   001732                     i2u50_40:
  3096   001732                     
  3097                           ;main_display_teclado_wiegand.c: 71:             rx_buf=RCREG1;
  3098   001732  CFAE F02A          	movff	4014,hint@rx_buf	;volatile
  3099                           
  3100                           ;main_display_teclado_wiegand.c: 72:             if(RCSTA1bits.OERR){
  3101   001736  A2AB               	btfss	171,1,c	;volatile
  3102   001738  EFA0  F00B         	goto	i2u51_41
  3103   00173C  EFA2  F00B         	goto	i2u51_40
  3104   001740                     i2u51_41:
  3105   001740  EFA4  F00B         	goto	i2l130
  3106   001744                     i2u51_40:
  3107   001744                     
  3108                           ;main_display_teclado_wiegand.c: 73:                 RCSTAbits.CREN=0;
  3109   001744  98AB               	bcf	171,4,c	;volatile
  3110                           
  3111                           ;main_display_teclado_wiegand.c: 74:                 RCSTAbits.CREN=1;
  3112   001746  88AB               	bsf	171,4,c	;volatile
  3113   001748                     i2l130:
  3114                           
  3115                           ;main_display_teclado_wiegand.c: 77:             TXREG1=rx_buf;
  3116   001748  C02A  FFAD         	movff	hint@rx_buf,4013	;volatile
  3117                           
  3118                           ;main_display_teclado_wiegand.c: 78:             PIR1bits.TXIF=0;
  3119   00174C  989E               	bcf	158,4,c	;volatile
  3120   00174E                     i2l131:
  3121   00174E  A89E               	btfss	158,4,c	;volatile
  3122   001750  EFAC  F00B         	goto	i2u52_41
  3123   001754  EFAE  F00B         	goto	i2u52_40
  3124   001758                     i2u52_41:
  3125   001758  EFA7  F00B         	goto	i2l131
  3126   00175C                     i2u52_40:
  3127   00175C                     
  3128                           ;main_display_teclado_wiegand.c: 81:             if(contador_de_lectura <= 5){
  3129   00175C  BE15               	btfsc	(_contador_de_lectura+1)^0,7,c
  3130   00175E  EFBC  F00B         	goto	i2u53_40
  3131   001762  5015               	movf	(_contador_de_lectura+1)^0,w,c
  3132   001764  E107               	bnz	i2u53_41
  3133   001766  0E06               	movlw	6
  3134   001768  5C14               	subwf	_contador_de_lectura^0,w,c
  3135   00176A  B0D8               	btfsc	status,0,c
  3136   00176C  EFBA  F00B         	goto	i2u53_41
  3137   001770  EFBC  F00B         	goto	i2u53_40
  3138   001774                     i2u53_41:
  3139   001774  EFC4  F00B         	goto	i2l1488
  3140   001778                     i2u53_40:
  3141   001778                     
  3142                           ;main_display_teclado_wiegand.c: 82:                 codigo[contador_de_lectura] = rx_bu
      +                          f;
  3143   001778  5014               	movf	_contador_de_lectura^0,w,c
  3144   00177A  0F01               	addlw	low _codigo
  3145   00177C  6ED9               	movwf	fsr2l,c
  3146   00177E  6ADA               	clrf	fsr2h,c
  3147   001780  C02A  FFDF         	movff	hint@rx_buf,indf2
  3148   001784                     
  3149                           ;main_display_teclado_wiegand.c: 83:                 contador_de_lectura++;
  3150   001784  4A14               	infsnz	_contador_de_lectura^0,f,c
  3151   001786  2A15               	incf	(_contador_de_lectura+1)^0,f,c
  3152   001788                     i2l1488:
  3153                           
  3154                           ;main_display_teclado_wiegand.c: 86:             PIR1bits.RCIF=0;
  3155   001788  9A9E               	bcf	158,5,c	;volatile
  3156   00178A                     i2l135:
  3157   00178A  C029  FFDA         	movff	??_hint+1,fsr2h
  3158   00178E  C028  FFD9         	movff	??_hint,fsr2l
  3159   001792  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3160   001794  0011               	retfie		f
  3161   001796                     __end_of_hint:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _wuno *****************
  3165 ;; Defined at:
  3166 ;;		line 67 in file "wiegand.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_hint
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text18
  3194   0018AA                     __ptext18:
  3195                           	callstack 0
  3196   0018AA                     _wuno:
  3197                           	callstack 24
  3198   0018AA                     
  3199                           ;wiegand.c: 70:             timeout=20;
  3200   0018AA  0E14               	movlw	20
  3201   0018AC  6E22               	movwf	_timeout^0,c
  3202   0018AE                     
  3203                           ;wiegand.c: 71:             if(nbits<27){
  3204   0018AE  0E1B               	movlw	27
  3205   0018B0  6021               	cpfslt	_nbits^0,c
  3206   0018B2  EF5D  F00C         	goto	i2u32_41
  3207   0018B6  EF5F  F00C         	goto	i2u32_40
  3208   0018BA                     i2u32_41:
  3209   0018BA  EF92  F00C         	goto	i2l346
  3210   0018BE                     i2u32_40:
  3211   0018BE                     
  3212                           ;wiegand.c: 72:                 if(nbits==0)p_imp=1;
  3213   0018BE  5021               	movf	_nbits^0,w,c
  3214   0018C0  A4D8               	btfss	status,2,c
  3215   0018C2  EF65  F00C         	goto	i2u33_41
  3216   0018C6  EF67  F00C         	goto	i2u33_40
  3217   0018CA                     i2u33_41:
  3218   0018CA  EF69  F00C         	goto	i2l1274
  3219   0018CE                     i2u33_40:
  3220   0018CE  0E01               	movlw	1
  3221   0018D0  6E1E               	movwf	_p_imp^0,c
  3222   0018D2                     i2l1274:
  3223                           
  3224                           ;wiegand.c: 73:                 if(nbits==25)p_par=1;
  3225   0018D2  0E19               	movlw	25
  3226   0018D4  1821               	xorwf	_nbits^0,w,c
  3227   0018D6  A4D8               	btfss	status,2,c
  3228   0018D8  EF70  F00C         	goto	i2u34_41
  3229   0018DC  EF72  F00C         	goto	i2u34_40
  3230   0018E0                     i2u34_41:
  3231   0018E0  EF74  F00C         	goto	i2l1278
  3232   0018E4                     i2u34_40:
  3233   0018E4  0E01               	movlw	1
  3234   0018E6  6E1D               	movwf	_p_par^0,c
  3235   0018E8                     i2l1278:
  3236                           
  3237                           ;wiegand.c: 75:                 nbits++;
  3238   0018E8  2A21               	incf	_nbits^0,f,c
  3239   0018EA                     
  3240                           ;wiegand.c: 76:                 nbits1++;
  3241   0018EA  2A1F               	incf	_nbits1^0,f,c
  3242   0018EC                     
  3243                           ;wiegand.c: 77:                 wig_val=wig_val<<1;
  3244   0018EC  90D8               	bcf	status,0,c
  3245   0018EE  3406               	rlcf	_wig_val^0,w,c
  3246   0018F0  6E06               	movwf	_wig_val^0,c
  3247   0018F2  3407               	rlcf	(_wig_val+1)^0,w,c
  3248   0018F4  6E07               	movwf	(_wig_val+1)^0,c
  3249   0018F6  3408               	rlcf	(_wig_val+2)^0,w,c
  3250   0018F8  6E08               	movwf	(_wig_val+2)^0,c
  3251   0018FA  3409               	rlcf	(_wig_val+3)^0,w,c
  3252   0018FC  6E09               	movwf	(_wig_val+3)^0,c
  3253   0018FE                     
  3254                           ;wiegand.c: 78:                 wig_val=wig_val|0x1;
  3255   0018FE  0E01               	movlw	1
  3256   001900  1006               	iorwf	_wig_val^0,w,c
  3257   001902  6E06               	movwf	_wig_val^0,c
  3258   001904  5007               	movf	(_wig_val+1)^0,w,c
  3259   001906  6E07               	movwf	(_wig_val+1)^0,c
  3260   001908  5008               	movf	(_wig_val+2)^0,w,c
  3261   00190A  6E08               	movwf	(_wig_val+2)^0,c
  3262   00190C  5009               	movf	(_wig_val+3)^0,w,c
  3263   00190E  6E09               	movwf	(_wig_val+3)^0,c
  3264   001910                     
  3265                           ;wiegand.c: 80:                 w_unos=w_unos<<1;
  3266   001910  90D8               	bcf	status,0,c
  3267   001912  340E               	rlcf	_w_unos^0,w,c
  3268   001914  6E0E               	movwf	_w_unos^0,c
  3269   001916  340F               	rlcf	(_w_unos+1)^0,w,c
  3270   001918  6E0F               	movwf	(_w_unos+1)^0,c
  3271   00191A                     
  3272                           ;wiegand.c: 81:                 w_unos=w_unos|0x1;
  3273   00191A  0E01               	movlw	1
  3274   00191C  100E               	iorwf	_w_unos^0,w,c
  3275   00191E  6E0E               	movwf	_w_unos^0,c
  3276   001920  500F               	movf	(_w_unos+1)^0,w,c
  3277   001922  6E0F               	movwf	(_w_unos+1)^0,c
  3278   001924                     i2l346:
  3279   001924  0012               	return		;funcret
  3280   001926                     __end_of_wuno:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _wcero *****************
  3284 ;; Defined at:
  3285 ;;		line 85 in file "wiegand.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_hint
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text19
  3313   001828                     __ptext19:
  3314                           	callstack 0
  3315   001828                     _wcero:
  3316                           	callstack 24
  3317   001828                     
  3318                           ;wiegand.c: 87:      timeout=20;
  3319   001828  0E14               	movlw	20
  3320   00182A  6E22               	movwf	_timeout^0,c
  3321   00182C                     
  3322                           ;wiegand.c: 88:             if(nbits<27){
  3323   00182C  0E1B               	movlw	27
  3324   00182E  6021               	cpfslt	_nbits^0,c
  3325   001830  EF1C  F00C         	goto	i2u35_41
  3326   001834  EF1E  F00C         	goto	i2u35_40
  3327   001838                     i2u35_41:
  3328   001838  EF54  F00C         	goto	i2l352
  3329   00183C                     i2u35_40:
  3330   00183C                     
  3331                           ;wiegand.c: 89:                  if(nbits==0)p_imp=0;
  3332   00183C  5021               	movf	_nbits^0,w,c
  3333   00183E  A4D8               	btfss	status,2,c
  3334   001840  EF24  F00C         	goto	i2u36_41
  3335   001844  EF26  F00C         	goto	i2u36_40
  3336   001848                     i2u36_41:
  3337   001848  EF28  F00C         	goto	i2l1298
  3338   00184C                     i2u36_40:
  3339   00184C  0E00               	movlw	0
  3340   00184E  6E1E               	movwf	_p_imp^0,c
  3341   001850                     i2l1298:
  3342                           
  3343                           ;wiegand.c: 90:                 if(nbits==25)p_par=0;
  3344   001850  0E19               	movlw	25
  3345   001852  1821               	xorwf	_nbits^0,w,c
  3346   001854  A4D8               	btfss	status,2,c
  3347   001856  EF2F  F00C         	goto	i2u37_41
  3348   00185A  EF31  F00C         	goto	i2u37_40
  3349   00185E                     i2u37_41:
  3350   00185E  EF33  F00C         	goto	i2l1302
  3351   001862                     i2u37_40:
  3352   001862  0E00               	movlw	0
  3353   001864  6E1D               	movwf	_p_par^0,c
  3354   001866                     i2l1302:
  3355                           
  3356                           ;wiegand.c: 91:                 nbits++;
  3357   001866  2A21               	incf	_nbits^0,f,c
  3358   001868                     
  3359                           ;wiegand.c: 92:                 nbits0++;
  3360   001868  2A20               	incf	_nbits0^0,f,c
  3361   00186A                     
  3362                           ;wiegand.c: 93:                 wig_val=wig_val<<1;
  3363   00186A  90D8               	bcf	status,0,c
  3364   00186C  3406               	rlcf	_wig_val^0,w,c
  3365   00186E  6E06               	movwf	_wig_val^0,c
  3366   001870  3407               	rlcf	(_wig_val+1)^0,w,c
  3367   001872  6E07               	movwf	(_wig_val+1)^0,c
  3368   001874  3408               	rlcf	(_wig_val+2)^0,w,c
  3369   001876  6E08               	movwf	(_wig_val+2)^0,c
  3370   001878  3409               	rlcf	(_wig_val+3)^0,w,c
  3371   00187A  6E09               	movwf	(_wig_val+3)^0,c
  3372   00187C                     
  3373                           ;wiegand.c: 94:                 wig_val=wig_val&0xfffffffe;
  3374   00187C  0EFE               	movlw	254
  3375   00187E  1406               	andwf	_wig_val^0,w,c
  3376   001880  6E06               	movwf	_wig_val^0,c
  3377   001882  0EFF               	movlw	255
  3378   001884  1407               	andwf	(_wig_val+1)^0,w,c
  3379   001886  6E07               	movwf	(_wig_val+1)^0,c
  3380   001888  0EFF               	movlw	255
  3381   00188A  1408               	andwf	(_wig_val+2)^0,w,c
  3382   00188C  6E08               	movwf	(_wig_val+2)^0,c
  3383   00188E  0EFF               	movlw	255
  3384   001890  1409               	andwf	(_wig_val+3)^0,w,c
  3385   001892  6E09               	movwf	(_wig_val+3)^0,c
  3386   001894                     
  3387                           ;wiegand.c: 95:                 w_ceros=w_ceros<<1;
  3388   001894  90D8               	bcf	status,0,c
  3389   001896  340C               	rlcf	_w_ceros^0,w,c
  3390   001898  6E0C               	movwf	_w_ceros^0,c
  3391   00189A  340D               	rlcf	(_w_ceros+1)^0,w,c
  3392   00189C  6E0D               	movwf	(_w_ceros+1)^0,c
  3393   00189E                     
  3394                           ;wiegand.c: 96:                 w_ceros=w_ceros|0x1;
  3395   00189E  0E01               	movlw	1
  3396   0018A0  100C               	iorwf	_w_ceros^0,w,c
  3397   0018A2  6E0C               	movwf	_w_ceros^0,c
  3398   0018A4  500D               	movf	(_w_ceros+1)^0,w,c
  3399   0018A6  6E0D               	movwf	(_w_ceros+1)^0,c
  3400   0018A8                     i2l352:
  3401   0018A8  0012               	return		;funcret
  3402   0018AA                     __end_of_wcero:
  3403                           	callstack 0
  3404                           
  3405                           	psect	rparam
  3406   000000                     
  3407                           	psect	temp
  3408   000047                     btemp:
  3409                           	callstack 0
  3410   000047                     	ds	1
  3411   000000                     int$flags	set	btemp
  3412   000000                     wtemp8	set	btemp+1
  3413   000000                     ttemp5	set	btemp+1
  3414   000000                     ttemp6	set	btemp+4
  3415   000000                     ttemp7	set	btemp+8
  3416                           tosu	equ	0xFFF
  3417                           tosh	equ	0xFFE
  3418                           tosl	equ	0xFFD
  3419                           stkptr	equ	0xFFC
  3420                           pclatu	equ	0xFFB
  3421                           pclath	equ	0xFFA
  3422                           pcl	equ	0xFF9
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           indf0	equ	0xFEF
  3430                           postinc0	equ	0xFEE
  3431                           postdec0	equ	0xFED
  3432                           preinc0	equ	0xFEC
  3433                           plusw0	equ	0xFEB
  3434                           fsr0h	equ	0xFEA
  3435                           fsr0l	equ	0xFE9
  3436                           wreg	equ	0xFE8
  3437                           indf1	equ	0xFE7
  3438                           postinc1	equ	0xFE6
  3439                           postdec1	equ	0xFE5
  3440                           preinc1	equ	0xFE4
  3441                           plusw1	equ	0xFE3
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           bsr	equ	0xFE0
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           postdec2	equ	0xFDD
  3448                           preinc2	equ	0xFDC
  3449                           plusw2	equ	0xFDB
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8

Data Sizes:
    Strings     275
    Constant    40
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    tx_232@mensaje	PTR unsigned char  size(2) Largest target is 44
		 -> main@retorno(COMRAM[1]), STR_1(CODE[14]), STR_10(CODE[8]), STR_11(CODE[19]), 
		 -> STR_12(CODE[44]), STR_13(CODE[20]), STR_14(CODE[20]), STR_2(CODE[22]), 
		 -> STR_3(CODE[11]), STR_4(CODE[13]), STR_5(CODE[22]), STR_6(CODE[33]), 
		 -> STR_7(CODE[28]), STR_8(CODE[5]), STR_9(CODE[16]), 

    wiegand@b0	PTR unsigned char  size(1) Largest target is 1
		 -> b0(COMRAM[1]), 

    wiegand@b1	PTR unsigned char  size(1) Largest target is 1
		 -> b1(COMRAM[1]), 

    wiegand@b2	PTR unsigned char  size(1) Largest target is 1
		 -> b2(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _lectura_tarjeta->_wiegand
    _wiegand->_ver_par
    _dis_abierto->_shift
    _carga_ini->_tx_232
    _verificacion->_tx_232
    _verificacion->_weeprom

Critical Paths under _lint in COMRAM

    None.

Critical Paths under _hint in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lint in BANK0

    None.

Critical Paths under _hint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lint in BANK1

    None.

Critical Paths under _hint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lint in BANK2

    None.

Critical Paths under _hint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lint in BANK3

    None.

Critical Paths under _hint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lint in BANK4

    None.

Critical Paths under _hint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lint in BANK5

    None.

Critical Paths under _hint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lint in BANK6

    None.

Critical Paths under _hint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lint in BANK7

    None.

Critical Paths under _hint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9723
                                             30 COMRAM     1     1      0
                          _carga_ini
                           _conf_wig
                             _config
                    _lectura_tarjeta
                            _reeprom
                             _tx_232
                       _verificacion
                   _verificacion_ini
                            _weeprom
 ---------------------------------------------------------------------------------
 (1) _verificacion_ini                                     0     0      0    1275
                        _dis_abierto
                        _dis_cerrado
                            _reeprom
                             _tx_232
 ---------------------------------------------------------------------------------
 (1) _lectura_tarjeta                                      0     0      0    1916
             _permutacion_de_estados
                            _reeprom
                            _wiegand
 ---------------------------------------------------------------------------------
 (2) _wiegand                                             11     8      3     543
                                             19 COMRAM    11     8      3
                            _ver_par
 ---------------------------------------------------------------------------------
 (3) _ver_par                                             11    11      0     180
                                              8 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (2) _reeprom                                              1     1      0      15
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _permutacion_de_estados                               2     0      2    1358
                                             11 COMRAM     2     0      2
                        _dis_abierto
                        _dis_cerrado
                             _tx_232
 ---------------------------------------------------------------------------------
 (2) _dis_abierto                                          0     0      0      75
                              _shift
 ---------------------------------------------------------------------------------
 (3) _shift                                                3     3      0      75
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_wig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _carga_ini                                            0     0      0    2946
                        _dis_cerrado
                             _tx_232
                       _verificacion
 ---------------------------------------------------------------------------------
 (1) _verificacion                                         0     0      0    1761
                             _tx_232
                            _weeprom
 ---------------------------------------------------------------------------------
 (1) _weeprom                                              2     1      1     576
                                              8 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _tx_232                                               2     0      2    1185
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dis_cerrado                                          1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lint                                                 5     5      0       0
                                              3 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _hint                                                 3     3      0      30
                                              0 COMRAM     3     3      0
                              _wcero
                               _wuno
 ---------------------------------------------------------------------------------
 (7) _wuno                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _wcero                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _carga_ini
     _dis_cerrado
     _tx_232
     _verificacion
       _tx_232
       _weeprom
   _conf_wig
   _config
   _lectura_tarjeta
     _permutacion_de_estados
       _dis_abierto
         _shift
       _dis_cerrado
       _tx_232
     _reeprom
     _wiegand
       _ver_par
   _reeprom
   _tx_232
   _verificacion
   _verificacion_ini
     _dis_abierto
     _dis_cerrado
     _reeprom
     _tx_232
   _weeprom

 _lint (ROOT)

 _hint (ROOT)
   _wcero
   _wuno

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      46       1       74.5%
BITBIGSFRlllllh     21      0       0      32        0.0%
BITBIGSFRlhhh       18      0       0      21        0.0%
BITBIGSFRlhhlll     17      0       0      24        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllh       7      0       0      31        0.0%
BITBIGSFRlhhlll      7      0       0      25        0.0%
BITBIGSFRlhllll      6      0       0      27        0.0%
BITBIGSFRllhlh       4      0       0      29        0.0%
BITBIGSFRllhll       4      0       0      30        0.0%
BITBIGSFRlhhllh      1      0       0      23        0.0%
BITBIGSFRllhh        1      0       0      28        0.0%
BITBIGSFRlhhlh       1      0       0      22        0.0%
BITBIGSFRlhllh       1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      34        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 10 04:22:56 2024

                            u10 1B5C                              u11 1B58                              u20 1B86  
                            u21 1B82                              _b0 0025                              _b1 0026  
                            _b2 0027                              u80 165E                              u81 165A  
                            _d1 001C                              u90 1676                              _d2 001B  
                            u91 1672                              _d3 001A                              _d4 0019  
                            bsr 0FE0                             l200 1696                             l201 16A8  
                           l202 16BA                             l203 16F2                             l212 1B36  
                           l206 1A6E                             l222 135A                             l215 135A  
                           l231 164E                             l170 1A02                             l330 1496  
                           l331 141E                             l155 1ACA                             l236 1BD2  
                           l173 1BEC                             l333 142E                             l166 19C0  
                           l182 1B4E                             l326 139E                             l175 1BFA  
                           l183 1B86                             l191 1996                             l176 1BFE  
                           l184 1B62                             l328 13AE                             l186 1B8A  
                           l355 1C1E                             l179 1C4C                             l339 159C  
                           l293 1826                             l198 1684                             u100 13AC  
                           u101 13A8                             u110 13EA                             u111 13E6  
                           u120 1400                             u121 13FC                             u130 1410  
                           u131 140C                             u140 142C                             u141 1428  
                           u150 146A                             u151 1466                             u160 1480  
                           u161 147C                             u170 1490                             u171 148C  
                           u600 1A02                             u601 19FE                             u610 1BFA  
                           u611 1BF6                             u700 134A                             u620 122A  
                           u701 1346                             u621 1226                             u630 124E  
                           u710 14AA                             u631 124A                             u711 14A6  
                           u640 1260                             u720 14BE                             u800 15D4  
                           u641 125C                             u721 14BA                             u801 15D0  
                           u570 19BC                             u650 1270                             u730 1536  
                           u810 15EA                             u651 126C                             u811 15E6  
                           u580 19CE                             u660 12B6                             u740 1570  
                           u820 1600                             u581 19CA                             u661 12B2  
                           u821 15FC                             u590 19F2                             u670 12C8  
                           u750 1B9E                             u830 1616                             u671 12C4  
                           u751 1B9A                             u735 152C                             u831 1612  
                           u680 12DA                             u840 162C                             u760 193C  
                           u577 19B2                             u681 12D6                             u745 1566  
                           u841 1628                             u761 1938                             u690 132C  
                           u850 1642                             u770 1952                             u691 1328  
                           u851 163E                             u771 194E                             u780 1B0A  
                           u860 1AC6                             u597 19E8                             u781 1B06  
                           u861 1AC2                             u790 15BE                             u791 15BA  
                           wreg 0FE8                      _TXSTA1bits 0FAC          _permutacion_de_estados 1B8C  
                          l1100 16C2                            l1110 135C                            l1104 16CC  
                          l1120 13AC                            l1112 1370                            l1106 1A04  
                          l1050 1B6E                            l1130 1410                            l1122 13DA  
                          l1114 139A                            l1108 1A6C                            l1052 1B70  
                          l1044 1B5C                            l1036 1B3A                            l1140 142C  
                          l1124 13EA                            l1054 1B72                            l1046 1B64  
                          l1038 1B46                            l1142 145A                            l1134 1416  
                          l1126 13F0                            l1400 1C12                            l1320 17AC  
                          l1056 1B74                            l1048 1B6A                            l1160 1C42  
                          l1152 1494                            l1144 146A                            l1128 1400  
                          l1410 1C1C                            l1402 1C14                            l1330 17B6  
                          l1322 17AE                            l1314 1796                            l1058 1B76  
                          l1090 1676                            l1162 1C44                            l1146 1480  
                          l1404 1C16                            l1340 17C8                            l1332 17B8  
                          l1324 17B0                            l1316 17A8                            l1092 167E  
                          l1084 1650                            l1164 1C48                            l1156 1C3C  
                          l1406 1C18                            l1350 17D2                            l1342 17CA  
                          l1334 17BA                            l1326 17B2                            l1318 17AA  
                          l1094 168C                            l1086 165E                            l1166 1C4A  
                          l1158 1C40                            l1600 1290                            l1408 1C1A  
                          l1360 17E8                            l1352 17D4                            l1344 17CC  
                          l1336 17C0                            l1328 17B4                            l1096 169E  
                          l1088 1666                            l1610 12DA                            l1602 129C  
                          l1370 17F2                            l1362 17EA                            l1354 17D6  
                          l1346 17CE                            l1338 17C2                            l1098 16B0  
                          l1620 132C                            l1612 12FE                            l1604 12A4  
                          l1700 1AEE                            l1380 1814                            l1372 17F4  
                          l1364 17EC                            l1356 17E4                            l1348 17D0  
                          l1622 1338                            l1606 12B6                            l1702 1B0A  
                          l1390 181E                            l1382 1816                            l1374 17F6  
                          l1366 17EE                            l1358 17E6                            l1630 14AA  
                          l1560 199C                            l1624 134A                            l1608 12C8  
                          l1616 130E                            l1704 1B22                            l1392 1824  
                          l1384 1818                            l1376 17F8                            l1368 17F0  
                          l1640 150C                            l1632 14BE                            l1720 1600  
                          l1712 159E                            l1562 19BE                            l1570 1BD8  
                          l1618 131A                            l1706 1B26                            l1394 1C00  
                          l1386 181A                            l1378 17FA                            l1650 158A  
                          l1642 1516                            l1722 1616                            l1714 15BE  
                          l1730 1A70                            l1564 19CE                            l1580 1BEA  
                          l1572 1BDC                            l1708 1B2E                            l1396 1C0E  
                          l1388 181C                            l1652 159A                            l1644 1546  
                          l1636 14C4                            l1628 1498                            l1724 162C  
                          l1716 15D4                            l1740 1A8C                            l1732 1A78  
                          l1566 19D2                            l1558 1998                            l1574 1BE0  
                          l1590 124E                            l1582 120E                            l1398 1C10  
                          l1670 1BBA                            l1662 1B8C                            l1646 1550  
                          l1638 14E8                            l1726 1642                            l1718 15EA  
                          l1750 1AB4                            l1742 1A96                            l1734 1A78  
                          l1576 1BE2                            l1568 1BD6                            l1592 1260  
                          l1584 122A                            l1672 1BC2                            l1664 1B9E  
                          l1648 1580                            l1680 193C                            l1752 1AC6  
                          l1744 1A98                            l1736 1A80                            l1578 1BE6  
                          l1594 1270                            l1586 1232                            l1674 1BC6  
                          l1666 1BA6                            l1690 1986                            l1682 1952  
                          l1754 1ACE                            l1746 1AA4                            l1738 1A8A  
                          l1596 127A                            l1588 123C                            l1668 1BAA  
                          l1692 198A                            l1684 1962                            l1748 1AB0  
                          l1598 1284                            l1686 1966                            l1678 1926  
                          l1696 1ADA                            l1688 1976                            l1698 1AEA  
                          STR_1 11D9                            STR_2 1178                            STR_3 11F4  
                          STR_4 11E7                            STR_5 1162                            STR_6 1125  
                          STR_7 1146                            STR_8 1207                            STR_9 11C9  
                          _main 1A70                            _hint 1008                            _lint 1018  
                          _rota 0023                            fsr0h 0FEA                            indf0 0FEF  
                          fsr2h 0FDA                            fsr0l 0FE9                            indf2 0FDF  
                          fsr2l 0FD9                            btemp 0047                            _wuno 18AA  
                   main@retorno 0046                            start 10CC                ?_lectura_tarjeta 0028  
                  ___param_bank 0000                   ver_par@unos_1 0034                   ver_par@unos_2 0035  
                         ?_main 0028                           ?_hint 0028                           ?_lint 0028  
                         _EEADR 0FA9                           STR_10 11FF                           STR_11 11B6  
                         STR_12 10F9                           STR_13 11A2                           STR_14 118E  
                         ?_wuno 0028                           i1l144 104E                           i1l145 10BA  
                         i1l146 105A                           i1l147 1066                           i1l148 1072  
                         i1l149 10BC                           i2l130 1748                           i2l131 174E  
                         i2l135 178A                           i2l352 18A8                           i2l346 1924  
                         _TMR0H 0FD7                           _TMR0L 0FD6                           _TRISE 0F96  
                         _firma 1006                           _mens1 10D1                           _p_imp 001E  
                         _p_par 001D                           _nbits 0021                           _tecla 0018  
                         _shift 1B38                           _wcero 1828                 __end_of_reeprom 1C4E  
                         tablat 0FF5                 __end_of_ver_par 1498                 __end_of_wiegand 159E  
               __end_of_weeprom 1C00                           ttemp5 0048                           ttemp6 004B  
                         ttemp7 004F                           status 0FD8                           wtemp8 0048  
               __initialization 1C20                    __end_of_main 1ADA                    __end_of_hint 1796  
                  __end_of_lint 10CC                    __end_of_wuno 1926                          ??_main 0046  
                        ??_hint 0028                          ??_lint 002B                          ??_wuno 0028  
                 __activetblptr 0002               ?_verificacion_ini 0028              ??_verificacion_ini 0033  
                        _EEDATA 0FA8                          _EECON2 0FA7                          ?_shift 0028  
                        ?_wcero 0028                          _ANSELA 0F5B                          _ANSELB 0F5C  
                        _ANSELC 0F5D                          _ANSELD 0F5E                          _ANSELE 0F5F  
                        i1l1500 107E                          i1l1492 1026                          i1l1494 102A  
                        i1l1496 1042                          i2l1300 1862                          i2l1310 1894  
                        i2l1302 1866                          i2l1312 189E                          i2l1304 1868  
                        i1l1776 1094                          i2l1306 186A                          i2l1308 187C  
                        i2l1270 18BE                          i2l1280 18EA                          i2l1272 18CE  
                        i2l1290 1828                          i2l1282 18EC                          i2l1274 18D2  
                        i2l1266 18AA                          i2l1292 182C                          i2l1284 18FE  
                        i2l1276 18E4                          i2l1268 18AE                          i2l1294 183C  
                        i2l1286 1910                          i2l1278 18E8                          i2l1470 1710  
                        i2l1296 184C                          i2l1288 191A                          i2l1480 1744  
                        i2l1472 171E                          i2l1464 16FC                          i2l1298 1850  
                        i2l1482 175C                          i2l1474 1722                          i2l1466 170A  
                        i2l1484 1778                          i2l1476 1724                          i2l1468 170E  
                        i2l1486 1784                          i2l1478 1732                          i2l1488 1788  
                        _INTCON 0FF2                          _RCREG1 0FAE                          _OSCCON 0FD3  
                        _SPBRG1 0FAF                          _TXREG1 0FAD                __end_of_conf_wig 1C20  
                        _codigo 0001                          _config 1796                          _nbits0 0020  
                        _nbits1 001F                          _estado 0016                          _tx_232 1998  
                        clear_0 1C26                          isa$std 0001                          _w_unos 000E  
                  __mediumconst 10D0                       ??_reeprom 0030                          shift@k 0030  
                        shift@n 0032                          tblptrh 0FF7                          tblptrl 0FF6  
                        tblptru 0FF8                       ??_wiegand 003E                       ??_ver_par 0030  
                     ??_weeprom 0031                   _byte_de_verif 0024                      __accesstop 0060  
       __end_of__initialization 1C2C                   ___rparam_used 0001                  __pcstackCOMRAM 0028  
                 __end_of_firma 1008                   __end_of_mens1 10E9                   __end_of_shift 1B8C  
                 __end_of_wcero 18AA                 ver_par@wig_val2 0036         ?_permutacion_de_estados 0033  
                       ??_shift 0030                         ??_wcero 0028               _contador_de_carga 0012  
                       ?_config 0028                         ?_tx_232 0030  __end_of_permutacion_de_estados 1BD4  
          _aux_de_carga_inicial 0010                         _OSCCON2 0FD2                         i1u54_20 1042  
                       i1u54_21 103E                         i2u32_40 18BE                         i2u32_41 18BA  
                       i2u33_40 18CE                         i2u33_41 18CA                         i2u34_40 18E4  
                       i2u50_40 1732                         i2u34_41 18E0                         i2u50_41 172E  
                       i2u35_40 183C                         i2u51_40 1744                         i2u35_41 1838  
                       i2u51_41 1740                         i2u36_40 184C                         i2u52_40 175C  
                       i2u36_41 1848                         i2u52_41 1758                         i2u37_40 1862  
                       i2u53_40 1778                         i2u37_41 185E                         i2u53_41 1774  
                       _OSCTUNE 0F9B                         i2u48_40 170A                         i2u48_41 1706  
                       i2u49_40 171E                         i2u49_41 171A                         _SPBRGH1 0FB0  
                     ?_conf_wig 0028               __end_of_carga_ini 1B38             _contador_de_lectura 0014  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 1C20  
                       __ramtop 0800                         __ptext0 1A70                         __ptext1 1926  
                       __ptext2 159E                         __ptext3 1498                         __ptext4 135C  
                       __ptext5 1C3A                         __ptext6 1B8C                         __ptext7 1650  
                       __ptext8 1B38                         __ptext9 1796                       _T0CONbits 0FD5  
                       _reeprom 1C3A                         _w_ceros 000C                         _ver_par 135C  
                       _wiegand 1498                         _timeout 0022                         _weeprom 1BD4  
                       _wig_val 0006                      ??_conf_wig 0030                  __pintcode_body 16F4  
          end_of_initialization 1C2C               __end_of_segmentos 10F9                   __Lmediumconst 10D0  
                       int_func 16F4                   __p_firma_text 1006                       _RCSTAbits 0FAB  
                       postinc0 0FEE                       _PORTBbits 0F81                   ??_dis_abierto 0033  
                     _TRISAbits 0F92                       _TRISBbits 0F93                       _TRISCbits 0F94  
                 ??_dis_cerrado 0030                       _TRISDbits 0F95                   ?_verificacion 0028  
                   ver_par@cont 003A                     weeprom@dato 0030                      hint@rx_buf 002A  
                __end_of_config 1828                  __end_of_tx_232 1A04             start_initialization 1C20  
             ??_lectura_tarjeta 0046                  ??_verificacion 0032             __end_of_dis_abierto 16F4  
           __end_of_dis_cerrado 1A70                        ??_config 0030                        ??_tx_232 0032  
                   __pbssCOMRAM 0001                _verificacion_ini 1926                       _carga_ini 1ADA  
                     __pintcode 1008                   __pmediumconst 10D0                      reeprom@dir 0030  
                   __pintcodelo 1018                        _BAUDCON1 0FB8                     _dis_abierto 1650  
                      ?_reeprom 0028                     _dis_cerrado 1A04                        ?_wiegand 003B  
                      ?_ver_par 0028                        ?_weeprom 0030                        _LATAbits 0F89  
                      _LATBbits 0F8A                        _LATCbits 0F8B                        _LATDbits 0F8C  
                      _LATEbits 0F8D                      ?_carga_ini 0028                        _IPR1bits 0F9F  
                      _PIE1bits 0F9D                       _segmentos 10E9                        _PIR1bits 0F9E  
                      _RCONbits 0FD0            __end_of_verificacion 135C                      weeprom@dir 0031  
                   _INTCON2bits 0FF1                     _INTCON3bits 0FF0   permutacion_de_estados@estados 0033  
                    _EECON1bits 0FA6                        __Hrparam 0000                        __Lrparam 0000  
      ??_permutacion_de_estados 0035                       lint@pulso 000A                 _lectura_tarjeta 159E  
                    _ANSELAbits 0F5B                        __ptext10 1C00                        __ptext11 1ADA  
                      __ptext12 120E                        __ptext13 1BD4                        __ptext14 1998  
                      __ptext15 1A04                        __ptext18 18AA                        __ptext19 1828  
                      _conf_wig 1C00                       shift@dato 0031                     ??_carga_ini 0032  
                      isa$xinst 0000                        int$flags 0047                       wiegand@b0 003D  
                     wiegand@b1 003C                       wiegand@b2 003B        __end_of_verificacion_ini 1998  
                    _INTCONbits 0FF2                   tx_232@mensaje 0030                        intlevel1 0000  
                      intlevel2 0000         __end_of_lectura_tarjeta 1650                      _RCSTA1bits 0FAB  
                      wiegand@s 0042                    ?_dis_abierto 0028                    ?_dis_cerrado 0028  
                  _verificacion 120E                   _firma_absaddr 1006  
