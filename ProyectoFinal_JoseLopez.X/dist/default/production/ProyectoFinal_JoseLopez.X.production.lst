

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 02 18:12:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	_firma_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    41   000000                     
    42                           ; Generated 05/01/2024 GMT
    43                           ; 
    44                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F45K50 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataBANK0
    78   002474                     __pidataBANK0:
    79                           	callstack 0
    80                           
    81                           ;initializer for _frecuencia_500
    82   002474  46                 	db	70
    83   002475  3D                 	db	61
    84   002476  30                 	db	48
    85   002477  35                 	db	53
    86   002478  30                 	db	48
    87   002479  30                 	db	48
    88                           
    89                           ;initializer for _frecuencia_250
    90   00247A  46                 	db	70
    91   00247B  3D                 	db	61
    92   00247C  30                 	db	48
    93   00247D  32                 	db	50
    94   00247E  35                 	db	53
    95   00247F  30                 	db	48
    96                           
    97                           ;initializer for _frecuencia_125
    98   002480  46                 	db	70
    99   002481  3D                 	db	61
   100   002482  30                 	db	48
   101   002483  31                 	db	49
   102   002484  32                 	db	50
   103   002485  35                 	db	53
   104                           
   105                           ;initializer for _frecuencia_preg
   106   002486  46                 	db	70
   107   002487  3D                 	db	61
   108   002488  3F                 	db	63
   109                           
   110                           	psect	idataBANK1
   111   002454                     __pidataBANK1:
   112                           	callstack 0
   113                           
   114                           ;initializer for _sinetable
   115   002454  00                 	db	0
   116   002455  00                 	db	0
   117   002456  01                 	db	1
   118   002457  03                 	db	3
   119   002458  05                 	db	5
   120   002459  07                 	db	7
   121   00245A  0A                 	db	10
   122   00245B  0D                 	db	13
   123   00245C  10                 	db	16
   124   00245D  13                 	db	19
   125   00245E  16                 	db	22
   126   00245F  19                 	db	25
   127   002460  1B                 	db	27
   128   002461  1C                 	db	28
   129   002462  1E                 	db	30
   130   002463  1F                 	db	31
   131   002464  1F                 	db	31
   132   002465  1F                 	db	31
   133   002466  1E                 	db	30
   134   002467  1C                 	db	28
   135   002468  1B                 	db	27
   136   002469  19                 	db	25
   137   00246A  16                 	db	22
   138   00246B  13                 	db	19
   139   00246C  10                 	db	16
   140   00246D  0D                 	db	13
   141   00246E  0A                 	db	10
   142   00246F  07                 	db	7
   143   002470  05                 	db	5
   144   002471  03                 	db	3
   145   002472  01                 	db	1
   146   002473  00                 	db	0
   147                           
   148                           	psect	mediumconst
   149   0011D8                     __pmediumconst:
   150                           	callstack 0
   151   0011D8  00                 	db	0
   152   0011D9                     _segmentos:
   153                           	callstack 0
   154   0011D9  5F                 	db	95
   155   0011DA  41                 	db	65
   156   0011DB  9B                 	db	155
   157   0011DC  D3                 	db	211
   158   0011DD  C5                 	db	197
   159   0011DE  D6                 	db	214
   160   0011DF  DE                 	db	222
   161   0011E0  43                 	db	67
   162   0011E1  DF                 	db	223
   163   0011E2  D7                 	db	215
   164   0011E3  CF                 	db	207
   165   0011E4  DC                 	db	220
   166   0011E5  1E                 	db	30
   167   0011E6  D9                 	db	217
   168   0011E7  9E                 	db	158
   169   0011E8  8E                 	db	142
   170   0011E9                     __end_of_segmentos:
   171                           	callstack 0
   172   0011E9                     _c4:
   173                           	callstack 0
   174   0011E9  0A                 	db	10
   175   0011EA  0B                 	db	11
   176   0011EB  0C                 	db	12
   177   0011EC  0D                 	db	13
   178   0011ED                     __end_of_c4:
   179                           	callstack 0
   180   0011ED                     _c3:
   181                           	callstack 0
   182   0011ED  03                 	db	3
   183   0011EE  06                 	db	6
   184   0011EF  09                 	db	9
   185   0011F0  0F                 	db	15
   186   0011F1                     __end_of_c3:
   187                           	callstack 0
   188   0011F1                     _c2:
   189                           	callstack 0
   190   0011F1  02                 	db	2
   191   0011F2  05                 	db	5
   192   0011F3  08                 	db	8
   193   0011F4  00                 	db	0
   194   0011F5                     __end_of_c2:
   195                           	callstack 0
   196   0011F5                     _c1:
   197                           	callstack 0
   198   0011F5  01                 	db	1
   199   0011F6  04                 	db	4
   200   0011F7  07                 	db	7
   201   0011F8  0E                 	db	14
   202   0011F9                     __end_of_c1:
   203                           	callstack 0
   204   000000                     _firma_absaddr	set	4102
   205   000000                     _firma_absaddr	set	4102
   206   0011F9                     STR_10:
   207   0011F9  4F                 	db	79	;'O'
   208   0011FA  6B                 	db	107	;'k'
   209   0011FB  20                 	db	32
   210   0011FC  66                 	db	102	;'f'
   211   0011FD  72                 	db	114	;'r'
   212   0011FE  65                 	db	101	;'e'
   213   0011FF  63                 	db	99	;'c'
   214   001200  75                 	db	117	;'u'
   215   001201  65                 	db	101	;'e'
   216   001202  6E                 	db	110	;'n'
   217   001203  63                 	db	99	;'c'
   218   001204  69                 	db	105	;'i'
   219   001205  61                 	db	97	;'a'
   220   001206  20                 	db	32
   221   001207  61                 	db	97	;'a'
   222   001208  63                 	db	99	;'c'
   223   001209  74                 	db	116	;'t'
   224   00120A  75                 	db	117	;'u'
   225   00120B  61                 	db	97	;'a'
   226   00120C  6C                 	db	108	;'l'
   227   00120D  69                 	db	105	;'i'
   228   00120E  7A                 	db	122	;'z'
   229   00120F  61                 	db	97	;'a'
   230   001210  64                 	db	100	;'d'
   231   001211  61                 	db	97	;'a'
   232   001212  20                 	db	32
   233   001213  61                 	db	97	;'a'
   234   001214  20                 	db	32
   235   001215  35                 	db	53	;'5'
   236   001216  30                 	db	48	;'0'
   237   001217  30                 	db	48	;'0'
   238   001218  48                 	db	72	;'H'
   239   001219  7A                 	db	122	;'z'
   240   00121A  2E                 	db	46
   241   00121B  00                 	db	0
   242   00121C                     STR_11:
   243   00121C  4F                 	db	79	;'O'
   244   00121D  6B                 	db	107	;'k'
   245   00121E  20                 	db	32
   246   00121F  66                 	db	102	;'f'
   247   001220  72                 	db	114	;'r'
   248   001221  65                 	db	101	;'e'
   249   001222  63                 	db	99	;'c'
   250   001223  75                 	db	117	;'u'
   251   001224  65                 	db	101	;'e'
   252   001225  6E                 	db	110	;'n'
   253   001226  63                 	db	99	;'c'
   254   001227  69                 	db	105	;'i'
   255   001228  61                 	db	97	;'a'
   256   001229  20                 	db	32
   257   00122A  61                 	db	97	;'a'
   258   00122B  63                 	db	99	;'c'
   259   00122C  74                 	db	116	;'t'
   260   00122D  75                 	db	117	;'u'
   261   00122E  61                 	db	97	;'a'
   262   00122F  6C                 	db	108	;'l'
   263   001230  69                 	db	105	;'i'
   264   001231  7A                 	db	122	;'z'
   265   001232  61                 	db	97	;'a'
   266   001233  64                 	db	100	;'d'
   267   001234  61                 	db	97	;'a'
   268   001235  20                 	db	32
   269   001236  61                 	db	97	;'a'
   270   001237  20                 	db	32
   271   001238  32                 	db	50	;'2'
   272   001239  35                 	db	53	;'5'
   273   00123A  30                 	db	48	;'0'
   274   00123B  48                 	db	72	;'H'
   275   00123C  7A                 	db	122	;'z'
   276   00123D  2E                 	db	46
   277   00123E  00                 	db	0
   278   00123F                     STR_12:
   279   00123F  4F                 	db	79	;'O'
   280   001240  6B                 	db	107	;'k'
   281   001241  20                 	db	32
   282   001242  66                 	db	102	;'f'
   283   001243  72                 	db	114	;'r'
   284   001244  65                 	db	101	;'e'
   285   001245  63                 	db	99	;'c'
   286   001246  75                 	db	117	;'u'
   287   001247  65                 	db	101	;'e'
   288   001248  6E                 	db	110	;'n'
   289   001249  63                 	db	99	;'c'
   290   00124A  69                 	db	105	;'i'
   291   00124B  61                 	db	97	;'a'
   292   00124C  20                 	db	32
   293   00124D  61                 	db	97	;'a'
   294   00124E  63                 	db	99	;'c'
   295   00124F  74                 	db	116	;'t'
   296   001250  75                 	db	117	;'u'
   297   001251  61                 	db	97	;'a'
   298   001252  6C                 	db	108	;'l'
   299   001253  69                 	db	105	;'i'
   300   001254  7A                 	db	122	;'z'
   301   001255  61                 	db	97	;'a'
   302   001256  64                 	db	100	;'d'
   303   001257  61                 	db	97	;'a'
   304   001258  20                 	db	32
   305   001259  61                 	db	97	;'a'
   306   00125A  20                 	db	32
   307   00125B  31                 	db	49	;'1'
   308   00125C  32                 	db	50	;'2'
   309   00125D  35                 	db	53	;'5'
   310   00125E  48                 	db	72	;'H'
   311   00125F  7A                 	db	122	;'z'
   312   001260  2E                 	db	46
   313   001261  00                 	db	0
   314   001262                     STR_13:
   315   001262  56                 	db	86	;'V'
   316   001263  61                 	db	97	;'a'
   317   001264  6C                 	db	108	;'l'
   318   001265  6F                 	db	111	;'o'
   319   001266  72                 	db	114	;'r'
   320   001267  20                 	db	32
   321   001268  64                 	db	100	;'d'
   322   001269  65                 	db	101	;'e'
   323   00126A  20                 	db	32
   324   00126B  66                 	db	102	;'f'
   325   00126C  72                 	db	114	;'r'
   326   00126D  65                 	db	101	;'e'
   327   00126E  63                 	db	99	;'c'
   328   00126F  75                 	db	117	;'u'
   329   001270  65                 	db	101	;'e'
   330   001271  6E                 	db	110	;'n'
   331   001272  63                 	db	99	;'c'
   332   001273  69                 	db	105	;'i'
   333   001274  61                 	db	97	;'a'
   334   001275  20                 	db	32
   335   001276  69                 	db	105	;'i'
   336   001277  6E                 	db	110	;'n'
   337   001278  63                 	db	99	;'c'
   338   001279  6F                 	db	111	;'o'
   339   00127A  72                 	db	114	;'r'
   340   00127B  72                 	db	114	;'r'
   341   00127C  65                 	db	101	;'e'
   342   00127D  63                 	db	99	;'c'
   343   00127E  74                 	db	116	;'t'
   344   00127F  6F                 	db	111	;'o'
   345   001280  2E                 	db	46
   346   001281  00                 	db	0
   347   001282                     STR_4:
   348   001282  4F                 	db	79	;'O'
   349   001283  6B                 	db	107	;'k'
   350   001284  20                 	db	32
   351   001285  46                 	db	70	;'F'
   352   001286  72                 	db	114	;'r'
   353   001287  65                 	db	101	;'e'
   354   001288  63                 	db	99	;'c'
   355   001289  75                 	db	117	;'u'
   356   00128A  65                 	db	101	;'e'
   357   00128B  6E                 	db	110	;'n'
   358   00128C  63                 	db	99	;'c'
   359   00128D  69                 	db	105	;'i'
   360   00128E  61                 	db	97	;'a'
   361   00128F  20                 	db	32
   362   001290  61                 	db	97	;'a'
   363   001291  63                 	db	99	;'c'
   364   001292  74                 	db	116	;'t'
   365   001293  75                 	db	117	;'u'
   366   001294  61                 	db	97	;'a'
   367   001295  6C                 	db	108	;'l'
   368   001296  69                 	db	105	;'i'
   369   001297  7A                 	db	122	;'z'
   370   001298  61                 	db	97	;'a'
   371   001299  64                 	db	100	;'d'
   372   00129A  61                 	db	97	;'a'
   373   00129B  20                 	db	32
   374   00129C  61                 	db	97	;'a'
   375   00129D  20                 	db	32
   376   00129E  00                 	db	0
   377   00129F                     STR_1:
   378   00129F  20                 	db	32
   379   0012A0  45                 	db	69	;'E'
   380   0012A1  72                 	db	114	;'r'
   381   0012A2  72                 	db	114	;'r'
   382   0012A3  6F                 	db	111	;'o'
   383   0012A4  72                 	db	114	;'r'
   384   0012A5  20                 	db	32
   385   0012A6  69                 	db	105	;'i'
   386   0012A7  6E                 	db	110	;'n'
   387   0012A8  74                 	db	116	;'t'
   388   0012A9  65                 	db	101	;'e'
   389   0012AA  6E                 	db	110	;'n'
   390   0012AB  74                 	db	116	;'t'
   391   0012AC  65                 	db	101	;'e'
   392   0012AD  20                 	db	32
   393   0012AE  64                 	db	100	;'d'
   394   0012AF  65                 	db	101	;'e'
   395   0012B0  20                 	db	32
   396   0012B1  6E                 	db	110	;'n'
   397   0012B2  75                 	db	117	;'u'
   398   0012B3  65                 	db	101	;'e'
   399   0012B4  76                 	db	118	;'v'
   400   0012B5  6F                 	db	111	;'o'
   401   0012B6  20                 	db	32
   402   0012B7  00                 	db	0
   403   0012B8                     STR_2:
   404   0012B8  20                 	db	32
   405   0012B9  46                 	db	70	;'F'
   406   0012BA  72                 	db	114	;'r'
   407   0012BB  65                 	db	101	;'e'
   408   0012BC  63                 	db	99	;'c'
   409   0012BD  75                 	db	117	;'u'
   410   0012BE  65                 	db	101	;'e'
   411   0012BF  6E                 	db	110	;'n'
   412   0012C0  63                 	db	99	;'c'
   413   0012C1  69                 	db	105	;'i'
   414   0012C2  61                 	db	97	;'a'
   415   0012C3  20                 	db	32
   416   0012C4  61                 	db	97	;'a'
   417   0012C5  63                 	db	99	;'c'
   418   0012C6  74                 	db	116	;'t'
   419   0012C7  75                 	db	117	;'u'
   420   0012C8  61                 	db	97	;'a'
   421   0012C9  6C                 	db	108	;'l'
   422   0012CA  20                 	db	32
   423   0012CB  00                 	db	0
   424   0012CC                     STR_3:
   425   0012CC  20                 	db	32
   426   0012CD  48                 	db	72	;'H'
   427   0012CE  7A                 	db	122	;'z'
   428   0012CF  20                 	db	32
   429   0012D0  00                 	db	0
   430   0012D1                     STR_15:
   431   0012D1  25                 	db	37
   432   0012D2  64                 	db	100	;'d'
   433   0012D3  00                 	db	0
   434   0012D4                     STR_14:
   435   0012D4  25                 	db	37
   436   0012D5  73                 	db	115	;'s'
   437   0012D6  00                 	db	0
   438   0012D7  00                 	db	0	; dummy byte at the end
   439   000000                     
   440                           	psect	_firma_text
   441   001006                     __p_firma_text:
   442                           	callstack 0
   443   001006                     _firma:
   444                           	callstack 0
   445   001006  600D               	dw	24589
   446   001008                     __end_of_firma:
   447                           	callstack 0
   448   000000                     _TXREG1	set	4013
   449   000000                     _LATBbits	set	3978
   450   000000                     _RCREG1	set	4014
   451   000000                     _PIR1bits	set	3998
   452   000000                     _TMR0L	set	4054
   453   000000                     _TMR0H	set	4055
   454   000000                     _IPR1bits	set	3999
   455                           
   456                           	psect	nvBANK1
   457   00015E                     __pnvBANK1:
   458                           	callstack 0
   459   00015E                     _tecla:
   460                           	callstack 0
   461   00015E                     	ds	1
   462   000000                     _ANSELAbits	set	3931
   463   000000                     _RCSTAbits	set	4011
   464   000000                     _INTCONbits	set	4082
   465   000000                     _ANSELA	set	3931
   466   000000                     _OSCTUNE	set	3995
   467   000000                     _OSCCON2	set	4050
   468   000000                     _OSCCON	set	4051
   469   000000                     _T0CONbits	set	4053
   470   000000                     _INTCON2bits	set	4081
   471   000000                     _INTCON	set	4082
   472   000000                     _PIE1bits	set	3997
   473   000000                     _RCONbits	set	4048
   474   000000                     _ANSELC	set	3933
   475   000000                     _TRISAbits	set	3986
   476   000000                     _TRISE	set	3990
   477   000000                     _TRISDbits	set	3989
   478   000000                     _TRISCbits	set	3988
   479   000000                     _TRISBbits	set	3987
   480   000000                     _VREFCON2bits	set	3963
   481   000000                     _VREFCON1bits	set	3964
   482   000000                     _ANSELE	set	3935
   483   000000                     _ANSELD	set	3934
   484   000000                     _RCSTA1bits	set	4011
   485   000000                     _TXSTA1bits	set	4012
   486   000000                     _SPBRG1	set	4015
   487   000000                     _BAUDCON1	set	4024
   488   000000                     _SPBRGH1	set	4016
   489   000000                     _PORTD	set	3971
   490   000000                     _LATAbits	set	3977
   491   000000                     _LATCbits	set	3979
   492   000000                     _VREFCON0bits	set	3965
   493   000000                     _LATEbits	set	3981
   494                           
   495                           ; #config settings
   496                           
   497                           	psect	cinit
   498   002212                     __pcinit:
   499                           	callstack 0
   500   002212                     start_initialization:
   501                           	callstack 0
   502   002212                     __initialization:
   503                           	callstack 0
   504                           
   505                           ; Initialize objects allocated to BANK1 (32 bytes)
   506                           ; load TBLPTR registers with __pidataBANK1
   507   002212  0E54               	movlw	low __pidataBANK1
   508   002214  6EF6               	movwf	tblptrl,c
   509   002216  0E24               	movlw	high __pidataBANK1
   510   002218  6EF7               	movwf	tblptrh,c
   511   00221A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   512   00221C  6EF8               	movwf	tblptru,c
   513   00221E  EE01  F029         	lfsr	0,__pdataBANK1
   514   002222  EE10 F020          	lfsr	1,32
   515   002226                     copy_data0:
   516   002226  0009               	tblrd		*+
   517   002228  CFF5 FFEE          	movff	tablat,postinc0
   518   00222C  50E5               	movf	postdec1,w,c
   519   00222E  50E1               	movf	fsr1l,w,c
   520   002230  E1FA               	bnz	copy_data0
   521                           
   522                           ; Initialize objects allocated to BANK0 (21 bytes)
   523                           ; load TBLPTR registers with __pidataBANK0
   524   002232  0E74               	movlw	low __pidataBANK0
   525   002234  6EF6               	movwf	tblptrl,c
   526   002236  0E24               	movlw	high __pidataBANK0
   527   002238  6EF7               	movwf	tblptrh,c
   528   00223A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   529   00223C  6EF8               	movwf	tblptru,c
   530   00223E  EE00  F0DD         	lfsr	0,__pdataBANK0
   531   002242  EE10 F015          	lfsr	1,21
   532   002246                     copy_data1:
   533   002246  0009               	tblrd		*+
   534   002248  CFF5 FFEE          	movff	tablat,postinc0
   535   00224C  50E5               	movf	postdec1,w,c
   536   00224E  50E1               	movf	fsr1l,w,c
   537   002250  E1FA               	bnz	copy_data1
   538                           
   539                           ; Clear objects allocated to BANK1 (41 bytes)
   540   002252  EE01  F000         	lfsr	0,__pbssBANK1
   541   002256  0E29               	movlw	41
   542   002258                     clear_0:
   543   002258  6AEE               	clrf	postinc0,c
   544   00225A  06E8               	decf	wreg,f,c
   545   00225C  E1FD               	bnz	clear_0
   546                           
   547                           ; Clear objects allocated to BANK0 (11 bytes)
   548   00225E  EE00  F0F2         	lfsr	0,__pbssBANK0
   549   002262  0E0B               	movlw	11
   550   002264                     clear_1:
   551   002264  6AEE               	clrf	postinc0,c
   552   002266  06E8               	decf	wreg,f,c
   553   002268  E1FD               	bnz	clear_1
   554                           
   555                           ; Clear objects allocated to COMRAM (17 bytes)
   556   00226A  EE00  F04E         	lfsr	0,__pbssCOMRAM
   557   00226E  0E11               	movlw	17
   558   002270                     clear_2:
   559   002270  6AEE               	clrf	postinc0,c
   560   002272  06E8               	decf	wreg,f,c
   561   002274  E1FD               	bnz	clear_2
   562   002276                     end_of_initialization:
   563                           	callstack 0
   564   002276                     __end_of__initialization:
   565                           	callstack 0
   566   002276  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   567   002278  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   568   00227A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   569   00227C  6EF8               	movwf	tblptru,c
   570   00227E  0100               	movlb	0
   571   002280  EF6C  F009         	goto	_main	;jump to C main() function
   572                           
   573                           	psect	bssCOMRAM
   574   00004E                     __pbssCOMRAM:
   575                           	callstack 0
   576   00004E                     _width:
   577                           	callstack 0
   578   00004E                     	ds	2
   579   000050                     _prec:
   580                           	callstack 0
   581   000050                     	ds	2
   582   000052                     	ds	2
   583   000054                     _w_ceros:
   584                           	callstack 0
   585   000054                     	ds	2
   586   000056                     _w_unos:
   587                           	callstack 0
   588   000056                     	ds	2
   589   000058                     _flags:
   590                           	callstack 0
   591   000058                     	ds	1
   592   000059                     _p_par:
   593                           	callstack 0
   594   000059                     	ds	1
   595   00005A                     _p_imp:
   596                           	callstack 0
   597   00005A                     	ds	1
   598   00005B                     _nbits1:
   599                           	callstack 0
   600   00005B                     	ds	1
   601   00005C                     _nbits0:
   602                           	callstack 0
   603   00005C                     	ds	1
   604   00005D                     _nbits:
   605                           	callstack 0
   606   00005D                     	ds	1
   607   00005E                     _timeout:
   608                           	callstack 0
   609   00005E                     	ds	1
   610                           
   611                           	psect	bssBANK0
   612   0000F2                     __pbssBANK0:
   613                           	callstack 0
   614   0000F2                     _wig_val:
   615                           	callstack 0
   616   0000F2                     	ds	4
   617   0000F6                     _frec_val:
   618                           	callstack 0
   619   0000F6                     	ds	2
   620   0000F8                     _contadorp:
   621                           	callstack 0
   622   0000F8                     	ds	1
   623   0000F9                     _contador500:
   624                           	callstack 0
   625   0000F9                     	ds	1
   626   0000FA                     _contador250:
   627                           	callstack 0
   628   0000FA                     	ds	1
   629   0000FB                     _contador125:
   630                           	callstack 0
   631   0000FB                     	ds	1
   632   0000FC                     _contadorserial:
   633                           	callstack 0
   634   0000FC                     	ds	1
   635                           
   636                           	psect	dataBANK0
   637   0000DD                     __pdataBANK0:
   638                           	callstack 0
   639   0000DD                     _frecuencia_500:
   640                           	callstack 0
   641   0000DD                     	ds	6
   642   0000E3                     _frecuencia_250:
   643                           	callstack 0
   644   0000E3                     	ds	6
   645   0000E9                     _frecuencia_125:
   646                           	callstack 0
   647   0000E9                     	ds	6
   648   0000EF                     _frecuencia_preg:
   649                           	callstack 0
   650   0000EF                     	ds	3
   651                           
   652                           	psect	bssBANK1
   653   000100                     __pbssBANK1:
   654                           	callstack 0
   655   000100                     _dbuf:
   656                           	callstack 0
   657   000100                     	ds	32
   658   000120                     _arreglo:
   659                           	callstack 0
   660   000120                     	ds	4
   661   000124                     lint@rota:
   662                           	callstack 0
   663   000124                     	ds	1
   664   000125                     _d4:
   665                           	callstack 0
   666   000125                     	ds	1
   667   000126                     _d3:
   668                           	callstack 0
   669   000126                     	ds	1
   670   000127                     _d2:
   671                           	callstack 0
   672   000127                     	ds	1
   673   000128                     _d1:
   674                           	callstack 0
   675   000128                     	ds	1
   676                           
   677                           	psect	dataBANK1
   678   000129                     __pdataBANK1:
   679                           	callstack 0
   680   000129                     _sinetable:
   681                           	callstack 0
   682   000129                     	ds	32
   683                           
   684                           	psect	cstackBANK1
   685   000149                     __pcstackBANK1:
   686                           	callstack 0
   687   000149                     shift@k:
   688                           	callstack 0
   689   000149                     det_fila@fila:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x0
   693   000149                     	ds	1
   694   00014A                     shift@dato:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x1
   698   00014A                     	ds	1
   699   00014B                     shift@n:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x2
   703   00014B                     	ds	1
   704   00014C                     ??_lint:
   705                           
   706                           ; 1 bytes @ 0x3
   707   00014C                     	ds	9
   708   000155                     lint@fila:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0xC
   712   000155                     	ds	1
   713   000156                     tx_232@mens:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0xD
   717   000156                     	ds	2
   718   000158                     tx_232@longitud:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0xF
   722   000158                     	ds	1
   723   000159                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x10
   726   000159                     	ds	2
   727   00015B                     main@contador_digitos:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x12
   731   00015B                     	ds	1
   732   00015C                     main@i:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x13
   736   00015C                     	ds	2
   737                           
   738                           	psect	cstackBANK0
   739   000060                     __pcstackBANK0:
   740                           	callstack 0
   741   000060                     Envia_cadena@buffer:
   742                           	callstack 0
   743                           
   744                           ; 100 bytes @ 0x0
   745   000060                     	ds	100
   746   0000C4                     Envia_cadena@cantidad:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x64
   750   0000C4                     	ds	2
   751   0000C6                     Envia_cadena@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x66
   755   0000C6                     	ds	2
   756   0000C8                     hint@j:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x68
   760   0000C8                     	ds	2
   761   0000CA                     hint@error:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x6A
   765   0000CA                     	ds	2
   766   0000CC                     hint@textot:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x6C
   770   0000CC                     	ds	2
   771   0000CE                     hint@textott:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x6E
   775   0000CE                     	ds	2
   776   0000D0                     hint@textot_1219:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x70
   780   0000D0                     	ds	2
   781   0000D2                     hint@textott_1221:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x72
   785   0000D2                     	ds	2
   786   0000D4                     hint@textot_1223:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x74
   790   0000D4                     	ds	2
   791   0000D6                     hint@textott_1225:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x76
   795   0000D6                     	ds	2
   796   0000D8                     hint@textot_1227:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x78
   800   0000D8                     	ds	2
   801   0000DA                     hint@textott_1229:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x7A
   805   0000DA                     	ds	2
   806   0000DC                     hint@rx_buf:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x7C
   810   0000DC                     	ds	1
   811                           
   812                           	psect	cstackCOMRAM
   813   000001                     __pcstackCOMRAM:
   814                           	callstack 0
   815   000001                     ?_strlen:
   816                           	callstack 0
   817   000001                     ?___awdiv:
   818                           	callstack 0
   819   000001                     ?___awmod:
   820                           	callstack 0
   821   000001                     ___awdiv@dividend:
   822                           	callstack 0
   823   000001                     ___awmod@dividend:
   824                           	callstack 0
   825   000001                     fputc@c:
   826                           	callstack 0
   827   000001                     strlen@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x0
   831   000001                     	ds	2
   832   000003                     fputc@fp:
   833                           	callstack 0
   834   000003                     ___awdiv@divisor:
   835                           	callstack 0
   836   000003                     ___awmod@divisor:
   837                           	callstack 0
   838   000003                     strlen@a:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x2
   842   000003                     	ds	1
   843   000004                     ??_fputc:
   844                           
   845                           ; 1 bytes @ 0x3
   846   000004                     	ds	1
   847   000005                     ___awdiv@counter:
   848                           	callstack 0
   849   000005                     ___awmod@counter:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x4
   853   000005                     	ds	1
   854   000006                     ___awdiv@sign:
   855                           	callstack 0
   856   000006                     ___awmod@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x5
   860   000006                     	ds	1
   861   000007                     ?_abs:
   862                           	callstack 0
   863   000007                     ___awdiv@quotient:
   864                           	callstack 0
   865   000007                     abs@a:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x6
   869   000007                     	ds	2
   870   000009                     ??_abs:
   871                           
   872                           ; 1 bytes @ 0x8
   873   000009                     	ds	2
   874   00000B                     vfpfcnvrt@fp:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     vfpfcnvrt@fmt:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0xB
   883   00000C                     	ds	1
   884   00000D                     vfpfcnvrt@ap:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0xC
   888   00000D                     	ds	1
   889   00000E                     ??_vfpfcnvrt:
   890                           
   891                           ; 1 bytes @ 0xD
   892   00000E                     	ds	2
   893   000010                     vfpfcnvrt@cp_1827:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0xF
   897   000010                     	ds	2
   898   000012                     vfpfcnvrt@cp:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x11
   902   000012                     	ds	2
   903   000014                     vfpfcnvrt@done:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x13
   907   000014                     	ds	1
   908   000015                     vfpfcnvrt@convarg:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x14
   912   000015                     	ds	4
   913   000019                     vfpfcnvrt@c:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x18
   917   000019                     	ds	1
   918   00001A                     ?_vfprintf:
   919                           	callstack 0
   920   00001A                     vfprintf@fp:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x19
   924   00001A                     	ds	1
   925   00001B                     vfprintf@fmt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x1A
   929   00001B                     	ds	2
   930   00001D                     vfprintf@ap:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x1C
   934   00001D                     	ds	1
   935   00001E                     vfprintf@cfmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x1D
   939   00001E                     	ds	2
   940   000020                     ?_sprintf:
   941                           	callstack 0
   942   000020                     sprintf@s:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x1F
   946   000020                     	ds	1
   947   000021                     sprintf@fmt:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x20
   951   000021                     	ds	4
   952   000025                     sprintf@ap:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x24
   956   000025                     	ds	1
   957   000026                     sprintf@f:
   958                           	callstack 0
   959                           
   960                           ; 12 bytes @ 0x25
   961   000026                     	ds	12
   962   000032                     Envia_cadena@texto:
   963                           	callstack 0
   964   000032                     Envia_frecuencia@frec_val:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x31
   968   000032                     	ds	2
   969   000034                     ??_Envia_frecuencia:
   970                           
   971                           ; 1 bytes @ 0x33
   972   000034                     	ds	1
   973   000035                     Envia_frecuencia@buffer:
   974                           	callstack 0
   975                           
   976                           ; 10 bytes @ 0x34
   977   000035                     	ds	10
   978   00003F                     Envia_frecuencia@cant_digitos:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x3E
   982   00003F                     	ds	2
   983   000041                     Envia_frecuencia@frecuencia1:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x40
   987   000041                     	ds	2
   988   000043                     Envia_frecuencia@i:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x42
   992   000043                     	ds	2
   993   000045                     ??_hint:
   994                           
   995                           ; 1 bytes @ 0x44
   996   000045                     	ds	9
   997                           
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 234 in file "main_display_teclado_wiegand.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  i               2   19[BANK1 ] int 
  1008 ;;  contador_dig    1   18[BANK1 ] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1021 ;;      Totals:         0       0       5       0       0       0       0       0       0
  1022 ;;Total ram usage:        5 bytes
  1023 ;; Hardware stack levels required when called: 10
  1024 ;; This function calls:
  1025 ;;		_config
  1026 ;;		_tx_232
  1027 ;; This function is called by:
  1028 ;;		Startup code after reset
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text0
  1033   0012D8                     __ptext0:
  1034                           	callstack 0
  1035   0012D8                     _main:
  1036                           	callstack 21
  1037   0012D8                     
  1038                           ;main_display_teclado_wiegand.c: 235:     config();
  1039   0012D8  EC70  F00F         	call	_config	;wreg free
  1040   0012DC                     
  1041                           ;main_display_teclado_wiegand.c: 236:     LATAbits.LATA3=1;
  1042   0012DC  8689               	bsf	137,3,c	;volatile
  1043   0012DE                     
  1044                           ;main_display_teclado_wiegand.c: 237:     char contador_digitos;;main_display_teclado_wi
      +                          egand.c: 238:     int i=0;
  1045   0012DE  0E00               	movlw	0
  1046   0012E0  0101               	movlb	1	; () banked
  1047   0012E2  6F5D               	movwf	(main@i+1)& (0+255),b
  1048   0012E4  0E00               	movlw	0
  1049   0012E6  6F5C               	movwf	main@i& (0+255),b
  1050   0012E8                     
  1051                           ; BSR set to: 1
  1052                           ;main_display_teclado_wiegand.c: 240:     tecla=0x5f;
  1053   0012E8  0E5F               	movlw	95
  1054   0012EA  6F5E               	movwf	_tecla& (0+255),b
  1055   0012EC                     l2361:
  1056                           
  1057                           ; BSR set to: 1
  1058                           ;main_display_teclado_wiegand.c: 242:         VREFCON2bits.DACR=sinetable[i];
  1059   0012EC  0E29               	movlw	low _sinetable
  1060   0012EE  255C               	addwf	main@i& (0+255),w,b
  1061   0012F0  6ED9               	movwf	fsr2l,c
  1062   0012F2  0E01               	movlw	high _sinetable
  1063   0012F4  215D               	addwfc	(main@i+1)& (0+255),w,b
  1064   0012F6  6EDA               	movwf	fsr2h,c
  1065   0012F8  50DF               	movf	indf2,w,c
  1066   0012FA  6F59               	movwf	??_main& (0+255),b
  1067   0012FC  507B               	movf	123,w,c	;volatile
  1068   0012FE  1959               	xorwf	??_main& (0+255),w,b
  1069   001300  0BE0               	andlw	-32
  1070   001302  1959               	xorwf	??_main& (0+255),w,b
  1071   001304  6E7B               	movwf	123,c	;volatile
  1072   001306                     
  1073                           ; BSR set to: 1
  1074                           ;main_display_teclado_wiegand.c: 243:         i++;
  1075   001306  4B5C               	infsnz	main@i& (0+255),f,b
  1076   001308  2B5D               	incf	(main@i+1)& (0+255),f,b
  1077   00130A                     
  1078                           ; BSR set to: 1
  1079                           ;main_display_teclado_wiegand.c: 244:         _delay((unsigned long)((62.5)*(48000000/40
      +                          00000.0)));
  1080   00130A  0EFA               	movlw	250
  1081   00130C                     u1997:
  1082   00130C  2EE8               	decfsz	wreg,f,c
  1083   00130E  D7FE               	bra	u1997
  1084   001310                     
  1085                           ;main_display_teclado_wiegand.c: 245:         if(i == 33){
  1086   001310  0E21               	movlw	33
  1087   001312  0101               	movlb	1	; () banked
  1088   001314  195C               	xorwf	main@i& (0+255),w,b
  1089   001316  115D               	iorwf	(main@i+1)& (0+255),w,b
  1090   001318  A4D8               	btfss	status,2,c
  1091   00131A  EF91  F009         	goto	u1701
  1092   00131E  EF93  F009         	goto	u1700
  1093   001322                     u1701:
  1094   001322  EF97  F009         	goto	l2371
  1095   001326                     u1700:
  1096   001326                     
  1097                           ; BSR set to: 1
  1098                           ;main_display_teclado_wiegand.c: 246:             i=0;
  1099   001326  0E00               	movlw	0
  1100   001328  6F5D               	movwf	(main@i+1)& (0+255),b
  1101   00132A  0E00               	movlw	0
  1102   00132C  6F5C               	movwf	main@i& (0+255),b
  1103   00132E                     l2371:
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;main_display_teclado_wiegand.c: 248:         if(tecla!=0xff && tecla != 0x5f){
  1107   00132E  295E               	incf	_tecla& (0+255),w,b
  1108   001330  B4D8               	btfsc	status,2,c
  1109   001332  EF9D  F009         	goto	u1711
  1110   001336  EF9F  F009         	goto	u1710
  1111   00133A                     u1711:
  1112   00133A  EF76  F009         	goto	l2361
  1113   00133E                     u1710:
  1114   00133E                     
  1115                           ; BSR set to: 1
  1116   00133E  0E5F               	movlw	95
  1117   001340  195E               	xorwf	_tecla& (0+255),w,b
  1118   001342  B4D8               	btfsc	status,2,c
  1119   001344  EFA6  F009         	goto	u1721
  1120   001348  EFA8  F009         	goto	u1720
  1121   00134C                     u1721:
  1122   00134C  EF76  F009         	goto	l2361
  1123   001350                     u1720:
  1124   001350                     
  1125                           ; BSR set to: 1
  1126                           ;main_display_teclado_wiegand.c: 249:             if (tecla == 0x0A){
  1127   001350  0E0A               	movlw	10
  1128   001352  195E               	xorwf	_tecla& (0+255),w,b
  1129   001354  A4D8               	btfss	status,2,c
  1130   001356  EFAF  F009         	goto	u1731
  1131   00135A  EFB1  F009         	goto	u1730
  1132   00135E                     u1731:
  1133   00135E  EFD9  F009         	goto	l2387
  1134   001362                     u1730:
  1135   001362                     
  1136                           ; BSR set to: 1
  1137                           ;main_display_teclado_wiegand.c: 250:                 contador_digitos = 0;
  1138   001362  0E00               	movlw	0
  1139   001364  6F5B               	movwf	main@contador_digitos& (0+255),b
  1140                           
  1141                           ;main_display_teclado_wiegand.c: 251:                 d1 = d3 = d4 = 0x5F;
  1142   001366  0E5F               	movlw	95
  1143   001368  6F25               	movwf	_d4& (0+255),b
  1144   00136A  C125  F126         	movff	_d4,_d3
  1145   00136E  C126  F128         	movff	_d3,_d1
  1146                           
  1147                           ;main_display_teclado_wiegand.c: 252:                 d2 = 0xd6;
  1148   001372  0ED6               	movlw	214
  1149   001374  6F27               	movwf	_d2& (0+255),b
  1150   001376                     
  1151                           ; BSR set to: 1
  1152                           ;main_display_teclado_wiegand.c: 253:                 _delay((unsigned long)((200)*(4800
      +                          0000/4000.0)));
  1153   001376  0E0D               	movlw	13
  1154   001378  0101               	movlb	1	; () banked
  1155   00137A  6F5A               	movwf	(??_main+1)& (0+255),b
  1156   00137C  0E2D               	movlw	45
  1157   00137E  6F59               	movwf	??_main& (0+255),b
  1158   001380  0ED7               	movlw	215
  1159   001382                     u2007:
  1160   001382  2EE8               	decfsz	wreg,f,c
  1161   001384  D7FE               	bra	u2007
  1162   001386  2F59               	decfsz	??_main& (0+255),f,b
  1163   001388  D7FC               	bra	u2007
  1164   00138A  2F5A               	decfsz	(??_main+1)& (0+255),f,b
  1165   00138C  D7FA               	bra	u2007
  1166   00138E  D000               	nop2	
  1167   001390                     
  1168                           ;main_display_teclado_wiegand.c: 254:                 LATAbits.LATA3=0;
  1169   001390  9689               	bcf	137,3,c	;volatile
  1170   001392                     
  1171                           ;main_display_teclado_wiegand.c: 255:                 _delay((unsigned long)((50)*(48000
      +                          000/4000.0)));
  1172   001392  0E04               	movlw	4
  1173   001394  0101               	movlb	1	; () banked
  1174   001396  6F5A               	movwf	(??_main+1)& (0+255),b
  1175   001398  0E0C               	movlw	12
  1176   00139A  6F59               	movwf	??_main& (0+255),b
  1177   00139C  0E33               	movlw	51
  1178   00139E                     u2017:
  1179   00139E  2EE8               	decfsz	wreg,f,c
  1180   0013A0  D7FE               	bra	u2017
  1181   0013A2  2F59               	decfsz	??_main& (0+255),f,b
  1182   0013A4  D7FC               	bra	u2017
  1183   0013A6  2F5A               	decfsz	(??_main+1)& (0+255),f,b
  1184   0013A8  D7FA               	bra	u2017
  1185   0013AA  D000               	nop2	
  1186   0013AC                     
  1187                           ;main_display_teclado_wiegand.c: 256:                 LATAbits.LATA3=1;
  1188   0013AC  8689               	bsf	137,3,c	;volatile
  1189                           
  1190                           ;main_display_teclado_wiegand.c: 257:             }
  1191   0013AE  EF82  F00B         	goto	l2503
  1192   0013B2                     l2387:
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main_display_teclado_wiegand.c: 259:                 if (contador_digitos < 5 && tecla 
      +                          != 0x0b && tecla != 0x0c && tecla != 0x0d && tecla != 0x0e && tecla != 0x0f){
  1196   0013B2  0E05               	movlw	5
  1197   0013B4  615B               	cpfslt	main@contador_digitos& (0+255),b
  1198   0013B6  EFDF  F009         	goto	u1741
  1199   0013BA  EFE1  F009         	goto	u1740
  1200   0013BE                     u1741:
  1201   0013BE  EF82  F00B         	goto	l2503
  1202   0013C2                     u1740:
  1203   0013C2                     
  1204                           ; BSR set to: 1
  1205   0013C2  0E0B               	movlw	11
  1206   0013C4  195E               	xorwf	_tecla& (0+255),w,b
  1207   0013C6  B4D8               	btfsc	status,2,c
  1208   0013C8  EFE8  F009         	goto	u1751
  1209   0013CC  EFEA  F009         	goto	u1750
  1210   0013D0                     u1751:
  1211   0013D0  EF82  F00B         	goto	l2503
  1212   0013D4                     u1750:
  1213   0013D4                     
  1214                           ; BSR set to: 1
  1215   0013D4  0E0C               	movlw	12
  1216   0013D6  195E               	xorwf	_tecla& (0+255),w,b
  1217   0013D8  B4D8               	btfsc	status,2,c
  1218   0013DA  EFF1  F009         	goto	u1761
  1219   0013DE  EFF3  F009         	goto	u1760
  1220   0013E2                     u1761:
  1221   0013E2  EF82  F00B         	goto	l2503
  1222   0013E6                     u1760:
  1223   0013E6                     
  1224                           ; BSR set to: 1
  1225   0013E6  0E0D               	movlw	13
  1226   0013E8  195E               	xorwf	_tecla& (0+255),w,b
  1227   0013EA  B4D8               	btfsc	status,2,c
  1228   0013EC  EFFA  F009         	goto	u1771
  1229   0013F0  EFFC  F009         	goto	u1770
  1230   0013F4                     u1771:
  1231   0013F4  EF82  F00B         	goto	l2503
  1232   0013F8                     u1770:
  1233   0013F8                     
  1234                           ; BSR set to: 1
  1235   0013F8  0E0E               	movlw	14
  1236   0013FA  195E               	xorwf	_tecla& (0+255),w,b
  1237   0013FC  B4D8               	btfsc	status,2,c
  1238   0013FE  EF03  F00A         	goto	u1781
  1239   001402  EF05  F00A         	goto	u1780
  1240   001406                     u1781:
  1241   001406  EF82  F00B         	goto	l2503
  1242   00140A                     u1780:
  1243   00140A                     
  1244                           ; BSR set to: 1
  1245   00140A  0E0F               	movlw	15
  1246   00140C  195E               	xorwf	_tecla& (0+255),w,b
  1247   00140E  B4D8               	btfsc	status,2,c
  1248   001410  EF0C  F00A         	goto	u1791
  1249   001414  EF0E  F00A         	goto	u1790
  1250   001418                     u1791:
  1251   001418  EF82  F00B         	goto	l2503
  1252   00141C                     u1790:
  1253   00141C                     
  1254                           ; BSR set to: 1
  1255                           ;main_display_teclado_wiegand.c: 260:                     contador_digitos++;
  1256   00141C  2B5B               	incf	main@contador_digitos& (0+255),f,b
  1257   00141E                     
  1258                           ; BSR set to: 1
  1259                           ;main_display_teclado_wiegand.c: 261:                     d1 = d2;
  1260   00141E  C127  F128         	movff	_d2,_d1
  1261   001422                     
  1262                           ; BSR set to: 1
  1263                           ;main_display_teclado_wiegand.c: 262:                     d2 = d3;
  1264   001422  C126  F127         	movff	_d3,_d2
  1265   001426                     
  1266                           ; BSR set to: 1
  1267                           ;main_display_teclado_wiegand.c: 263:                     d3 = d4;
  1268   001426  C125  F126         	movff	_d4,_d3
  1269   00142A                     
  1270                           ; BSR set to: 1
  1271                           ;main_display_teclado_wiegand.c: 264:                     d4 = segmentos[tecla];
  1272   00142A  0ED9               	movlw	low _segmentos
  1273   00142C  255E               	addwf	_tecla& (0+255),w,b
  1274   00142E  6EF6               	movwf	tblptrl,c
  1275   001430  6AF7               	clrf	tblptrh,c
  1276   001432  0E11               	movlw	high _segmentos
  1277   001434  22F7               	addwfc	tblptrh,f,c
  1278   001436                     	if	0	;There are less than 3 active tblptr bytes
  1279   001436                     	endif
  1280   001436  0008               	tblrd		*
  1281   001438  CFF5 F125          	movff	tablat,_d4
  1282   00143C                     
  1283                           ; BSR set to: 1
  1284                           ;main_display_teclado_wiegand.c: 265:                     arreglo[contador_digitos-1] = 
      +                          tecla;
  1285   00143C  0E1F               	movlw	low (_arreglo+65535)
  1286   00143E  255B               	addwf	main@contador_digitos& (0+255),w,b
  1287   001440  6ED9               	movwf	fsr2l,c
  1288   001442  6ADA               	clrf	fsr2h,c
  1289   001444  0E01               	movlw	high (_arreglo+65535)
  1290   001446  22DA               	addwfc	fsr2h,f,c
  1291   001448  C15E  FFDF         	movff	_tecla,indf2
  1292   00144C                     
  1293                           ; BSR set to: 1
  1294                           ;main_display_teclado_wiegand.c: 266:                     LATAbits.LATA3=0;
  1295   00144C  9689               	bcf	137,3,c	;volatile
  1296   00144E                     
  1297                           ; BSR set to: 1
  1298                           ;main_display_teclado_wiegand.c: 267:                     _delay((unsigned long)((50)*(4
      +                          8000000/4000.0)));
  1299   00144E  0E04               	movlw	4
  1300   001450  0101               	movlb	1	; () banked
  1301   001452  6F5A               	movwf	(??_main+1)& (0+255),b
  1302   001454  0E0C               	movlw	12
  1303   001456  6F59               	movwf	??_main& (0+255),b
  1304   001458  0E33               	movlw	51
  1305   00145A                     u2027:
  1306   00145A  2EE8               	decfsz	wreg,f,c
  1307   00145C  D7FE               	bra	u2027
  1308   00145E  2F59               	decfsz	??_main& (0+255),f,b
  1309   001460  D7FC               	bra	u2027
  1310   001462  2F5A               	decfsz	(??_main+1)& (0+255),f,b
  1311   001464  D7FA               	bra	u2027
  1312   001466  D000               	nop2	
  1313   001468                     
  1314                           ;main_display_teclado_wiegand.c: 268:                     LATAbits.LATA3=1;
  1315   001468  8689               	bsf	137,3,c	;volatile
  1316   00146A                     
  1317                           ;main_display_teclado_wiegand.c: 269:                     _delay((unsigned long)((200)*(
      +                          48000000/4000.0)));
  1318   00146A  0E0D               	movlw	13
  1319   00146C  0101               	movlb	1	; () banked
  1320   00146E  6F5A               	movwf	(??_main+1)& (0+255),b
  1321   001470  0E2D               	movlw	45
  1322   001472  6F59               	movwf	??_main& (0+255),b
  1323   001474  0ED7               	movlw	215
  1324   001476                     u2037:
  1325   001476  2EE8               	decfsz	wreg,f,c
  1326   001478  D7FE               	bra	u2037
  1327   00147A  2F59               	decfsz	??_main& (0+255),f,b
  1328   00147C  D7FC               	bra	u2037
  1329   00147E  2F5A               	decfsz	(??_main+1)& (0+255),f,b
  1330   001480  D7FA               	bra	u2037
  1331   001482  D000               	nop2	
  1332   001484                     
  1333                           ;main_display_teclado_wiegand.c: 271:                     if ((d1)== 0x5F && (d2) == 0xd
      +                          6 && (d3) == 0x5F && (d4) == 0x5F){
  1334   001484  0E5F               	movlw	95
  1335   001486  0101               	movlb	1	; () banked
  1336   001488  1928               	xorwf	_d1& (0+255),w,b
  1337   00148A  A4D8               	btfss	status,2,c
  1338   00148C  EF4A  F00A         	goto	u1801
  1339   001490  EF4C  F00A         	goto	u1800
  1340   001494                     u1801:
  1341   001494  EFA2  F00A         	goto	l2445
  1342   001498                     u1800:
  1343   001498                     
  1344                           ; BSR set to: 1
  1345   001498  0ED6               	movlw	214
  1346   00149A  1927               	xorwf	_d2& (0+255),w,b
  1347   00149C  A4D8               	btfss	status,2,c
  1348   00149E  EF53  F00A         	goto	u1811
  1349   0014A2  EF55  F00A         	goto	u1810
  1350   0014A6                     u1811:
  1351   0014A6  EFA2  F00A         	goto	l2445
  1352   0014AA                     u1810:
  1353   0014AA                     
  1354                           ; BSR set to: 1
  1355   0014AA  0E5F               	movlw	95
  1356   0014AC  1926               	xorwf	_d3& (0+255),w,b
  1357   0014AE  A4D8               	btfss	status,2,c
  1358   0014B0  EF5C  F00A         	goto	u1821
  1359   0014B4  EF5E  F00A         	goto	u1820
  1360   0014B8                     u1821:
  1361   0014B8  EFA2  F00A         	goto	l2445
  1362   0014BC                     u1820:
  1363   0014BC                     
  1364                           ; BSR set to: 1
  1365   0014BC  0E5F               	movlw	95
  1366   0014BE  1925               	xorwf	_d4& (0+255),w,b
  1367   0014C0  A4D8               	btfss	status,2,c
  1368   0014C2  EF65  F00A         	goto	u1831
  1369   0014C6  EF67  F00A         	goto	u1830
  1370   0014CA                     u1831:
  1371   0014CA  EFA2  F00A         	goto	l2445
  1372   0014CE                     u1830:
  1373   0014CE                     
  1374                           ; BSR set to: 1
  1375                           ;main_display_teclado_wiegand.c: 273:                         d1 = 0x5F;
  1376   0014CE  0E5F               	movlw	95
  1377   0014D0  6F28               	movwf	_d1& (0+255),b
  1378                           
  1379                           ;main_display_teclado_wiegand.c: 274:                         d2 = 0xd6;
  1380   0014D2  0ED6               	movlw	214
  1381   0014D4  6F27               	movwf	_d2& (0+255),b
  1382                           
  1383                           ;main_display_teclado_wiegand.c: 275:                         d3 = 0x5F;
  1384   0014D6  0E5F               	movlw	95
  1385   0014D8  6F26               	movwf	_d3& (0+255),b
  1386                           
  1387                           ;main_display_teclado_wiegand.c: 276:                         d4 = 0x5F;
  1388   0014DA  0E5F               	movlw	95
  1389   0014DC  6F25               	movwf	_d4& (0+255),b
  1390   0014DE                     
  1391                           ; BSR set to: 1
  1392                           ;main_display_teclado_wiegand.c: 277:                         tx_232("Ok frecuencia actu
      +                          alizada a 500Hz.",34);
  1393   0014DE  0EF9               	movlw	low STR_10
  1394   0014E0  6F56               	movwf	tx_232@mens& (0+255),b
  1395   0014E2  0E11               	movlw	high STR_10
  1396   0014E4  6F57               	movwf	(tx_232@mens+1)& (0+255),b
  1397   0014E6  0E22               	movlw	34
  1398   0014E8  6F58               	movwf	tx_232@longitud& (0+255),b
  1399   0014EA  ECB8  F011         	call	_tx_232	;wreg free
  1400   0014EE                     l2431:
  1401                           
  1402                           ;main_display_teclado_wiegand.c: 279:                         VREFCON2bits.DACR=sinetabl
      +                          e[i];
  1403   0014EE  0E29               	movlw	low _sinetable
  1404   0014F0  0101               	movlb	1	; () banked
  1405   0014F2  255C               	addwf	main@i& (0+255),w,b
  1406   0014F4  6ED9               	movwf	fsr2l,c
  1407   0014F6  0E01               	movlw	high _sinetable
  1408   0014F8  215D               	addwfc	(main@i+1)& (0+255),w,b
  1409   0014FA  6EDA               	movwf	fsr2h,c
  1410   0014FC  50DF               	movf	indf2,w,c
  1411   0014FE  6F59               	movwf	??_main& (0+255),b
  1412   001500  507B               	movf	123,w,c	;volatile
  1413   001502  1959               	xorwf	??_main& (0+255),w,b
  1414   001504  0BE0               	andlw	-32
  1415   001506  1959               	xorwf	??_main& (0+255),w,b
  1416   001508  6E7B               	movwf	123,c	;volatile
  1417   00150A                     
  1418                           ; BSR set to: 1
  1419                           ;main_display_teclado_wiegand.c: 280:                             i++;
  1420   00150A  4B5C               	infsnz	main@i& (0+255),f,b
  1421   00150C  2B5D               	incf	(main@i+1)& (0+255),f,b
  1422   00150E                     
  1423                           ; BSR set to: 1
  1424                           ;main_display_teclado_wiegand.c: 281:                             _delay((unsigned long)
      +                          ((62.5)*(48000000/4000000.0)));
  1425   00150E  0EFA               	movlw	250
  1426   001510                     u2047:
  1427   001510  2EE8               	decfsz	wreg,f,c
  1428   001512  D7FE               	bra	u2047
  1429   001514                     
  1430                           ;main_display_teclado_wiegand.c: 282:                             if(i == 33){
  1431   001514  0E21               	movlw	33
  1432   001516  0101               	movlb	1	; () banked
  1433   001518  195C               	xorwf	main@i& (0+255),w,b
  1434   00151A  115D               	iorwf	(main@i+1)& (0+255),w,b
  1435   00151C  A4D8               	btfss	status,2,c
  1436   00151E  EF93  F00A         	goto	u1841
  1437   001522  EF95  F00A         	goto	u1840
  1438   001526                     u1841:
  1439   001526  EF99  F00A         	goto	l2441
  1440   00152A                     u1840:
  1441   00152A                     
  1442                           ; BSR set to: 1
  1443                           ;main_display_teclado_wiegand.c: 283:                                 i=0;
  1444   00152A  0E00               	movlw	0
  1445   00152C  6F5D               	movwf	(main@i+1)& (0+255),b
  1446   00152E  0E00               	movlw	0
  1447   001530  6F5C               	movwf	main@i& (0+255),b
  1448   001532                     l2441:
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;main_display_teclado_wiegand.c: 285:                             if (tecla == 0x0A)brea
      +                          k;
  1452   001532  0E0A               	movlw	10
  1453   001534  195E               	xorwf	_tecla& (0+255),w,b
  1454   001536  A4D8               	btfss	status,2,c
  1455   001538  EFA0  F00A         	goto	u1851
  1456   00153C  EFA2  F00A         	goto	u1850
  1457   001540                     u1851:
  1458   001540  EF77  F00A         	goto	l2431
  1459   001544                     u1850:
  1460   001544                     l2445:
  1461                           
  1462                           ; BSR set to: 1
  1463                           ;main_display_teclado_wiegand.c: 288:                     if((d1)== 0x5F && (d2) == 0x9b
      +                           && (d3) == 0xd6 && (d4) == 0x5F){
  1464   001544  0E5F               	movlw	95
  1465   001546  1928               	xorwf	_d1& (0+255),w,b
  1466   001548  A4D8               	btfss	status,2,c
  1467   00154A  EFA9  F00A         	goto	u1861
  1468   00154E  EFAB  F00A         	goto	u1860
  1469   001552                     u1861:
  1470   001552  EF04  F00B         	goto	l2471
  1471   001556                     u1860:
  1472   001556                     
  1473                           ; BSR set to: 1
  1474   001556  0E9B               	movlw	155
  1475   001558  1927               	xorwf	_d2& (0+255),w,b
  1476   00155A  A4D8               	btfss	status,2,c
  1477   00155C  EFB2  F00A         	goto	u1871
  1478   001560  EFB4  F00A         	goto	u1870
  1479   001564                     u1871:
  1480   001564  EF04  F00B         	goto	l2471
  1481   001568                     u1870:
  1482   001568                     
  1483                           ; BSR set to: 1
  1484   001568  0ED6               	movlw	214
  1485   00156A  1926               	xorwf	_d3& (0+255),w,b
  1486   00156C  A4D8               	btfss	status,2,c
  1487   00156E  EFBB  F00A         	goto	u1881
  1488   001572  EFBD  F00A         	goto	u1880
  1489   001576                     u1881:
  1490   001576  EF04  F00B         	goto	l2471
  1491   00157A                     u1880:
  1492   00157A                     
  1493                           ; BSR set to: 1
  1494   00157A  0E5F               	movlw	95
  1495   00157C  1925               	xorwf	_d4& (0+255),w,b
  1496   00157E  A4D8               	btfss	status,2,c
  1497   001580  EFC4  F00A         	goto	u1891
  1498   001584  EFC6  F00A         	goto	u1890
  1499   001588                     u1891:
  1500   001588  EF04  F00B         	goto	l2471
  1501   00158C                     u1890:
  1502   00158C                     
  1503                           ; BSR set to: 1
  1504                           ;main_display_teclado_wiegand.c: 289:                         d1 = 0x5F;
  1505   00158C  0E5F               	movlw	95
  1506   00158E  6F28               	movwf	_d1& (0+255),b
  1507                           
  1508                           ;main_display_teclado_wiegand.c: 290:                         d2 = 0x9b;
  1509   001590  0E9B               	movlw	155
  1510   001592  6F27               	movwf	_d2& (0+255),b
  1511                           
  1512                           ;main_display_teclado_wiegand.c: 291:                         d3 = 0xd6;
  1513   001594  0ED6               	movlw	214
  1514   001596  6F26               	movwf	_d3& (0+255),b
  1515                           
  1516                           ;main_display_teclado_wiegand.c: 292:                         d4 = 0x5F;
  1517   001598  0E5F               	movlw	95
  1518   00159A  6F25               	movwf	_d4& (0+255),b
  1519   00159C                     
  1520                           ; BSR set to: 1
  1521                           ;main_display_teclado_wiegand.c: 293:                         tx_232("Ok frecuencia actu
      +                          alizada a 250Hz.",34);
  1522   00159C  0E1C               	movlw	low STR_11
  1523   00159E  6F56               	movwf	tx_232@mens& (0+255),b
  1524   0015A0  0E12               	movlw	high STR_11
  1525   0015A2  6F57               	movwf	(tx_232@mens+1)& (0+255),b
  1526   0015A4  0E22               	movlw	34
  1527   0015A6  6F58               	movwf	tx_232@longitud& (0+255),b
  1528   0015A8  ECB8  F011         	call	_tx_232	;wreg free
  1529   0015AC                     l2457:
  1530                           
  1531                           ;main_display_teclado_wiegand.c: 295:                         VREFCON2bits.DACR=sinetabl
      +                          e[i];
  1532   0015AC  0E29               	movlw	low _sinetable
  1533   0015AE  0101               	movlb	1	; () banked
  1534   0015B0  255C               	addwf	main@i& (0+255),w,b
  1535   0015B2  6ED9               	movwf	fsr2l,c
  1536   0015B4  0E01               	movlw	high _sinetable
  1537   0015B6  215D               	addwfc	(main@i+1)& (0+255),w,b
  1538   0015B8  6EDA               	movwf	fsr2h,c
  1539   0015BA  50DF               	movf	indf2,w,c
  1540   0015BC  6F59               	movwf	??_main& (0+255),b
  1541   0015BE  507B               	movf	123,w,c	;volatile
  1542   0015C0  1959               	xorwf	??_main& (0+255),w,b
  1543   0015C2  0BE0               	andlw	-32
  1544   0015C4  1959               	xorwf	??_main& (0+255),w,b
  1545   0015C6  6E7B               	movwf	123,c	;volatile
  1546   0015C8                     
  1547                           ; BSR set to: 1
  1548                           ;main_display_teclado_wiegand.c: 296:                             i++;
  1549   0015C8  4B5C               	infsnz	main@i& (0+255),f,b
  1550   0015CA  2B5D               	incf	(main@i+1)& (0+255),f,b
  1551   0015CC                     
  1552                           ; BSR set to: 1
  1553                           ;main_display_teclado_wiegand.c: 297:                             _delay((unsigned long)
      +                          ((125)*(48000000/4000000.0)));
  1554   0015CC  0ED6               	movlw	214
  1555   0015CE                     u2057:
  1556   0015CE  D000               	nop2	
  1557   0015D0  D000               	nop2	
  1558   0015D2  2EE8               	decfsz	wreg,f,c
  1559   0015D4  D7FC               	bra	u2057
  1560   0015D6  D000               	nop2	
  1561   0015D8                     
  1562                           ;main_display_teclado_wiegand.c: 298:                             if(i == 33){
  1563   0015D8  0E21               	movlw	33
  1564   0015DA  0101               	movlb	1	; () banked
  1565   0015DC  195C               	xorwf	main@i& (0+255),w,b
  1566   0015DE  115D               	iorwf	(main@i+1)& (0+255),w,b
  1567   0015E0  A4D8               	btfss	status,2,c
  1568   0015E2  EFF5  F00A         	goto	u1901
  1569   0015E6  EFF7  F00A         	goto	u1900
  1570   0015EA                     u1901:
  1571   0015EA  EFFB  F00A         	goto	l2467
  1572   0015EE                     u1900:
  1573   0015EE                     
  1574                           ; BSR set to: 1
  1575                           ;main_display_teclado_wiegand.c: 299:                                 i=0;
  1576   0015EE  0E00               	movlw	0
  1577   0015F0  6F5D               	movwf	(main@i+1)& (0+255),b
  1578   0015F2  0E00               	movlw	0
  1579   0015F4  6F5C               	movwf	main@i& (0+255),b
  1580   0015F6                     l2467:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main_display_teclado_wiegand.c: 301:                             if (tecla == 0x0A)brea
      +                          k;
  1584   0015F6  0E0A               	movlw	10
  1585   0015F8  195E               	xorwf	_tecla& (0+255),w,b
  1586   0015FA  A4D8               	btfss	status,2,c
  1587   0015FC  EF02  F00B         	goto	u1911
  1588   001600  EF04  F00B         	goto	u1910
  1589   001604                     u1911:
  1590   001604  EFD6  F00A         	goto	l2457
  1591   001608                     u1910:
  1592   001608                     l2471:
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main_display_teclado_wiegand.c: 304:                     if((d1)== 0x5F && (d2) == 0x41
      +                           && (d3) == 0x9b && (d4) == 0xd6){
  1596   001608  0E5F               	movlw	95
  1597   00160A  1928               	xorwf	_d1& (0+255),w,b
  1598   00160C  A4D8               	btfss	status,2,c
  1599   00160E  EF0B  F00B         	goto	u1921
  1600   001612  EF0D  F00B         	goto	u1920
  1601   001616                     u1921:
  1602   001616  EF69  F00B         	goto	l2497
  1603   00161A                     u1920:
  1604   00161A                     
  1605                           ; BSR set to: 1
  1606   00161A  0E41               	movlw	65
  1607   00161C  1927               	xorwf	_d2& (0+255),w,b
  1608   00161E  A4D8               	btfss	status,2,c
  1609   001620  EF14  F00B         	goto	u1931
  1610   001624  EF16  F00B         	goto	u1930
  1611   001628                     u1931:
  1612   001628  EF69  F00B         	goto	l2497
  1613   00162C                     u1930:
  1614   00162C                     
  1615                           ; BSR set to: 1
  1616   00162C  0E9B               	movlw	155
  1617   00162E  1926               	xorwf	_d3& (0+255),w,b
  1618   001630  A4D8               	btfss	status,2,c
  1619   001632  EF1D  F00B         	goto	u1941
  1620   001636  EF1F  F00B         	goto	u1940
  1621   00163A                     u1941:
  1622   00163A  EF69  F00B         	goto	l2497
  1623   00163E                     u1940:
  1624   00163E                     
  1625                           ; BSR set to: 1
  1626   00163E  0ED6               	movlw	214
  1627   001640  1925               	xorwf	_d4& (0+255),w,b
  1628   001642  A4D8               	btfss	status,2,c
  1629   001644  EF26  F00B         	goto	u1951
  1630   001648  EF28  F00B         	goto	u1950
  1631   00164C                     u1951:
  1632   00164C  EF69  F00B         	goto	l2497
  1633   001650                     u1950:
  1634   001650                     
  1635                           ; BSR set to: 1
  1636                           ;main_display_teclado_wiegand.c: 305:                         d1 = 0x5F;
  1637   001650  0E5F               	movlw	95
  1638   001652  6F28               	movwf	_d1& (0+255),b
  1639                           
  1640                           ;main_display_teclado_wiegand.c: 306:                         d2 = 0x41;
  1641   001654  0E41               	movlw	65
  1642   001656  6F27               	movwf	_d2& (0+255),b
  1643                           
  1644                           ;main_display_teclado_wiegand.c: 307:                         d3 = 0x9b;
  1645   001658  0E9B               	movlw	155
  1646   00165A  6F26               	movwf	_d3& (0+255),b
  1647                           
  1648                           ;main_display_teclado_wiegand.c: 308:                         d4 = 0xd6;
  1649   00165C  0ED6               	movlw	214
  1650   00165E  6F25               	movwf	_d4& (0+255),b
  1651   001660                     
  1652                           ; BSR set to: 1
  1653                           ;main_display_teclado_wiegand.c: 309:                         tx_232("Ok frecuencia actu
      +                          alizada a 125Hz.",34);
  1654   001660  0E3F               	movlw	low STR_12
  1655   001662  6F56               	movwf	tx_232@mens& (0+255),b
  1656   001664  0E12               	movlw	high STR_12
  1657   001666  6F57               	movwf	(tx_232@mens+1)& (0+255),b
  1658   001668  0E22               	movlw	34
  1659   00166A  6F58               	movwf	tx_232@longitud& (0+255),b
  1660   00166C  ECB8  F011         	call	_tx_232	;wreg free
  1661   001670                     l2483:
  1662                           
  1663                           ;main_display_teclado_wiegand.c: 311:                         VREFCON2bits.DACR=sinetabl
      +                          e[i];
  1664   001670  0E29               	movlw	low _sinetable
  1665   001672  0101               	movlb	1	; () banked
  1666   001674  255C               	addwf	main@i& (0+255),w,b
  1667   001676  6ED9               	movwf	fsr2l,c
  1668   001678  0E01               	movlw	high _sinetable
  1669   00167A  215D               	addwfc	(main@i+1)& (0+255),w,b
  1670   00167C  6EDA               	movwf	fsr2h,c
  1671   00167E  50DF               	movf	indf2,w,c
  1672   001680  6F59               	movwf	??_main& (0+255),b
  1673   001682  507B               	movf	123,w,c	;volatile
  1674   001684  1959               	xorwf	??_main& (0+255),w,b
  1675   001686  0BE0               	andlw	-32
  1676   001688  1959               	xorwf	??_main& (0+255),w,b
  1677   00168A  6E7B               	movwf	123,c	;volatile
  1678   00168C                     
  1679                           ; BSR set to: 1
  1680                           ;main_display_teclado_wiegand.c: 312:                             i++;
  1681   00168C  4B5C               	infsnz	main@i& (0+255),f,b
  1682   00168E  2B5D               	incf	(main@i+1)& (0+255),f,b
  1683   001690                     
  1684                           ; BSR set to: 1
  1685                           ;main_display_teclado_wiegand.c: 313:                             _delay((unsigned long)
      +                          ((250)*(48000000/4000000.0)));
  1686   001690  0E04               	movlw	4
  1687   001692  0101               	movlb	1	; () banked
  1688   001694  6F59               	movwf	??_main& (0+255),b
  1689   001696  0EE4               	movlw	228
  1690   001698                     u2067:
  1691   001698  2EE8               	decfsz	wreg,f,c
  1692   00169A  D7FE               	bra	u2067
  1693   00169C  2F59               	decfsz	??_main& (0+255),f,b
  1694   00169E  D7FC               	bra	u2067
  1695   0016A0  0000               	nop	
  1696   0016A2                     
  1697                           ;main_display_teclado_wiegand.c: 314:                             if(i == 33){
  1698   0016A2  0E21               	movlw	33
  1699   0016A4  0101               	movlb	1	; () banked
  1700   0016A6  195C               	xorwf	main@i& (0+255),w,b
  1701   0016A8  115D               	iorwf	(main@i+1)& (0+255),w,b
  1702   0016AA  A4D8               	btfss	status,2,c
  1703   0016AC  EF5A  F00B         	goto	u1961
  1704   0016B0  EF5C  F00B         	goto	u1960
  1705   0016B4                     u1961:
  1706   0016B4  EF60  F00B         	goto	l2493
  1707   0016B8                     u1960:
  1708   0016B8                     
  1709                           ; BSR set to: 1
  1710                           ;main_display_teclado_wiegand.c: 315:                                 i=0;
  1711   0016B8  0E00               	movlw	0
  1712   0016BA  6F5D               	movwf	(main@i+1)& (0+255),b
  1713   0016BC  0E00               	movlw	0
  1714   0016BE  6F5C               	movwf	main@i& (0+255),b
  1715   0016C0                     l2493:
  1716                           
  1717                           ; BSR set to: 1
  1718                           ;main_display_teclado_wiegand.c: 317:                             if (tecla == 0x0A)brea
      +                          k;
  1719   0016C0  0E0A               	movlw	10
  1720   0016C2  195E               	xorwf	_tecla& (0+255),w,b
  1721   0016C4  A4D8               	btfss	status,2,c
  1722   0016C6  EF67  F00B         	goto	u1971
  1723   0016CA  EF69  F00B         	goto	u1970
  1724   0016CE                     u1971:
  1725   0016CE  EF38  F00B         	goto	l2483
  1726   0016D2                     u1970:
  1727   0016D2                     l2497:
  1728                           
  1729                           ; BSR set to: 1
  1730                           ;main_display_teclado_wiegand.c: 320:                     if(contador_digitos == 4){
  1731   0016D2  0E04               	movlw	4
  1732   0016D4  195B               	xorwf	main@contador_digitos& (0+255),w,b
  1733   0016D6  A4D8               	btfss	status,2,c
  1734   0016D8  EF70  F00B         	goto	u1981
  1735   0016DC  EF72  F00B         	goto	u1980
  1736   0016E0                     u1981:
  1737   0016E0  EF82  F00B         	goto	l2503
  1738   0016E4                     u1980:
  1739   0016E4                     
  1740                           ; BSR set to: 1
  1741                           ;main_display_teclado_wiegand.c: 321:                         d1 = 0x9e;
  1742   0016E4  0E9E               	movlw	158
  1743   0016E6  6F28               	movwf	_d1& (0+255),b
  1744                           
  1745                           ;main_display_teclado_wiegand.c: 322:                         d2 = 0x88;
  1746   0016E8  0E88               	movlw	136
  1747   0016EA  6F27               	movwf	_d2& (0+255),b
  1748                           
  1749                           ;main_display_teclado_wiegand.c: 323:                         d3 = 0x88;
  1750   0016EC  0E88               	movlw	136
  1751   0016EE  6F26               	movwf	_d3& (0+255),b
  1752                           
  1753                           ;main_display_teclado_wiegand.c: 324:                         d4 = 0x7F;
  1754   0016F0  0E7F               	movlw	127
  1755   0016F2  6F25               	movwf	_d4& (0+255),b
  1756   0016F4                     
  1757                           ; BSR set to: 1
  1758                           ;main_display_teclado_wiegand.c: 325:                         tx_232("Valor de frecuenci
      +                          a incorrecto.",31);
  1759   0016F4  0E62               	movlw	low STR_13
  1760   0016F6  6F56               	movwf	tx_232@mens& (0+255),b
  1761   0016F8  0E12               	movlw	high STR_13
  1762   0016FA  6F57               	movwf	(tx_232@mens+1)& (0+255),b
  1763   0016FC  0E1F               	movlw	31
  1764   0016FE  6F58               	movwf	tx_232@longitud& (0+255),b
  1765   001700  ECB8  F011         	call	_tx_232	;wreg free
  1766   001704                     l2503:
  1767                           
  1768                           ;main_display_teclado_wiegand.c: 329:             tecla=0xff;
  1769   001704  0101               	movlb	1	; () banked
  1770   001706  695E               	setf	_tecla& (0+255),b
  1771   001708  EF76  F009         	goto	l2361
  1772   00170C  EFEA  F008         	goto	start
  1773   001710                     __end_of_main:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _tx_232 *****************
  1777 ;; Defined at:
  1778 ;;		line 395 in file "main_display_teclado_wiegand.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  mens            2   13[BANK1 ] PTR unsigned char 
  1781 ;;		 -> STR_13(32), STR_12(35), STR_11(35), STR_10(35), 
  1782 ;;  longitud        1   15[BANK1 ] unsigned char 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0       0       3       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1798 ;;Total ram usage:        3 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 9
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text1
  1809   002370                     __ptext1:
  1810                           	callstack 0
  1811   002370                     _tx_232:
  1812                           	callstack 21
  1813   002370                     
  1814                           ;main_display_teclado_wiegand.c: 396:     while (longitud>0){
  1815   002370  EFCD  F011         	goto	l2171
  1816   002374                     l2165:
  1817                           
  1818                           ; BSR set to: 1
  1819                           ;main_display_teclado_wiegand.c: 397:         TXREG1=*mens;
  1820   002374  C156  FFF6         	movff	tx_232@mens,tblptrl
  1821   002378  C157  FFF7         	movff	tx_232@mens+1,tblptrh
  1822   00237C                     	if	0	;tblptru may be non-zero
  1823   00237C                     	endif
  1824   00237C                     	if	0	;tblptru may be non-zero
  1825   00237C                     	endif
  1826   00237C  0008               	tblrd		*
  1827   00237E  CFF5 FFAD          	movff	tablat,4013	;volatile
  1828   002382                     
  1829                           ; BSR set to: 1
  1830                           ;main_display_teclado_wiegand.c: 398:         PIR1bits.TXIF=0;
  1831   002382  989E               	bcf	158,4,c	;volatile
  1832   002384                     l266:
  1833   002384  A89E               	btfss	158,4,c	;volatile
  1834   002386  EFC7  F011         	goto	u1481
  1835   00238A  EFC9  F011         	goto	u1480
  1836   00238E                     u1481:
  1837   00238E  EFC2  F011         	goto	l266
  1838   002392                     u1480:
  1839   002392                     
  1840                           ;main_display_teclado_wiegand.c: 400:         longitud--;
  1841   002392  0101               	movlb	1	; () banked
  1842   002394  0758               	decf	tx_232@longitud& (0+255),f,b
  1843                           
  1844                           ;main_display_teclado_wiegand.c: 401:         mens++;
  1845   002396  4B56               	infsnz	tx_232@mens& (0+255),f,b
  1846   002398  2B57               	incf	(tx_232@mens+1)& (0+255),f,b
  1847   00239A                     l2171:
  1848                           
  1849                           ;main_display_teclado_wiegand.c: 396:     while (longitud>0){
  1850   00239A  0101               	movlb	1	; () banked
  1851   00239C  5158               	movf	tx_232@longitud& (0+255),w,b
  1852   00239E  A4D8               	btfss	status,2,c
  1853   0023A0  EFD4  F011         	goto	u1491
  1854   0023A4  EFD6  F011         	goto	u1490
  1855   0023A8                     u1491:
  1856   0023A8  EFBA  F011         	goto	l2165
  1857   0023AC                     u1490:
  1858   0023AC                     
  1859                           ; BSR set to: 1
  1860   0023AC  0012               	return		;funcret
  1861   0023AE                     __end_of_tx_232:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _config *****************
  1865 ;; Defined at:
  1866 ;;		line 15 in file "config.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 9
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text2
  1895   001EE0                     __ptext2:
  1896                           	callstack 0
  1897   001EE0                     _config:
  1898                           	callstack 21
  1899   001EE0                     
  1900                           ;config.c: 19:         OSCCON=0x70;
  1901   001EE0  0E70               	movlw	112
  1902   001EE2  6ED3               	movwf	211,c	;volatile
  1903                           
  1904                           ;config.c: 21:   OSCCON2=0x10;
  1905   001EE4  0E10               	movlw	16
  1906   001EE6  6ED2               	movwf	210,c	;volatile
  1907                           
  1908                           ;config.c: 22:   OSCTUNE=0x80;
  1909   001EE8  0E80               	movlw	128
  1910   001EEA  6E9B               	movwf	155,c	;volatile
  1911                           
  1912                           ;config.c: 28:     ANSELA=0;
  1913   001EEC  0E00               	movlw	0
  1914   001EEE  010F               	movlb	15	; () banked
  1915   001EF0  6F5B               	movwf	91,b	;volatile
  1916   001EF2                     
  1917                           ; BSR set to: 15
  1918                           ;config.c: 29:     ANSELAbits.ANSA2=1;
  1919   001EF2  855B               	bsf	91,2,b	;volatile
  1920   001EF4                     
  1921                           ; BSR set to: 15
  1922                           ;config.c: 31:     TRISAbits.RA0=0;
  1923   001EF4  9092               	bcf	146,0,c	;volatile
  1924   001EF6                     
  1925                           ; BSR set to: 15
  1926                           ;config.c: 32:     TRISAbits.RA3=0;
  1927   001EF6  9692               	bcf	146,3,c	;volatile
  1928   001EF8                     
  1929                           ; BSR set to: 15
  1930                           ;config.c: 33:     TRISAbits.RA1=0;
  1931   001EF8  9292               	bcf	146,1,c	;volatile
  1932   001EFA                     
  1933                           ; BSR set to: 15
  1934                           ;config.c: 34:     TRISAbits.RA4=0;
  1935   001EFA  9892               	bcf	146,4,c	;volatile
  1936   001EFC                     
  1937                           ; BSR set to: 15
  1938                           ;config.c: 35:     TRISAbits.RA5=0;
  1939   001EFC  9A92               	bcf	146,5,c	;volatile
  1940   001EFE                     
  1941                           ; BSR set to: 15
  1942                           ;config.c: 36:     TRISAbits.RA6=0;
  1943   001EFE  9C92               	bcf	146,6,c	;volatile
  1944   001F00                     
  1945                           ; BSR set to: 15
  1946                           ;config.c: 37:     TRISBbits.RB0=1;
  1947   001F00  8093               	bsf	147,0,c	;volatile
  1948   001F02                     
  1949                           ; BSR set to: 15
  1950                           ;config.c: 38:     TRISBbits.RB5=0;
  1951   001F02  9A93               	bcf	147,5,c	;volatile
  1952   001F04                     
  1953                           ; BSR set to: 15
  1954                           ;config.c: 39:     TRISBbits.RB6=0;
  1955   001F04  9C93               	bcf	147,6,c	;volatile
  1956                           
  1957                           ;config.c: 41:     ANSELC=0;
  1958   001F06  0E00               	movlw	0
  1959   001F08  6F5D               	movwf	93,b	;volatile
  1960   001F0A                     
  1961                           ; BSR set to: 15
  1962                           ;config.c: 42:     TRISCbits.RC0=0;
  1963   001F0A  9094               	bcf	148,0,c	;volatile
  1964   001F0C                     
  1965                           ; BSR set to: 15
  1966                           ;config.c: 43:     TRISCbits.RC1=0;
  1967   001F0C  9294               	bcf	148,1,c	;volatile
  1968                           
  1969                           ;config.c: 45:     ANSELD=0;
  1970   001F0E  0E00               	movlw	0
  1971   001F10  6F5E               	movwf	94,b	;volatile
  1972   001F12                     
  1973                           ; BSR set to: 15
  1974                           ;config.c: 47:     TRISDbits.RD4=0;
  1975   001F12  9895               	bcf	149,4,c	;volatile
  1976   001F14                     
  1977                           ; BSR set to: 15
  1978                           ;config.c: 48:     TRISDbits.RD5=0;
  1979   001F14  9A95               	bcf	149,5,c	;volatile
  1980   001F16                     
  1981                           ; BSR set to: 15
  1982                           ;config.c: 49:     TRISDbits.RD6=0;
  1983   001F16  9C95               	bcf	149,6,c	;volatile
  1984   001F18                     
  1985                           ; BSR set to: 15
  1986                           ;config.c: 50:     TRISDbits.RD7=0;
  1987   001F18  9E95               	bcf	149,7,c	;volatile
  1988   001F1A                     
  1989                           ; BSR set to: 15
  1990                           ;config.c: 52:     TRISDbits.RD3=1;
  1991   001F1A  8695               	bsf	149,3,c	;volatile
  1992   001F1C                     
  1993                           ; BSR set to: 15
  1994                           ;config.c: 53:     TRISDbits.RD2=1;
  1995   001F1C  8495               	bsf	149,2,c	;volatile
  1996   001F1E                     
  1997                           ; BSR set to: 15
  1998                           ;config.c: 54:     TRISDbits.RD1=1;
  1999   001F1E  8295               	bsf	149,1,c	;volatile
  2000   001F20                     
  2001                           ; BSR set to: 15
  2002                           ;config.c: 55:     TRISDbits.RD0=1;
  2003   001F20  8095               	bsf	149,0,c	;volatile
  2004                           
  2005                           ;config.c: 57:     ANSELE=0;
  2006   001F22  0E00               	movlw	0
  2007   001F24  6F5F               	movwf	95,b	;volatile
  2008                           
  2009                           ;config.c: 59:     TRISE=0;
  2010   001F26  0E00               	movlw	0
  2011   001F28  6E96               	movwf	150,c	;volatile
  2012                           
  2013                           ;config.c: 63:     INTCON=0;
  2014   001F2A  0E00               	movlw	0
  2015   001F2C  6EF2               	movwf	242,c	;volatile
  2016   001F2E                     
  2017                           ; BSR set to: 15
  2018                           ;config.c: 64:     RCONbits.IPEN=1;
  2019   001F2E  8ED0               	bsf	208,7,c	;volatile
  2020   001F30                     
  2021                           ; BSR set to: 15
  2022                           ;config.c: 65:     INTCONbits.INT0E=1;
  2023   001F30  88F2               	bsf	242,4,c	;volatile
  2024   001F32                     
  2025                           ; BSR set to: 15
  2026                           ;config.c: 66:     INTCON2bits.INTEDG0=0;
  2027   001F32  9CF1               	bcf	241,6,c	;volatile
  2028   001F34                     
  2029                           ; BSR set to: 15
  2030                           ;config.c: 67:     INTCONbits.GIEH=1;
  2031   001F34  8EF2               	bsf	242,7,c	;volatile
  2032   001F36                     
  2033                           ; BSR set to: 15
  2034                           ;config.c: 68:     INTCONbits.GIEL=1;
  2035   001F36  8CF2               	bsf	242,6,c	;volatile
  2036   001F38                     
  2037                           ; BSR set to: 15
  2038                           ;config.c: 69:     INTCONbits.T0IE=1;
  2039   001F38  8AF2               	bsf	242,5,c	;volatile
  2040   001F3A                     
  2041                           ; BSR set to: 15
  2042                           ;config.c: 70:     INTCON2bits.T0IP=0;
  2043   001F3A  94F1               	bcf	241,2,c	;volatile
  2044   001F3C                     
  2045                           ; BSR set to: 15
  2046                           ;config.c: 71:     PIE1bits.RCIE=1;
  2047   001F3C  8A9D               	bsf	157,5,c	;volatile
  2048   001F3E                     
  2049                           ; BSR set to: 15
  2050                           ;config.c: 72:     IPR1bits.RCIP=1;
  2051   001F3E  8A9F               	bsf	159,5,c	;volatile
  2052   001F40                     
  2053                           ; BSR set to: 15
  2054                           ;config.c: 75:     T0CONbits.T08BIT=0;
  2055   001F40  9CD5               	bcf	213,6,c	;volatile
  2056   001F42                     
  2057                           ; BSR set to: 15
  2058                           ;config.c: 76:     T0CONbits.T0CS=0;
  2059   001F42  9AD5               	bcf	213,5,c	;volatile
  2060   001F44                     
  2061                           ; BSR set to: 15
  2062                           ;config.c: 77:     T0CONbits.PSA=0;
  2063   001F44  96D5               	bcf	213,3,c	;volatile
  2064                           
  2065                           ;config.c: 78:     T0CONbits.T0PS=1;
  2066   001F46  50D5               	movf	213,w,c	;volatile
  2067   001F48  0BF8               	andlw	-8
  2068   001F4A  0901               	iorlw	1
  2069   001F4C  6ED5               	movwf	213,c	;volatile
  2070                           
  2071                           ;config.c: 82:     TMR0H=0xd1;;
  2072   001F4E  0ED1               	movlw	209
  2073   001F50  6ED7               	movwf	215,c	;volatile
  2074                           
  2075                           ;config.c: 83:     TMR0L=0x1f;;
  2076   001F52  0E1F               	movlw	31
  2077   001F54  6ED6               	movwf	214,c	;volatile
  2078                           
  2079                           ;config.c: 87:     SPBRG1 = 0x4d;
  2080   001F56  0E4D               	movlw	77
  2081   001F58  6EAF               	movwf	175,c	;volatile
  2082                           
  2083                           ;config.c: 88:     SPBRGH1 = 0;
  2084   001F5A  0E00               	movlw	0
  2085   001F5C  6EB0               	movwf	176,c	;volatile
  2086   001F5E                     
  2087                           ; BSR set to: 15
  2088                           ;config.c: 89:     TXSTA1bits.BRGH=0;
  2089   001F5E  94AC               	bcf	172,2,c	;volatile
  2090   001F60                     
  2091                           ; BSR set to: 15
  2092                           ;config.c: 90:     TXSTA1bits.TX9=0;
  2093   001F60  9CAC               	bcf	172,6,c	;volatile
  2094   001F62                     
  2095                           ; BSR set to: 15
  2096                           ;config.c: 91:     TXSTA1bits.TXEN=1;
  2097   001F62  8AAC               	bsf	172,5,c	;volatile
  2098   001F64                     
  2099                           ; BSR set to: 15
  2100                           ;config.c: 92:     TXSTA1bits.SYNC=0;
  2101   001F64  98AC               	bcf	172,4,c	;volatile
  2102   001F66                     
  2103                           ; BSR set to: 15
  2104                           ;config.c: 93:     RCSTA1bits.RX9=0;
  2105   001F66  9CAB               	bcf	171,6,c	;volatile
  2106   001F68                     
  2107                           ; BSR set to: 15
  2108                           ;config.c: 94:     RCSTA1bits.CREN=1;
  2109   001F68  88AB               	bsf	171,4,c	;volatile
  2110                           
  2111                           ;config.c: 95:     BAUDCON1=0x40;
  2112   001F6A  0E40               	movlw	64
  2113   001F6C  6EB8               	movwf	184,c	;volatile
  2114   001F6E                     
  2115                           ; BSR set to: 15
  2116                           ;config.c: 96:     RCSTA1bits.SPEN=1;
  2117   001F6E  8EAB               	bsf	171,7,c	;volatile
  2118   001F70                     
  2119                           ; BSR set to: 15
  2120                           ;config.c: 100:     VREFCON1bits.DACEN = 1;
  2121   001F70  8E7C               	bsf	124,7,c	;volatile
  2122   001F72                     
  2123                           ; BSR set to: 15
  2124                           ;config.c: 101:     VREFCON1bits.DACLPS = 1;
  2125   001F72  8C7C               	bsf	124,6,c	;volatile
  2126   001F74                     
  2127                           ; BSR set to: 15
  2128                           ;config.c: 102:     VREFCON1bits.DACOE = 1;
  2129   001F74  8A7C               	bsf	124,5,c	;volatile
  2130                           
  2131                           ;config.c: 103:     VREFCON1bits.DACPSS = 0b10;
  2132   001F76  507C               	movf	124,w,c	;volatile
  2133   001F78  0BF3               	andlw	-13
  2134   001F7A  0908               	iorlw	8
  2135   001F7C  6E7C               	movwf	124,c	;volatile
  2136   001F7E                     
  2137                           ; BSR set to: 15
  2138                           ;config.c: 104:     VREFCON1bits.DACNSS = 0;
  2139   001F7E  907C               	bcf	124,0,c	;volatile
  2140                           
  2141                           ;config.c: 105:     VREFCON2bits.DACR = 0b1111;
  2142   001F80  507B               	movf	123,w,c	;volatile
  2143   001F82  0BE0               	andlw	-32
  2144   001F84  090F               	iorlw	15
  2145   001F86  6E7B               	movwf	123,c	;volatile
  2146   001F88                     
  2147                           ; BSR set to: 15
  2148                           ;config.c: 106:     VREFCON0bits.FVREN = 1;
  2149   001F88  8E7D               	bsf	125,7,c	;volatile
  2150                           
  2151                           ;config.c: 107:     VREFCON0bits.FVRS = 0b11;
  2152   001F8A  0E30               	movlw	48
  2153   001F8C  127D               	iorwf	125,f,c	;volatile
  2154   001F8E                     
  2155                           ; BSR set to: 15
  2156                           ;config.c: 108:     VREFCON0bits.FVRST = 1;
  2157   001F8E  8C7D               	bsf	125,6,c	;volatile
  2158   001F90                     
  2159                           ; BSR set to: 15
  2160   001F90  0012               	return		;funcret
  2161   001F92                     __end_of_config:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _lint *****************
  2165 ;; Defined at:
  2166 ;;		line 160 in file "main_display_teclado_wiegand.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  fila            1   12[BANK1 ] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       9       0       0       0       0       0       0
  2183 ;;      Totals:         0       0      10       0       0       0       0       0       0
  2184 ;;Total ram usage:       10 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 8
  2187 ;; This function calls:
  2188 ;;		_det_fila
  2189 ;;		_shift
  2190 ;; This function is called by:
  2191 ;;		Interrupt level 1
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	intcodelo
  2196   001018                     __pintcodelo:
  2197                           	callstack 0
  2198   001018                     _lint:
  2199                           	callstack 21
  2200                           
  2201                           ; BSR set to: 15
  2202                           ;incstack = 0
  2203   001018  805F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2204   00101A  CFD8 F14E          	movff	status,??_lint+2
  2205   00101E  CFE8 F14F          	movff	wreg,??_lint+3
  2206   001022  CFE0 F150          	movff	bsr,??_lint+4
  2207   001026  CFF6 F151          	movff	tblptrl,??_lint+5
  2208   00102A  CFF7 F152          	movff	tblptrh,??_lint+6
  2209   00102E  CFF8 F153          	movff	tblptru,??_lint+7
  2210   001032  CFF5 F154          	movff	tablat,??_lint+8
  2211   001036                     
  2212                           ;main_display_teclado_wiegand.c: 162:     char static rota;;main_display_teclado_wiegand
      +                          .c: 163:         static unsigned int pulso=0;;main_display_teclado_wiegand.c: 164:      
      +                             if(INTCONbits.TMR0IF){
  2213   001036  A4F2               	btfss	242,2,c	;volatile
  2214   001038  EF20  F008         	goto	i1u164_21
  2215   00103C  EF22  F008         	goto	i1u164_20
  2216   001040                     i1u164_21:
  2217   001040  EFDA  F008         	goto	i1l215
  2218   001044                     i1u164_20:
  2219   001044                     
  2220                           ;main_display_teclado_wiegand.c: 165:             TMR0H=0xd1;;
  2221   001044  0ED1               	movlw	209
  2222   001046  6ED7               	movwf	215,c	;volatile
  2223                           
  2224                           ;main_display_teclado_wiegand.c: 166:             TMR0L=0x1f;;
  2225   001048  0E1F               	movlw	31
  2226   00104A  6ED6               	movwf	214,c	;volatile
  2227   00104C                     
  2228                           ;main_display_teclado_wiegand.c: 168:         if (rota>=4)rota=1;
  2229   00104C  0E03               	movlw	3
  2230   00104E  0101               	movlb	1	; () banked
  2231   001050  6524               	cpfsgt	lint@rota& (0+255),b
  2232   001052  EF2D  F008         	goto	i1u165_21
  2233   001056  EF2F  F008         	goto	i1u165_20
  2234   00105A                     i1u165_21:
  2235   00105A  EF33  F008         	goto	i1l2315
  2236   00105E                     i1u165_20:
  2237   00105E                     
  2238                           ; BSR set to: 1
  2239   00105E  0E01               	movlw	1
  2240   001060  6F24               	movwf	lint@rota& (0+255),b
  2241   001062  EFC6  F008         	goto	i1l2351
  2242   001066                     i1l2315:
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;main_display_teclado_wiegand.c: 170:                 rota++;
  2246   001066  2B24               	incf	lint@rota& (0+255),f,b
  2247   001068  EFC6  F008         	goto	i1l2351
  2248   00106C                     i1l206:
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;main_display_teclado_wiegand.c: 177:                 LATCbits.LATC1=1;
  2252   00106C  828B               	bsf	139,1,c	;volatile
  2253                           
  2254                           ;main_display_teclado_wiegand.c: 178:                 LATEbits.LATE2=1;
  2255   00106E  848D               	bsf	141,2,c	;volatile
  2256                           
  2257                           ;main_display_teclado_wiegand.c: 179:                 LATEbits.LATE1=1;
  2258   001070  828D               	bsf	141,1,c	;volatile
  2259                           
  2260                           ;main_display_teclado_wiegand.c: 180:                 LATEbits.LATE0=0;
  2261   001072  908D               	bcf	141,0,c	;volatile
  2262   001074                     
  2263                           ; BSR set to: 1
  2264                           ;main_display_teclado_wiegand.c: 181:                 shift(d1);
  2265   001074  5128               	movf	_d1& (0+255),w,b
  2266   001076  EC42  F011         	call	_shift
  2267   00107A                     
  2268                           ;main_display_teclado_wiegand.c: 183:                 fila=det_fila();
  2269   00107A  EC6E  F011         	call	_det_fila	;wreg free
  2270   00107E  0101               	movlb	1	; () banked
  2271   001080  6F55               	movwf	lint@fila& (0+255),b
  2272   001082                     
  2273                           ; BSR set to: 1
  2274                           ;main_display_teclado_wiegand.c: 186:                 if(fila!=0) tecla=c1[fila-1];
  2275   001082  5155               	movf	lint@fila& (0+255),w,b
  2276   001084  B4D8               	btfsc	status,2,c
  2277   001086  EF47  F008         	goto	i1u166_21
  2278   00108A  EF49  F008         	goto	i1u166_20
  2279   00108E                     i1u166_21:
  2280   00108E  EFD9  F008         	goto	i1l208
  2281   001092                     i1u166_20:
  2282   001092                     
  2283                           ; BSR set to: 1
  2284   001092  0EFF               	movlw	255
  2285   001094  2555               	addwf	lint@fila& (0+255),w,b
  2286   001096  6F4C               	movwf	??_lint& (0+255),b
  2287   001098  6B4D               	clrf	(??_lint+1)& (0+255),b
  2288   00109A  0EFF               	movlw	255
  2289   00109C  234D               	addwfc	(??_lint+1)& (0+255),f,b
  2290   00109E  0EF5               	movlw	low _c1
  2291   0010A0  254C               	addwf	??_lint& (0+255),w,b
  2292   0010A2  6EF6               	movwf	tblptrl,c
  2293   0010A4  0E11               	movlw	high _c1
  2294   0010A6  214D               	addwfc	(??_lint+1)& (0+255),w,b
  2295   0010A8  6EF7               	movwf	tblptrh,c
  2296   0010AA                     	if	0	;There are less than 3 active tblptr bytes
  2297   0010AA                     	endif
  2298   0010AA  0008               	tblrd		*
  2299   0010AC  CFF5 F15E          	movff	tablat,_tecla
  2300   0010B0  EFD9  F008         	goto	i1l208
  2301   0010B4                     i1l209:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;main_display_teclado_wiegand.c: 191:                 LATCbits.LATC1=1;
  2305   0010B4  828B               	bsf	139,1,c	;volatile
  2306                           
  2307                           ;main_display_teclado_wiegand.c: 192:                 LATEbits.LATE2=1;
  2308   0010B6  848D               	bsf	141,2,c	;volatile
  2309                           
  2310                           ;main_display_teclado_wiegand.c: 193:                 LATEbits.LATE1=0;
  2311   0010B8  928D               	bcf	141,1,c	;volatile
  2312                           
  2313                           ;main_display_teclado_wiegand.c: 194:                 LATEbits.LATE0=1;
  2314   0010BA  808D               	bsf	141,0,c	;volatile
  2315   0010BC                     
  2316                           ; BSR set to: 1
  2317                           ;main_display_teclado_wiegand.c: 195:                 shift(d2);
  2318   0010BC  5127               	movf	_d2& (0+255),w,b
  2319   0010BE  EC42  F011         	call	_shift
  2320   0010C2                     
  2321                           ;main_display_teclado_wiegand.c: 197:                 fila=det_fila();
  2322   0010C2  EC6E  F011         	call	_det_fila	;wreg free
  2323   0010C6  0101               	movlb	1	; () banked
  2324   0010C8  6F55               	movwf	lint@fila& (0+255),b
  2325   0010CA                     
  2326                           ; BSR set to: 1
  2327                           ;main_display_teclado_wiegand.c: 199:                 if(fila!=0) tecla=c2[fila-1];
  2328   0010CA  5155               	movf	lint@fila& (0+255),w,b
  2329   0010CC  B4D8               	btfsc	status,2,c
  2330   0010CE  EF6B  F008         	goto	i1u167_21
  2331   0010D2  EF6D  F008         	goto	i1u167_20
  2332   0010D6                     i1u167_21:
  2333   0010D6  EFD9  F008         	goto	i1l208
  2334   0010DA                     i1u167_20:
  2335   0010DA                     
  2336                           ; BSR set to: 1
  2337   0010DA  0EFF               	movlw	255
  2338   0010DC  2555               	addwf	lint@fila& (0+255),w,b
  2339   0010DE  6F4C               	movwf	??_lint& (0+255),b
  2340   0010E0  6B4D               	clrf	(??_lint+1)& (0+255),b
  2341   0010E2  0EFF               	movlw	255
  2342   0010E4  234D               	addwfc	(??_lint+1)& (0+255),f,b
  2343   0010E6  0EF1               	movlw	low _c2
  2344   0010E8  254C               	addwf	??_lint& (0+255),w,b
  2345   0010EA  6EF6               	movwf	tblptrl,c
  2346   0010EC  0E11               	movlw	high _c2
  2347   0010EE  214D               	addwfc	(??_lint+1)& (0+255),w,b
  2348   0010F0  6EF7               	movwf	tblptrh,c
  2349   0010F2                     	if	0	;There are less than 3 active tblptr bytes
  2350   0010F2                     	endif
  2351   0010F2  0008               	tblrd		*
  2352   0010F4  CFF5 F15E          	movff	tablat,_tecla
  2353   0010F8  EFD9  F008         	goto	i1l208
  2354   0010FC                     i1l211:
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;main_display_teclado_wiegand.c: 203:                 LATCbits.LATC1=1;
  2358   0010FC  828B               	bsf	139,1,c	;volatile
  2359                           
  2360                           ;main_display_teclado_wiegand.c: 204:                 LATEbits.LATE2=0;
  2361   0010FE  948D               	bcf	141,2,c	;volatile
  2362                           
  2363                           ;main_display_teclado_wiegand.c: 205:                 LATEbits.LATE1=1;
  2364   001100  828D               	bsf	141,1,c	;volatile
  2365                           
  2366                           ;main_display_teclado_wiegand.c: 206:                 LATEbits.LATE0=1;
  2367   001102  808D               	bsf	141,0,c	;volatile
  2368   001104                     
  2369                           ; BSR set to: 1
  2370                           ;main_display_teclado_wiegand.c: 208:                 shift(d3);
  2371   001104  5126               	movf	_d3& (0+255),w,b
  2372   001106  EC42  F011         	call	_shift
  2373   00110A                     
  2374                           ;main_display_teclado_wiegand.c: 210:                 fila=det_fila();
  2375   00110A  EC6E  F011         	call	_det_fila	;wreg free
  2376   00110E  0101               	movlb	1	; () banked
  2377   001110  6F55               	movwf	lint@fila& (0+255),b
  2378   001112                     
  2379                           ; BSR set to: 1
  2380                           ;main_display_teclado_wiegand.c: 213:                 if(fila!=0) tecla=c3[fila-1];
  2381   001112  5155               	movf	lint@fila& (0+255),w,b
  2382   001114  B4D8               	btfsc	status,2,c
  2383   001116  EF8F  F008         	goto	i1u168_21
  2384   00111A  EF91  F008         	goto	i1u168_20
  2385   00111E                     i1u168_21:
  2386   00111E  EFD9  F008         	goto	i1l208
  2387   001122                     i1u168_20:
  2388   001122                     
  2389                           ; BSR set to: 1
  2390   001122  0EFF               	movlw	255
  2391   001124  2555               	addwf	lint@fila& (0+255),w,b
  2392   001126  6F4C               	movwf	??_lint& (0+255),b
  2393   001128  6B4D               	clrf	(??_lint+1)& (0+255),b
  2394   00112A  0EFF               	movlw	255
  2395   00112C  234D               	addwfc	(??_lint+1)& (0+255),f,b
  2396   00112E  0EED               	movlw	low _c3
  2397   001130  254C               	addwf	??_lint& (0+255),w,b
  2398   001132  6EF6               	movwf	tblptrl,c
  2399   001134  0E11               	movlw	high _c3
  2400   001136  214D               	addwfc	(??_lint+1)& (0+255),w,b
  2401   001138  6EF7               	movwf	tblptrh,c
  2402   00113A                     	if	0	;There are less than 3 active tblptr bytes
  2403   00113A                     	endif
  2404   00113A  0008               	tblrd		*
  2405   00113C  CFF5 F15E          	movff	tablat,_tecla
  2406   001140  EFD9  F008         	goto	i1l208
  2407   001144                     i1l213:
  2408                           
  2409                           ; BSR set to: 1
  2410                           ;main_display_teclado_wiegand.c: 216:                 LATCbits.LATC1=0;
  2411   001144  928B               	bcf	139,1,c	;volatile
  2412                           
  2413                           ;main_display_teclado_wiegand.c: 217:                 LATEbits.LATE2=1;
  2414   001146  848D               	bsf	141,2,c	;volatile
  2415                           
  2416                           ;main_display_teclado_wiegand.c: 218:                 LATEbits.LATE1=1;
  2417   001148  828D               	bsf	141,1,c	;volatile
  2418                           
  2419                           ;main_display_teclado_wiegand.c: 219:                 LATEbits.LATE0=1;
  2420   00114A  808D               	bsf	141,0,c	;volatile
  2421   00114C                     
  2422                           ; BSR set to: 1
  2423                           ;main_display_teclado_wiegand.c: 221:                 shift(d4);
  2424   00114C  5125               	movf	_d4& (0+255),w,b
  2425   00114E  EC42  F011         	call	_shift
  2426   001152                     
  2427                           ;main_display_teclado_wiegand.c: 223:                 fila=det_fila();
  2428   001152  EC6E  F011         	call	_det_fila	;wreg free
  2429   001156  0101               	movlb	1	; () banked
  2430   001158  6F55               	movwf	lint@fila& (0+255),b
  2431   00115A                     
  2432                           ; BSR set to: 1
  2433                           ;main_display_teclado_wiegand.c: 225:                 if(fila!=0) tecla=c4[fila-1];
  2434   00115A  5155               	movf	lint@fila& (0+255),w,b
  2435   00115C  B4D8               	btfsc	status,2,c
  2436   00115E  EFB3  F008         	goto	i1u169_21
  2437   001162  EFB5  F008         	goto	i1u169_20
  2438   001166                     i1u169_21:
  2439   001166  EFD9  F008         	goto	i1l208
  2440   00116A                     i1u169_20:
  2441   00116A                     
  2442                           ; BSR set to: 1
  2443   00116A  0EFF               	movlw	255
  2444   00116C  2555               	addwf	lint@fila& (0+255),w,b
  2445   00116E  6F4C               	movwf	??_lint& (0+255),b
  2446   001170  6B4D               	clrf	(??_lint+1)& (0+255),b
  2447   001172  0EFF               	movlw	255
  2448   001174  234D               	addwfc	(??_lint+1)& (0+255),f,b
  2449   001176  0EE9               	movlw	low _c4
  2450   001178  254C               	addwf	??_lint& (0+255),w,b
  2451   00117A  6EF6               	movwf	tblptrl,c
  2452   00117C  0E11               	movlw	high _c4
  2453   00117E  214D               	addwfc	(??_lint+1)& (0+255),w,b
  2454   001180  6EF7               	movwf	tblptrh,c
  2455   001182                     	if	0	;There are less than 3 active tblptr bytes
  2456   001182                     	endif
  2457   001182  0008               	tblrd		*
  2458   001184  CFF5 F15E          	movff	tablat,_tecla
  2459   001188  EFD9  F008         	goto	i1l208
  2460   00118C                     i1l2351:
  2461                           
  2462                           ; BSR set to: 1
  2463   00118C  5124               	movf	lint@rota& (0+255),w,b
  2464                           
  2465                           ; Switch size 1, requested type "simple"
  2466                           ; Number of cases is 4, Range of values is 1 to 4
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte           13     7 (average)
  2470                           ;	Chosen strategy is simple_byte
  2471   00118E  0A01               	xorlw	1	; case 1
  2472   001190  B4D8               	btfsc	status,2,c
  2473   001192  EF36  F008         	goto	i1l206
  2474   001196  0A03               	xorlw	3	; case 2
  2475   001198  B4D8               	btfsc	status,2,c
  2476   00119A  EF5A  F008         	goto	i1l209
  2477   00119E  0A01               	xorlw	1	; case 3
  2478   0011A0  B4D8               	btfsc	status,2,c
  2479   0011A2  EF7E  F008         	goto	i1l211
  2480   0011A6  0A07               	xorlw	7	; case 4
  2481   0011A8  B4D8               	btfsc	status,2,c
  2482   0011AA  EFA2  F008         	goto	i1l213
  2483   0011AE  EFD9  F008         	goto	i1l208
  2484   0011B2                     i1l208:
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;main_display_teclado_wiegand.c: 228:         INTCONbits.TMR0IF=0;
  2488   0011B2  94F2               	bcf	242,2,c	;volatile
  2489   0011B4                     i1l215:
  2490   0011B4  C154  FFF5         	movff	??_lint+8,tablat
  2491   0011B8  C153  FFF8         	movff	??_lint+7,tblptru
  2492   0011BC  C152  FFF7         	movff	??_lint+6,tblptrh
  2493   0011C0  C151  FFF6         	movff	??_lint+5,tblptrl
  2494   0011C4  C150  FFE0         	movff	??_lint+4,bsr
  2495   0011C8  C14F  FFE8         	movff	??_lint+3,wreg
  2496   0011CC  C14E  FFD8         	movff	??_lint+2,status
  2497   0011D0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2498   0011D2  0010               	retfie	
  2499   0011D4                     __end_of_lint:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _shift *****************
  2503 ;; Defined at:
  2504 ;;		line 337 in file "main_display_teclado_wiegand.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  dato            1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  dato            1    1[BANK1 ] unsigned char 
  2509 ;;  n               1    2[BANK1 ] unsigned char 
  2510 ;;  k               1    0[BANK1 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0
  2521 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2523 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2524 ;;Total ram usage:        3 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 7
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_lint
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text4
  2535   002284                     __ptext4:
  2536                           	callstack 0
  2537   002284                     _shift:
  2538                           	callstack 21
  2539                           
  2540                           ;incstack = 0
  2541                           ;shift@dato stored from wreg
  2542   002284  0101               	movlb	1	; () banked
  2543   002286  6F4A               	movwf	shift@dato& (0+255),b
  2544   002288                     
  2545                           ;main_display_teclado_wiegand.c: 341:     LATCbits.LATC0=1;
  2546   002288  808B               	bsf	139,0,c	;volatile
  2547                           
  2548                           ;main_display_teclado_wiegand.c: 342:     LATBbits.LATB5=1;
  2549   00228A  8A8A               	bsf	138,5,c	;volatile
  2550                           
  2551                           ;main_display_teclado_wiegand.c: 345:     LATBbits.LATB5=0;
  2552   00228C  9A8A               	bcf	138,5,c	;volatile
  2553                           
  2554                           ;main_display_teclado_wiegand.c: 346:     LATBbits.LATB5=1;
  2555   00228E  8A8A               	bsf	138,5,c	;volatile
  2556                           
  2557                           ;main_display_teclado_wiegand.c: 349:     LATAbits.LATA5=0;
  2558   002290  9A89               	bcf	137,5,c	;volatile
  2559                           
  2560                           ;main_display_teclado_wiegand.c: 350:     LATAbits.LATA4=0;
  2561   002292  9889               	bcf	137,4,c	;volatile
  2562   002294                     
  2563                           ;main_display_teclado_wiegand.c: 353:     char n=0,k=0;
  2564   002294  0E00               	movlw	0
  2565   002296  0101               	movlb	1	; () banked
  2566   002298  6F4B               	movwf	shift@n& (0+255),b
  2567                           
  2568                           ;main_display_teclado_wiegand.c: 355:     for(n=0;n<=7;n++){
  2569   00229A  0E00               	movlw	0
  2570   00229C  6F4B               	movwf	shift@n& (0+255),b
  2571   00229E                     i1l250:
  2572                           
  2573                           ; BSR set to: 1
  2574                           ;main_display_teclado_wiegand.c: 357:      if(dato&0x1) LATCbits.LATC0=1;
  2575   00229E  A14A               	btfss	shift@dato& (0+255),0,b
  2576   0022A0  EF54  F011         	goto	i1u142_21
  2577   0022A4  EF56  F011         	goto	i1u142_20
  2578   0022A8                     i1u142_21:
  2579   0022A8  EF59  F011         	goto	i1l252
  2580   0022AC                     i1u142_20:
  2581   0022AC                     
  2582                           ; BSR set to: 1
  2583   0022AC  808B               	bsf	139,0,c	;volatile
  2584   0022AE  EF5A  F011         	goto	i1l2129
  2585   0022B2                     i1l252:
  2586                           
  2587                           ; BSR set to: 1
  2588   0022B2  908B               	bcf	139,0,c	;volatile
  2589   0022B4                     i1l2129:
  2590                           
  2591                           ; BSR set to: 1
  2592                           ;main_display_teclado_wiegand.c: 361:      k=dato>>1;
  2593   0022B4  90D8               	bcf	status,0,c
  2594   0022B6  314A               	rrcf	shift@dato& (0+255),w,b
  2595   0022B8  6F49               	movwf	shift@k& (0+255),b
  2596   0022BA                     
  2597                           ; BSR set to: 1
  2598                           ;main_display_teclado_wiegand.c: 362:      dato=k;
  2599   0022BA  C149  F14A         	movff	shift@k,shift@dato
  2600   0022BE                     
  2601                           ; BSR set to: 1
  2602                           ;main_display_teclado_wiegand.c: 365:     LATAbits.LATA4=0;
  2603   0022BE  9889               	bcf	137,4,c	;volatile
  2604   0022C0                     
  2605                           ; BSR set to: 1
  2606                           ;main_display_teclado_wiegand.c: 366:     LATAbits.LATA4=1;
  2607   0022C0  8889               	bsf	137,4,c	;volatile
  2608   0022C2                     
  2609                           ; BSR set to: 1
  2610                           ;main_display_teclado_wiegand.c: 367:     LATAbits.LATA4=0;
  2611   0022C2  9889               	bcf	137,4,c	;volatile
  2612   0022C4                     
  2613                           ; BSR set to: 1
  2614                           ;main_display_teclado_wiegand.c: 371:     }
  2615   0022C4  2B4B               	incf	shift@n& (0+255),f,b
  2616   0022C6                     
  2617                           ; BSR set to: 1
  2618   0022C6  0E07               	movlw	7
  2619   0022C8  654B               	cpfsgt	shift@n& (0+255),b
  2620   0022CA  EF69  F011         	goto	i1u143_21
  2621   0022CE  EF6B  F011         	goto	i1u143_20
  2622   0022D2                     i1u143_21:
  2623   0022D2  EF4F  F011         	goto	i1l250
  2624   0022D6                     i1u143_20:
  2625   0022D6                     
  2626                           ; BSR set to: 1
  2627                           ;main_display_teclado_wiegand.c: 373:     LATAbits.LATA5=1;
  2628   0022D6  8A89               	bsf	137,5,c	;volatile
  2629                           
  2630                           ;main_display_teclado_wiegand.c: 374:     LATAbits.LATA5=0;
  2631   0022D8  9A89               	bcf	137,5,c	;volatile
  2632   0022DA                     
  2633                           ; BSR set to: 1
  2634   0022DA  0012               	return		;funcret
  2635   0022DC                     __end_of_shift:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _det_fila *****************
  2639 ;; Defined at:
  2640 ;;		line 378 in file "main_display_teclado_wiegand.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  fila            1    0[BANK1 ] volatile unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2658 ;;Total ram usage:        1 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 7
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_lint
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text5
  2669   0022DC                     __ptext5:
  2670                           	callstack 0
  2671   0022DC                     _det_fila:
  2672                           	callstack 21
  2673   0022DC                     
  2674                           ;main_display_teclado_wiegand.c: 379:     volatile char fila=0;
  2675   0022DC  0E00               	movlw	0
  2676   0022DE  0101               	movlb	1	; () banked
  2677   0022E0  6F49               	movwf	det_fila@fila& (0+255),b	;volatile
  2678   0022E2                     
  2679                           ; BSR set to: 1
  2680                           ;main_display_teclado_wiegand.c: 380:     if((PORTD&0x01)==0){
  2681   0022E2  B083               	btfsc	131,0,c	;volatile
  2682   0022E4  EF76  F011         	goto	i1u144_21
  2683   0022E8  EF78  F011         	goto	i1u144_20
  2684   0022EC                     i1u144_21:
  2685   0022EC  EF7A  F011         	goto	i1l2149
  2686   0022F0                     i1u144_20:
  2687   0022F0                     
  2688                           ; BSR set to: 1
  2689                           ;main_display_teclado_wiegand.c: 381:         fila=1;
  2690   0022F0  0E01               	movlw	1
  2691   0022F2  6F49               	movwf	det_fila@fila& (0+255),b	;volatile
  2692   0022F4                     i1l2149:
  2693                           
  2694                           ; BSR set to: 1
  2695                           ;main_display_teclado_wiegand.c: 383:     if((PORTD&0x02)==0){
  2696   0022F4  B283               	btfsc	131,1,c	;volatile
  2697   0022F6  EF7F  F011         	goto	i1u145_21
  2698   0022FA  EF81  F011         	goto	i1u145_20
  2699   0022FE                     i1u145_21:
  2700   0022FE  EF83  F011         	goto	i1l2153
  2701   002302                     i1u145_20:
  2702   002302                     
  2703                           ; BSR set to: 1
  2704                           ;main_display_teclado_wiegand.c: 384:         fila=2;
  2705   002302  0E02               	movlw	2
  2706   002304  6F49               	movwf	det_fila@fila& (0+255),b	;volatile
  2707   002306                     i1l2153:
  2708                           
  2709                           ; BSR set to: 1
  2710                           ;main_display_teclado_wiegand.c: 386:     if((PORTD&0x04)==0){
  2711   002306  B483               	btfsc	131,2,c	;volatile
  2712   002308  EF88  F011         	goto	i1u146_21
  2713   00230C  EF8A  F011         	goto	i1u146_20
  2714   002310                     i1u146_21:
  2715   002310  EF8C  F011         	goto	i1l2157
  2716   002314                     i1u146_20:
  2717   002314                     
  2718                           ; BSR set to: 1
  2719                           ;main_display_teclado_wiegand.c: 387:         fila=3;
  2720   002314  0E03               	movlw	3
  2721   002316  6F49               	movwf	det_fila@fila& (0+255),b	;volatile
  2722   002318                     i1l2157:
  2723                           
  2724                           ; BSR set to: 1
  2725                           ;main_display_teclado_wiegand.c: 389:     if((PORTD&0x08)==0){
  2726   002318  B683               	btfsc	131,3,c	;volatile
  2727   00231A  EF91  F011         	goto	i1u147_21
  2728   00231E  EF93  F011         	goto	i1u147_20
  2729   002322                     i1u147_21:
  2730   002322  EF95  F011         	goto	i1l260
  2731   002326                     i1u147_20:
  2732   002326                     
  2733                           ; BSR set to: 1
  2734                           ;main_display_teclado_wiegand.c: 390:         fila=4;
  2735   002326  0E04               	movlw	4
  2736   002328  6F49               	movwf	det_fila@fila& (0+255),b	;volatile
  2737   00232A                     i1l260:
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;main_display_teclado_wiegand.c: 392:     return fila;
  2741   00232A  5149               	movf	det_fila@fila& (0+255),w,b	;volatile
  2742   00232C                     
  2743                           ; BSR set to: 1
  2744   00232C  0012               	return		;funcret
  2745   00232E                     __end_of_det_fila:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _hint *****************
  2749 ;; Defined at:
  2750 ;;		line 47 in file "main_display_teclado_wiegand.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  textott         2  122[BANK0 ] PTR unsigned char 
  2755 ;;		 -> STR_9(5), 
  2756 ;;  textot          2  120[BANK0 ] PTR unsigned char 
  2757 ;;		 -> STR_8(29), 
  2758 ;;  textott         2  118[BANK0 ] PTR unsigned char 
  2759 ;;		 -> STR_7(5), 
  2760 ;;  textot          2  116[BANK0 ] PTR unsigned char 
  2761 ;;		 -> STR_6(29), 
  2762 ;;  textott         2  114[BANK0 ] PTR unsigned char 
  2763 ;;		 -> STR_5(5), 
  2764 ;;  textot          2  112[BANK0 ] PTR unsigned char 
  2765 ;;		 -> STR_4(29), 
  2766 ;;  textott         2  110[BANK0 ] PTR unsigned char 
  2767 ;;		 -> STR_3(5), 
  2768 ;;  textot          2  108[BANK0 ] PTR unsigned char 
  2769 ;;		 -> STR_2(20), 
  2770 ;;  error           2  106[BANK0 ] PTR unsigned char 
  2771 ;;		 -> STR_1(25), 
  2772 ;;  j               2  104[BANK0 ] int 
  2773 ;;  i               2    0        int 
  2774 ;;  rx_buf          1  124[BANK0 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0
  2785 ;;      Locals:         0      21       0       0       0       0       0       0       0
  2786 ;;      Temps:          9       0       0       0       0       0       0       0       0
  2787 ;;      Totals:         9      21       0       0       0       0       0       0       0
  2788 ;;Total ram usage:       30 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 6
  2791 ;; This function calls:
  2792 ;;		_Envia_cadena
  2793 ;;		_Envia_frecuencia
  2794 ;; This function is called by:
  2795 ;;		Interrupt level 2
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	intcode
  2800   001008                     __pintcode:
  2801                           	callstack 0
  2802   001008                     _hint:
  2803                           	callstack 21
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;incstack = 0
  2807   001008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2808   00100A  EF88  F00B         	goto	int_func
  2809                           
  2810                           	psect	intcode_body
  2811   001710                     __pintcode_body:
  2812                           	callstack 21
  2813   001710                     int_func:
  2814                           	callstack 21
  2815   001710  CFE1 F046          	movff	fsr1l,??_hint+1
  2816   001714  CFE2 F047          	movff	fsr1h,??_hint+2
  2817   001718  CFD9 F048          	movff	fsr2l,??_hint+3
  2818   00171C  CFDA F049          	movff	fsr2h,??_hint+4
  2819   001720  CFF6 F04A          	movff	tblptrl,??_hint+5
  2820   001724  CFF7 F04B          	movff	tblptrh,??_hint+6
  2821   001728  CFF8 F04C          	movff	tblptru,??_hint+7
  2822   00172C  CFF5 F04D          	movff	tablat,??_hint+8
  2823   001730                     
  2824                           ;main_display_teclado_wiegand.c: 50:         int j = 0;
  2825   001730  0E00               	movlw	0
  2826   001732  0100               	movlb	0	; () banked
  2827   001734  6FC9               	movwf	(hint@j+1)& (0+255),b
  2828   001736  0E00               	movlw	0
  2829   001738  6FC8               	movwf	hint@j& (0+255),b
  2830   00173A                     
  2831                           ; BSR set to: 0
  2832                           ;main_display_teclado_wiegand.c: 51:         if(PIR1bits.RCIF){
  2833   00173A  AA9E               	btfss	158,5,c	;volatile
  2834   00173C  EFA2  F00B         	goto	i2u150_41
  2835   001740  EFA4  F00B         	goto	i2u150_40
  2836   001744                     i2u150_41:
  2837   001744  EF59  F00D         	goto	i2l193
  2838   001748                     i2u150_40:
  2839   001748                     
  2840                           ; BSR set to: 0
  2841                           ;main_display_teclado_wiegand.c: 52:             rx_buf=RCREG1;
  2842   001748  CFAE F0DC          	movff	4014,hint@rx_buf	;volatile
  2843                           
  2844                           ;main_display_teclado_wiegand.c: 53:             if(RCSTA1bits.OERR){
  2845   00174C  A2AB               	btfss	171,1,c	;volatile
  2846   00174E  EFAB  F00B         	goto	i2u151_41
  2847   001752  EFAD  F00B         	goto	i2u151_40
  2848   001756                     i2u151_41:
  2849   001756  EFAF  F00B         	goto	i2l2181
  2850   00175A                     i2u151_40:
  2851   00175A                     
  2852                           ; BSR set to: 0
  2853                           ;main_display_teclado_wiegand.c: 54:                 RCSTAbits.CREN=0;
  2854   00175A  98AB               	bcf	171,4,c	;volatile
  2855                           
  2856                           ;main_display_teclado_wiegand.c: 55:                 RCSTAbits.CREN=1;
  2857   00175C  88AB               	bsf	171,4,c	;volatile
  2858   00175E                     i2l2181:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;main_display_teclado_wiegand.c: 57:             contadorserial++;
  2862   00175E  2BFC               	incf	_contadorserial& (0+255),f,b
  2863   001760                     
  2864                           ; BSR set to: 0
  2865                           ;main_display_teclado_wiegand.c: 58:             if (rx_buf==(frecuencia_125[contadorser
      +                          ial-1])){
  2866   001760  51FC               	movf	_contadorserial& (0+255),w,b
  2867   001762  0FE8               	addlw	low (_frecuencia_125+255)
  2868   001764  6ED9               	movwf	fsr2l,c
  2869   001766  6ADA               	clrf	fsr2h,c
  2870   001768  51DC               	movf	hint@rx_buf& (0+255),w,b
  2871   00176A  18DE               	xorwf	postinc2,w,c
  2872   00176C  A4D8               	btfss	status,2,c
  2873   00176E  EFBB  F00B         	goto	i2u152_41
  2874   001772  EFBD  F00B         	goto	i2u152_40
  2875   001776                     i2u152_41:
  2876   001776  EFC0  F00B         	goto	i2l2187
  2877   00177A                     i2u152_40:
  2878   00177A                     
  2879                           ; BSR set to: 0
  2880                           ;main_display_teclado_wiegand.c: 59:                 contador125++;
  2881   00177A  2BFB               	incf	_contador125& (0+255),f,b
  2882                           
  2883                           ;main_display_teclado_wiegand.c: 60:             }
  2884   00177C  EFC2  F00B         	goto	i2l2189
  2885   001780                     i2l2187:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;main_display_teclado_wiegand.c: 62:                contador125=0;
  2889   001780  0E00               	movlw	0
  2890   001782  6FFB               	movwf	_contador125& (0+255),b
  2891   001784                     i2l2189:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;main_display_teclado_wiegand.c: 64:             if (rx_buf==(frecuencia_250[contadorser
      +                          ial-1])){
  2895   001784  51FC               	movf	_contadorserial& (0+255),w,b
  2896   001786  0FE2               	addlw	low (_frecuencia_250+255)
  2897   001788  6ED9               	movwf	fsr2l,c
  2898   00178A  6ADA               	clrf	fsr2h,c
  2899   00178C  51DC               	movf	hint@rx_buf& (0+255),w,b
  2900   00178E  18DE               	xorwf	postinc2,w,c
  2901   001790  A4D8               	btfss	status,2,c
  2902   001792  EFCD  F00B         	goto	i2u153_41
  2903   001796  EFCF  F00B         	goto	i2u153_40
  2904   00179A                     i2u153_41:
  2905   00179A  EFD2  F00B         	goto	i2l2193
  2906   00179E                     i2u153_40:
  2907   00179E                     
  2908                           ; BSR set to: 0
  2909                           ;main_display_teclado_wiegand.c: 65:                 contador250++;
  2910   00179E  2BFA               	incf	_contador250& (0+255),f,b
  2911                           
  2912                           ;main_display_teclado_wiegand.c: 66:             }
  2913   0017A0  EFD4  F00B         	goto	i2l2195
  2914   0017A4                     i2l2193:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;main_display_teclado_wiegand.c: 68:                contador250=0;
  2918   0017A4  0E00               	movlw	0
  2919   0017A6  6FFA               	movwf	_contador250& (0+255),b
  2920   0017A8                     i2l2195:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;main_display_teclado_wiegand.c: 70:             if (rx_buf==(frecuencia_500[contadorser
      +                          ial-1])){
  2924   0017A8  51FC               	movf	_contadorserial& (0+255),w,b
  2925   0017AA  0FDC               	addlw	low (_frecuencia_500+255)
  2926   0017AC  6ED9               	movwf	fsr2l,c
  2927   0017AE  6ADA               	clrf	fsr2h,c
  2928   0017B0  51DC               	movf	hint@rx_buf& (0+255),w,b
  2929   0017B2  18DE               	xorwf	postinc2,w,c
  2930   0017B4  A4D8               	btfss	status,2,c
  2931   0017B6  EFDF  F00B         	goto	i2u154_41
  2932   0017BA  EFE1  F00B         	goto	i2u154_40
  2933   0017BE                     i2u154_41:
  2934   0017BE  EFE4  F00B         	goto	i2l2199
  2935   0017C2                     i2u154_40:
  2936   0017C2                     
  2937                           ; BSR set to: 0
  2938                           ;main_display_teclado_wiegand.c: 71:                 contador500++;
  2939   0017C2  2BF9               	incf	_contador500& (0+255),f,b
  2940                           
  2941                           ;main_display_teclado_wiegand.c: 72:             }
  2942   0017C4  EFE6  F00B         	goto	i2l2201
  2943   0017C8                     i2l2199:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;main_display_teclado_wiegand.c: 74:                contador500=0;
  2947   0017C8  0E00               	movlw	0
  2948   0017CA  6FF9               	movwf	_contador500& (0+255),b
  2949   0017CC                     i2l2201:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;main_display_teclado_wiegand.c: 76:             if (rx_buf==(frecuencia_preg[contadorse
      +                          rial-1])){
  2953   0017CC  51FC               	movf	_contadorserial& (0+255),w,b
  2954   0017CE  0FEE               	addlw	low (_frecuencia_preg+255)
  2955   0017D0  6ED9               	movwf	fsr2l,c
  2956   0017D2  6ADA               	clrf	fsr2h,c
  2957   0017D4  51DC               	movf	hint@rx_buf& (0+255),w,b
  2958   0017D6  18DE               	xorwf	postinc2,w,c
  2959   0017D8  A4D8               	btfss	status,2,c
  2960   0017DA  EFF1  F00B         	goto	i2u155_41
  2961   0017DE  EFF3  F00B         	goto	i2u155_40
  2962   0017E2                     i2u155_41:
  2963   0017E2  EFF6  F00B         	goto	i2l2205
  2964   0017E6                     i2u155_40:
  2965   0017E6                     
  2966                           ; BSR set to: 0
  2967                           ;main_display_teclado_wiegand.c: 77:                 contadorp++;
  2968   0017E6  2BF8               	incf	_contadorp& (0+255),f,b
  2969                           
  2970                           ;main_display_teclado_wiegand.c: 78:             }
  2971   0017E8  EFF8  F00B         	goto	i2l2207
  2972   0017EC                     i2l2205:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main_display_teclado_wiegand.c: 80:                 contadorp=0;
  2976   0017EC  0E00               	movlw	0
  2977   0017EE  6FF8               	movwf	_contadorp& (0+255),b
  2978   0017F0                     i2l2207:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;main_display_teclado_wiegand.c: 82:             if ( (!(rx_buf==(frecuencia_preg[contad
      +                          orserial-1]))) && (!(rx_buf==(frecuencia_125[contadorserial-1])))&& (!(rx_buf==(frecuenc
      +                          ia_250[contadorserial-1])))&& (!(rx_buf==(frecuencia_500[contadorserial-1])))){
  2982   0017F0  51FC               	movf	_contadorserial& (0+255),w,b
  2983   0017F2  0FEE               	addlw	low (_frecuencia_preg+255)
  2984   0017F4  6ED9               	movwf	fsr2l,c
  2985   0017F6  6ADA               	clrf	fsr2h,c
  2986   0017F8  51DC               	movf	hint@rx_buf& (0+255),w,b
  2987   0017FA  18DE               	xorwf	postinc2,w,c
  2988   0017FC  B4D8               	btfsc	status,2,c
  2989   0017FE  EF03  F00C         	goto	i2u156_41
  2990   001802  EF05  F00C         	goto	i2u156_40
  2991   001806                     i2u156_41:
  2992   001806  EF40  F00C         	goto	i2l2221
  2993   00180A                     i2u156_40:
  2994   00180A                     
  2995                           ; BSR set to: 0
  2996   00180A  51FC               	movf	_contadorserial& (0+255),w,b
  2997   00180C  0FE8               	addlw	low (_frecuencia_125+255)
  2998   00180E  6ED9               	movwf	fsr2l,c
  2999   001810  6ADA               	clrf	fsr2h,c
  3000   001812  51DC               	movf	hint@rx_buf& (0+255),w,b
  3001   001814  18DE               	xorwf	postinc2,w,c
  3002   001816  B4D8               	btfsc	status,2,c
  3003   001818  EF10  F00C         	goto	i2u157_41
  3004   00181C  EF12  F00C         	goto	i2u157_40
  3005   001820                     i2u157_41:
  3006   001820  EF40  F00C         	goto	i2l2221
  3007   001824                     i2u157_40:
  3008   001824                     
  3009                           ; BSR set to: 0
  3010   001824  51FC               	movf	_contadorserial& (0+255),w,b
  3011   001826  0FE2               	addlw	low (_frecuencia_250+255)
  3012   001828  6ED9               	movwf	fsr2l,c
  3013   00182A  6ADA               	clrf	fsr2h,c
  3014   00182C  51DC               	movf	hint@rx_buf& (0+255),w,b
  3015   00182E  18DE               	xorwf	postinc2,w,c
  3016   001830  B4D8               	btfsc	status,2,c
  3017   001832  EF1D  F00C         	goto	i2u158_41
  3018   001836  EF1F  F00C         	goto	i2u158_40
  3019   00183A                     i2u158_41:
  3020   00183A  EF40  F00C         	goto	i2l2221
  3021   00183E                     i2u158_40:
  3022   00183E                     
  3023                           ; BSR set to: 0
  3024   00183E  51FC               	movf	_contadorserial& (0+255),w,b
  3025   001840  0FDC               	addlw	low (_frecuencia_500+255)
  3026   001842  6ED9               	movwf	fsr2l,c
  3027   001844  6ADA               	clrf	fsr2h,c
  3028   001846  51DC               	movf	hint@rx_buf& (0+255),w,b
  3029   001848  18DE               	xorwf	postinc2,w,c
  3030   00184A  B4D8               	btfsc	status,2,c
  3031   00184C  EF2A  F00C         	goto	i2u159_41
  3032   001850  EF2C  F00C         	goto	i2u159_40
  3033   001854                     i2u159_41:
  3034   001854  EF40  F00C         	goto	i2l2221
  3035   001858                     i2u159_40:
  3036   001858                     
  3037                           ; BSR set to: 0
  3038                           ;main_display_teclado_wiegand.c: 83:                 contadorserial=0;
  3039   001858  0E00               	movlw	0
  3040   00185A  6FFC               	movwf	_contadorserial& (0+255),b
  3041                           
  3042                           ;main_display_teclado_wiegand.c: 84:                 contador125=0;
  3043   00185C  0E00               	movlw	0
  3044   00185E  6FFB               	movwf	_contador125& (0+255),b
  3045                           
  3046                           ;main_display_teclado_wiegand.c: 85:                 contador250=0;
  3047   001860  0E00               	movlw	0
  3048   001862  6FFA               	movwf	_contador250& (0+255),b
  3049                           
  3050                           ;main_display_teclado_wiegand.c: 86:                 contador500=0;
  3051   001864  0E00               	movlw	0
  3052   001866  6FF9               	movwf	_contador500& (0+255),b
  3053                           
  3054                           ;main_display_teclado_wiegand.c: 87:                 contadorp=0;
  3055   001868  0E00               	movlw	0
  3056   00186A  6FF8               	movwf	_contadorp& (0+255),b
  3057   00186C                     
  3058                           ; BSR set to: 0
  3059                           ;main_display_teclado_wiegand.c: 88:                 char *error = " Error intente de nu
      +                          evo ";
  3060   00186C  0E9F               	movlw	low STR_1
  3061   00186E  6FCA               	movwf	hint@error& (0+255),b
  3062   001870  0E12               	movlw	high STR_1
  3063   001872  6FCB               	movwf	(hint@error+1)& (0+255),b
  3064   001874                     
  3065                           ; BSR set to: 0
  3066                           ;main_display_teclado_wiegand.c: 89:                 Envia_cadena (error);
  3067   001874  C0CA  F032         	movff	hint@error,Envia_cadena@texto
  3068   001878  C0CB  F033         	movff	hint@error+1,Envia_cadena@texto+1
  3069   00187C  ECCF  F010         	call	_Envia_cadena	;wreg free
  3070   001880                     i2l2221:
  3071                           
  3072                           ;main_display_teclado_wiegand.c: 91:             if (contadorp==3){
  3073   001880  0E03               	movlw	3
  3074   001882  0100               	movlb	0	; () banked
  3075   001884  19F8               	xorwf	_contadorp& (0+255),w,b
  3076   001886  A4D8               	btfss	status,2,c
  3077   001888  EF48  F00C         	goto	i2u160_41
  3078   00188C  EF4A  F00C         	goto	i2u160_40
  3079   001890                     i2u160_41:
  3080   001890  EF6E  F00C         	goto	i2l2235
  3081   001894                     i2u160_40:
  3082   001894                     
  3083                           ; BSR set to: 0
  3084                           ;main_display_teclado_wiegand.c: 92:                 contadorserial=0;
  3085   001894  0E00               	movlw	0
  3086   001896  6FFC               	movwf	_contadorserial& (0+255),b
  3087                           
  3088                           ;main_display_teclado_wiegand.c: 93:                 contador125=0;
  3089   001898  0E00               	movlw	0
  3090   00189A  6FFB               	movwf	_contador125& (0+255),b
  3091                           
  3092                           ;main_display_teclado_wiegand.c: 94:                 contador250=0;
  3093   00189C  0E00               	movlw	0
  3094   00189E  6FFA               	movwf	_contador250& (0+255),b
  3095                           
  3096                           ;main_display_teclado_wiegand.c: 95:                 contador500=0;
  3097   0018A0  0E00               	movlw	0
  3098   0018A2  6FF9               	movwf	_contador500& (0+255),b
  3099                           
  3100                           ;main_display_teclado_wiegand.c: 96:                 contadorp=0;
  3101   0018A4  0E00               	movlw	0
  3102   0018A6  6FF8               	movwf	_contadorp& (0+255),b
  3103   0018A8                     
  3104                           ; BSR set to: 0
  3105                           ;main_display_teclado_wiegand.c: 97:                 char *textot = " Frecuencia actual 
      +                          ";
  3106   0018A8  0EB8               	movlw	low STR_2
  3107   0018AA  6FCC               	movwf	hint@textot& (0+255),b
  3108   0018AC  0E12               	movlw	high STR_2
  3109   0018AE  6FCD               	movwf	(hint@textot+1)& (0+255),b
  3110   0018B0                     
  3111                           ; BSR set to: 0
  3112                           ;main_display_teclado_wiegand.c: 98:                 char *textott = " Hz ";
  3113   0018B0  0ECC               	movlw	low STR_3
  3114   0018B2  6FCE               	movwf	hint@textott& (0+255),b
  3115   0018B4  0E12               	movlw	high STR_3
  3116   0018B6  6FCF               	movwf	(hint@textott+1)& (0+255),b
  3117   0018B8                     
  3118                           ; BSR set to: 0
  3119                           ;main_display_teclado_wiegand.c: 99:                 Envia_cadena (textot);
  3120   0018B8  C0CC  F032         	movff	hint@textot,Envia_cadena@texto
  3121   0018BC  C0CD  F033         	movff	hint@textot+1,Envia_cadena@texto+1
  3122   0018C0  ECCF  F010         	call	_Envia_cadena	;wreg free
  3123   0018C4                     
  3124                           ;main_display_teclado_wiegand.c: 100:                 Envia_frecuencia (frec_val);
  3125   0018C4  C0F6  F032         	movff	_frec_val,Envia_frecuencia@frec_val
  3126   0018C8  C0F7  F033         	movff	_frec_val+1,Envia_frecuencia@frec_val+1
  3127   0018CC  ECC9  F00F         	call	_Envia_frecuencia	;wreg free
  3128   0018D0                     
  3129                           ;main_display_teclado_wiegand.c: 101:                 Envia_cadena (textott);
  3130   0018D0  C0CE  F032         	movff	hint@textott,Envia_cadena@texto
  3131   0018D4  C0CF  F033         	movff	hint@textott+1,Envia_cadena@texto+1
  3132   0018D8  ECCF  F010         	call	_Envia_cadena	;wreg free
  3133   0018DC                     i2l2235:
  3134                           
  3135                           ;main_display_teclado_wiegand.c: 103:             if (contador125==6){
  3136   0018DC  0E06               	movlw	6
  3137   0018DE  0100               	movlb	0	; () banked
  3138   0018E0  19FB               	xorwf	_contador125& (0+255),w,b
  3139   0018E2  A4D8               	btfss	status,2,c
  3140   0018E4  EF76  F00C         	goto	i2u161_41
  3141   0018E8  EF78  F00C         	goto	i2u161_40
  3142   0018EC                     i2u161_41:
  3143   0018EC  EFBC  F00C         	goto	i2l2257
  3144   0018F0                     i2u161_40:
  3145   0018F0                     
  3146                           ; BSR set to: 0
  3147                           ;main_display_teclado_wiegand.c: 104:                 contadorserial=0;
  3148   0018F0  0E00               	movlw	0
  3149   0018F2  6FFC               	movwf	_contadorserial& (0+255),b
  3150                           
  3151                           ;main_display_teclado_wiegand.c: 105:                 contador125=0;
  3152   0018F4  0E00               	movlw	0
  3153   0018F6  6FFB               	movwf	_contador125& (0+255),b
  3154                           
  3155                           ;main_display_teclado_wiegand.c: 106:                 contador250=0;
  3156   0018F8  0E00               	movlw	0
  3157   0018FA  6FFA               	movwf	_contador250& (0+255),b
  3158                           
  3159                           ;main_display_teclado_wiegand.c: 107:                 contador500=0;
  3160   0018FC  0E00               	movlw	0
  3161   0018FE  6FF9               	movwf	_contador500& (0+255),b
  3162                           
  3163                           ;main_display_teclado_wiegand.c: 108:                 contadorp=0;
  3164   001900  0E00               	movlw	0
  3165   001902  6FF8               	movwf	_contadorp& (0+255),b
  3166                           
  3167                           ;main_display_teclado_wiegand.c: 109:                 frec_val=125;
  3168   001904  0E00               	movlw	0
  3169   001906  6FF7               	movwf	(_frec_val+1)& (0+255),b
  3170   001908  0E7D               	movlw	125
  3171   00190A  6FF6               	movwf	_frec_val& (0+255),b
  3172   00190C                     
  3173                           ; BSR set to: 0
  3174                           ;main_display_teclado_wiegand.c: 110:                 char *textot = "Ok Frecuencia actu
      +                          alizada a ";
  3175   00190C  0E82               	movlw	low STR_4
  3176   00190E  6FD0               	movwf	hint@textot_1219& (0+255),b
  3177   001910  0E12               	movlw	high STR_4
  3178   001912  6FD1               	movwf	(hint@textot_1219+1)& (0+255),b
  3179   001914                     
  3180                           ; BSR set to: 0
  3181                           ;main_display_teclado_wiegand.c: 111:                 char *textott = " Hz ";
  3182   001914  0ECC               	movlw	low STR_3
  3183   001916  6FD2               	movwf	hint@textott_1221& (0+255),b
  3184   001918  0E12               	movlw	high STR_3
  3185   00191A  6FD3               	movwf	(hint@textott_1221+1)& (0+255),b
  3186   00191C                     
  3187                           ; BSR set to: 0
  3188                           ;main_display_teclado_wiegand.c: 112:                 Envia_cadena (textot);
  3189   00191C  C0D0  F032         	movff	hint@textot_1219,Envia_cadena@texto
  3190   001920  C0D1  F033         	movff	hint@textot_1219+1,Envia_cadena@texto+1
  3191   001924  ECCF  F010         	call	_Envia_cadena	;wreg free
  3192   001928                     
  3193                           ;main_display_teclado_wiegand.c: 113:                 Envia_frecuencia (frec_val);
  3194   001928  C0F6  F032         	movff	_frec_val,Envia_frecuencia@frec_val
  3195   00192C  C0F7  F033         	movff	_frec_val+1,Envia_frecuencia@frec_val+1
  3196   001930  ECC9  F00F         	call	_Envia_frecuencia	;wreg free
  3197   001934                     
  3198                           ;main_display_teclado_wiegand.c: 114:                 Envia_cadena (textott);
  3199   001934  C0D2  F032         	movff	hint@textott_1221,Envia_cadena@texto
  3200   001938  C0D3  F033         	movff	hint@textott_1221+1,Envia_cadena@texto+1
  3201   00193C  ECCF  F010         	call	_Envia_cadena	;wreg free
  3202   001940                     
  3203                           ;main_display_teclado_wiegand.c: 115:                 d1=segmentos[0];
  3204   001940  0ED9               	movlw	low _segmentos
  3205   001942  6EF6               	movwf	tblptrl,c
  3206   001944                     	if	1	;There is more than 1 active tblptr byte
  3207   001944  0E11               	movlw	high _segmentos
  3208   001946  6EF7               	movwf	tblptrh,c
  3209   001948                     	endif
  3210   001948                     	if	0	;There are less than 3 active tblptr bytes
  3211   001948                     	endif
  3212   001948  0008               	tblrd		*
  3213   00194A  CFF5 F128          	movff	tablat,_d1
  3214   00194E                     
  3215                           ;main_display_teclado_wiegand.c: 116:                 d2=segmentos[1];
  3216   00194E  0EDA               	movlw	low (_segmentos+1)
  3217   001950  6EF6               	movwf	tblptrl,c
  3218   001952  0E11               	movlw	high (_segmentos+1)
  3219   001954  6EF7               	movwf	tblptrh,c
  3220   001956                     	if	0	;tblptru may be non-zero
  3221   001956                     	endif
  3222   001956                     	if	0	;tblptru may be non-zero
  3223   001956                     	endif
  3224   001956  0008               	tblrd		*
  3225   001958  CFF5 F127          	movff	tablat,_d2
  3226   00195C                     
  3227                           ;main_display_teclado_wiegand.c: 117:                 d3=segmentos[2];
  3228   00195C  0EDB               	movlw	low (_segmentos+2)
  3229   00195E  6EF6               	movwf	tblptrl,c
  3230   001960  0E11               	movlw	high (_segmentos+2)
  3231   001962  6EF7               	movwf	tblptrh,c
  3232   001964                     	if	0	;tblptru may be non-zero
  3233   001964                     	endif
  3234   001964                     	if	0	;tblptru may be non-zero
  3235   001964                     	endif
  3236   001964  0008               	tblrd		*
  3237   001966  CFF5 F126          	movff	tablat,_d3
  3238   00196A                     
  3239                           ;main_display_teclado_wiegand.c: 118:                 d4=segmentos[5];
  3240   00196A  0EDE               	movlw	low (_segmentos+5)
  3241   00196C  6EF6               	movwf	tblptrl,c
  3242   00196E  0E11               	movlw	high (_segmentos+5)
  3243   001970  6EF7               	movwf	tblptrh,c
  3244   001972                     	if	0	;tblptru may be non-zero
  3245   001972                     	endif
  3246   001972                     	if	0	;tblptru may be non-zero
  3247   001972                     	endif
  3248   001972  0008               	tblrd		*
  3249   001974  CFF5 F125          	movff	tablat,_d4
  3250   001978                     i2l2257:
  3251                           
  3252                           ;main_display_teclado_wiegand.c: 120:             if (contador250==6){
  3253   001978  0E06               	movlw	6
  3254   00197A  0100               	movlb	0	; () banked
  3255   00197C  19FA               	xorwf	_contador250& (0+255),w,b
  3256   00197E  A4D8               	btfss	status,2,c
  3257   001980  EFC4  F00C         	goto	i2u162_41
  3258   001984  EFC6  F00C         	goto	i2u162_40
  3259   001988                     i2u162_41:
  3260   001988  EF0A  F00D         	goto	i2l2279
  3261   00198C                     i2u162_40:
  3262   00198C                     
  3263                           ; BSR set to: 0
  3264                           ;main_display_teclado_wiegand.c: 121:                 contadorserial=0;
  3265   00198C  0E00               	movlw	0
  3266   00198E  6FFC               	movwf	_contadorserial& (0+255),b
  3267                           
  3268                           ;main_display_teclado_wiegand.c: 122:                 contador125=0;
  3269   001990  0E00               	movlw	0
  3270   001992  6FFB               	movwf	_contador125& (0+255),b
  3271                           
  3272                           ;main_display_teclado_wiegand.c: 123:                 contador250=0;
  3273   001994  0E00               	movlw	0
  3274   001996  6FFA               	movwf	_contador250& (0+255),b
  3275                           
  3276                           ;main_display_teclado_wiegand.c: 124:                 contador500=0;
  3277   001998  0E00               	movlw	0
  3278   00199A  6FF9               	movwf	_contador500& (0+255),b
  3279                           
  3280                           ;main_display_teclado_wiegand.c: 125:                 contadorp=0;
  3281   00199C  0E00               	movlw	0
  3282   00199E  6FF8               	movwf	_contadorp& (0+255),b
  3283                           
  3284                           ;main_display_teclado_wiegand.c: 126:                 frec_val=250;
  3285   0019A0  0E00               	movlw	0
  3286   0019A2  6FF7               	movwf	(_frec_val+1)& (0+255),b
  3287   0019A4  0EFA               	movlw	250
  3288   0019A6  6FF6               	movwf	_frec_val& (0+255),b
  3289   0019A8                     
  3290                           ; BSR set to: 0
  3291                           ;main_display_teclado_wiegand.c: 127:                 char *textot = "Ok Frecuencia actu
      +                          alizada a ";
  3292   0019A8  0E82               	movlw	low STR_4
  3293   0019AA  6FD4               	movwf	hint@textot_1223& (0+255),b
  3294   0019AC  0E12               	movlw	high STR_4
  3295   0019AE  6FD5               	movwf	(hint@textot_1223+1)& (0+255),b
  3296   0019B0                     
  3297                           ; BSR set to: 0
  3298                           ;main_display_teclado_wiegand.c: 128:                 char *textott = " Hz ";
  3299   0019B0  0ECC               	movlw	low STR_3
  3300   0019B2  6FD6               	movwf	hint@textott_1225& (0+255),b
  3301   0019B4  0E12               	movlw	high STR_3
  3302   0019B6  6FD7               	movwf	(hint@textott_1225+1)& (0+255),b
  3303   0019B8                     
  3304                           ; BSR set to: 0
  3305                           ;main_display_teclado_wiegand.c: 129:                 Envia_cadena (textot);
  3306   0019B8  C0D4  F032         	movff	hint@textot_1223,Envia_cadena@texto
  3307   0019BC  C0D5  F033         	movff	hint@textot_1223+1,Envia_cadena@texto+1
  3308   0019C0  ECCF  F010         	call	_Envia_cadena	;wreg free
  3309   0019C4                     
  3310                           ;main_display_teclado_wiegand.c: 130:                 Envia_frecuencia (frec_val);
  3311   0019C4  C0F6  F032         	movff	_frec_val,Envia_frecuencia@frec_val
  3312   0019C8  C0F7  F033         	movff	_frec_val+1,Envia_frecuencia@frec_val+1
  3313   0019CC  ECC9  F00F         	call	_Envia_frecuencia	;wreg free
  3314   0019D0                     
  3315                           ;main_display_teclado_wiegand.c: 131:                 Envia_cadena (textott);
  3316   0019D0  C0D6  F032         	movff	hint@textott_1225,Envia_cadena@texto
  3317   0019D4  C0D7  F033         	movff	hint@textott_1225+1,Envia_cadena@texto+1
  3318   0019D8  ECCF  F010         	call	_Envia_cadena	;wreg free
  3319   0019DC                     
  3320                           ;main_display_teclado_wiegand.c: 132:                 d1=segmentos[0];
  3321   0019DC  0ED9               	movlw	low _segmentos
  3322   0019DE  6EF6               	movwf	tblptrl,c
  3323   0019E0                     	if	1	;There is more than 1 active tblptr byte
  3324   0019E0  0E11               	movlw	high _segmentos
  3325   0019E2  6EF7               	movwf	tblptrh,c
  3326   0019E4                     	endif
  3327   0019E4                     	if	0	;There are less than 3 active tblptr bytes
  3328   0019E4                     	endif
  3329   0019E4  0008               	tblrd		*
  3330   0019E6  CFF5 F128          	movff	tablat,_d1
  3331   0019EA                     
  3332                           ;main_display_teclado_wiegand.c: 133:                 d2=segmentos[2];
  3333   0019EA  0EDB               	movlw	low (_segmentos+2)
  3334   0019EC  6EF6               	movwf	tblptrl,c
  3335   0019EE  0E11               	movlw	high (_segmentos+2)
  3336   0019F0  6EF7               	movwf	tblptrh,c
  3337   0019F2                     	if	0	;tblptru may be non-zero
  3338   0019F2                     	endif
  3339   0019F2                     	if	0	;tblptru may be non-zero
  3340   0019F2                     	endif
  3341   0019F2  0008               	tblrd		*
  3342   0019F4  CFF5 F127          	movff	tablat,_d2
  3343   0019F8                     
  3344                           ;main_display_teclado_wiegand.c: 134:                 d3=segmentos[5];
  3345   0019F8  0EDE               	movlw	low (_segmentos+5)
  3346   0019FA  6EF6               	movwf	tblptrl,c
  3347   0019FC  0E11               	movlw	high (_segmentos+5)
  3348   0019FE  6EF7               	movwf	tblptrh,c
  3349   001A00                     	if	0	;tblptru may be non-zero
  3350   001A00                     	endif
  3351   001A00                     	if	0	;tblptru may be non-zero
  3352   001A00                     	endif
  3353   001A00  0008               	tblrd		*
  3354   001A02  CFF5 F126          	movff	tablat,_d3
  3355   001A06                     
  3356                           ;main_display_teclado_wiegand.c: 135:                 d4=segmentos[0];
  3357   001A06  0ED9               	movlw	low _segmentos
  3358   001A08  6EF6               	movwf	tblptrl,c
  3359   001A0A                     	if	1	;There is more than 1 active tblptr byte
  3360   001A0A  0E11               	movlw	high _segmentos
  3361   001A0C  6EF7               	movwf	tblptrh,c
  3362   001A0E                     	endif
  3363   001A0E                     	if	0	;There are less than 3 active tblptr bytes
  3364   001A0E                     	endif
  3365   001A0E  0008               	tblrd		*
  3366   001A10  CFF5 F125          	movff	tablat,_d4
  3367   001A14                     i2l2279:
  3368                           
  3369                           ;main_display_teclado_wiegand.c: 137:             if (contador500==6){
  3370   001A14  0E06               	movlw	6
  3371   001A16  0100               	movlb	0	; () banked
  3372   001A18  19F9               	xorwf	_contador500& (0+255),w,b
  3373   001A1A  A4D8               	btfss	status,2,c
  3374   001A1C  EF12  F00D         	goto	i2u163_41
  3375   001A20  EF14  F00D         	goto	i2u163_40
  3376   001A24                     i2u163_41:
  3377   001A24  EF58  F00D         	goto	i2l2301
  3378   001A28                     i2u163_40:
  3379   001A28                     
  3380                           ; BSR set to: 0
  3381                           ;main_display_teclado_wiegand.c: 138:                 contadorserial=0;
  3382   001A28  0E00               	movlw	0
  3383   001A2A  6FFC               	movwf	_contadorserial& (0+255),b
  3384                           
  3385                           ;main_display_teclado_wiegand.c: 139:                 contador125=0;
  3386   001A2C  0E00               	movlw	0
  3387   001A2E  6FFB               	movwf	_contador125& (0+255),b
  3388                           
  3389                           ;main_display_teclado_wiegand.c: 140:                 contador250=0;
  3390   001A30  0E00               	movlw	0
  3391   001A32  6FFA               	movwf	_contador250& (0+255),b
  3392                           
  3393                           ;main_display_teclado_wiegand.c: 141:                 contador500=0;
  3394   001A34  0E00               	movlw	0
  3395   001A36  6FF9               	movwf	_contador500& (0+255),b
  3396                           
  3397                           ;main_display_teclado_wiegand.c: 142:                 contadorp=0;
  3398   001A38  0E00               	movlw	0
  3399   001A3A  6FF8               	movwf	_contadorp& (0+255),b
  3400                           
  3401                           ;main_display_teclado_wiegand.c: 143:                 frec_val=500;
  3402   001A3C  0E01               	movlw	1
  3403   001A3E  6FF7               	movwf	(_frec_val+1)& (0+255),b
  3404   001A40  0EF4               	movlw	244
  3405   001A42  6FF6               	movwf	_frec_val& (0+255),b
  3406   001A44                     
  3407                           ; BSR set to: 0
  3408                           ;main_display_teclado_wiegand.c: 144:                 char *textot = "Ok Frecuencia actu
      +                          alizada a ";
  3409   001A44  0E82               	movlw	low STR_4
  3410   001A46  6FD8               	movwf	hint@textot_1227& (0+255),b
  3411   001A48  0E12               	movlw	high STR_4
  3412   001A4A  6FD9               	movwf	(hint@textot_1227+1)& (0+255),b
  3413   001A4C                     
  3414                           ; BSR set to: 0
  3415                           ;main_display_teclado_wiegand.c: 145:                 char *textott = " Hz ";
  3416   001A4C  0ECC               	movlw	low STR_3
  3417   001A4E  6FDA               	movwf	hint@textott_1229& (0+255),b
  3418   001A50  0E12               	movlw	high STR_3
  3419   001A52  6FDB               	movwf	(hint@textott_1229+1)& (0+255),b
  3420   001A54                     
  3421                           ; BSR set to: 0
  3422                           ;main_display_teclado_wiegand.c: 146:                 Envia_cadena (textot);
  3423   001A54  C0D8  F032         	movff	hint@textot_1227,Envia_cadena@texto
  3424   001A58  C0D9  F033         	movff	hint@textot_1227+1,Envia_cadena@texto+1
  3425   001A5C  ECCF  F010         	call	_Envia_cadena	;wreg free
  3426   001A60                     
  3427                           ;main_display_teclado_wiegand.c: 147:                 Envia_frecuencia (frec_val);
  3428   001A60  C0F6  F032         	movff	_frec_val,Envia_frecuencia@frec_val
  3429   001A64  C0F7  F033         	movff	_frec_val+1,Envia_frecuencia@frec_val+1
  3430   001A68  ECC9  F00F         	call	_Envia_frecuencia	;wreg free
  3431   001A6C                     
  3432                           ;main_display_teclado_wiegand.c: 148:                 Envia_cadena (textott);
  3433   001A6C  C0DA  F032         	movff	hint@textott_1229,Envia_cadena@texto
  3434   001A70  C0DB  F033         	movff	hint@textott_1229+1,Envia_cadena@texto+1
  3435   001A74  ECCF  F010         	call	_Envia_cadena	;wreg free
  3436   001A78                     
  3437                           ;main_display_teclado_wiegand.c: 149:                 d1=segmentos[0];
  3438   001A78  0ED9               	movlw	low _segmentos
  3439   001A7A  6EF6               	movwf	tblptrl,c
  3440   001A7C                     	if	1	;There is more than 1 active tblptr byte
  3441   001A7C  0E11               	movlw	high _segmentos
  3442   001A7E  6EF7               	movwf	tblptrh,c
  3443   001A80                     	endif
  3444   001A80                     	if	0	;There are less than 3 active tblptr bytes
  3445   001A80                     	endif
  3446   001A80  0008               	tblrd		*
  3447   001A82  CFF5 F128          	movff	tablat,_d1
  3448   001A86                     
  3449                           ;main_display_teclado_wiegand.c: 150:                 d2=segmentos[5];
  3450   001A86  0EDE               	movlw	low (_segmentos+5)
  3451   001A88  6EF6               	movwf	tblptrl,c
  3452   001A8A  0E11               	movlw	high (_segmentos+5)
  3453   001A8C  6EF7               	movwf	tblptrh,c
  3454   001A8E                     	if	0	;tblptru may be non-zero
  3455   001A8E                     	endif
  3456   001A8E                     	if	0	;tblptru may be non-zero
  3457   001A8E                     	endif
  3458   001A8E  0008               	tblrd		*
  3459   001A90  CFF5 F127          	movff	tablat,_d2
  3460   001A94                     
  3461                           ;main_display_teclado_wiegand.c: 151:                 d3=segmentos[0];
  3462   001A94  0ED9               	movlw	low _segmentos
  3463   001A96  6EF6               	movwf	tblptrl,c
  3464   001A98                     	if	1	;There is more than 1 active tblptr byte
  3465   001A98  0E11               	movlw	high _segmentos
  3466   001A9A  6EF7               	movwf	tblptrh,c
  3467   001A9C                     	endif
  3468   001A9C                     	if	0	;There are less than 3 active tblptr bytes
  3469   001A9C                     	endif
  3470   001A9C  0008               	tblrd		*
  3471   001A9E  CFF5 F126          	movff	tablat,_d3
  3472   001AA2                     
  3473                           ;main_display_teclado_wiegand.c: 152:                 d4=segmentos[0];
  3474   001AA2  0ED9               	movlw	low _segmentos
  3475   001AA4  6EF6               	movwf	tblptrl,c
  3476   001AA6                     	if	1	;There is more than 1 active tblptr byte
  3477   001AA6  0E11               	movlw	high _segmentos
  3478   001AA8  6EF7               	movwf	tblptrh,c
  3479   001AAA                     	endif
  3480   001AAA                     	if	0	;There are less than 3 active tblptr bytes
  3481   001AAA                     	endif
  3482   001AAA  0008               	tblrd		*
  3483   001AAC  CFF5 F125          	movff	tablat,_d4
  3484   001AB0                     i2l2301:
  3485                           
  3486                           ;main_display_teclado_wiegand.c: 154:         PIR1bits.RCIF=0;
  3487   001AB0  9A9E               	bcf	158,5,c	;volatile
  3488   001AB2                     i2l193:
  3489   001AB2  C04D  FFF5         	movff	??_hint+8,tablat
  3490   001AB6  C04C  FFF8         	movff	??_hint+7,tblptru
  3491   001ABA  C04B  FFF7         	movff	??_hint+6,tblptrh
  3492   001ABE  C04A  FFF6         	movff	??_hint+5,tblptrl
  3493   001AC2  C049  FFDA         	movff	??_hint+4,fsr2h
  3494   001AC6  C048  FFD9         	movff	??_hint+3,fsr2l
  3495   001ACA  C047  FFE2         	movff	??_hint+2,fsr1h
  3496   001ACE  C046  FFE1         	movff	??_hint+1,fsr1l
  3497   001AD2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3498   001AD4  0011               	retfie		f
  3499   001AD6                     __end_of_hint:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _Envia_frecuencia *****************
  3503 ;; Defined at:
  3504 ;;		line 416 in file "main_display_teclado_wiegand.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  frec_val        2   49[COMRAM] int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  i               2   66[COMRAM] int 
  3509 ;;  buffer         10   52[COMRAM] unsigned char [10]
  3510 ;;  frecuencia1     2   64[COMRAM] int 
  3511 ;;  cant_digitos    2   62[COMRAM] int 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3521 ;;      Params:         2       0       0       0       0       0       0       0       0
  3522 ;;      Locals:        16       0       0       0       0       0       0       0       0
  3523 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3524 ;;      Totals:        19       0       0       0       0       0       0       0       0
  3525 ;;Total ram usage:       19 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 5
  3528 ;; This function calls:
  3529 ;;		___awdiv
  3530 ;;		_sprintf
  3531 ;; This function is called by:
  3532 ;;		_hint
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text7
  3537   001F92                     __ptext7:
  3538                           	callstack 0
  3539   001F92                     _Envia_frecuencia:
  3540                           	callstack 21
  3541   001F92                     
  3542                           ;main_display_teclado_wiegand.c: 417:     int cant_digitos=0;
  3543   001F92  0E00               	movlw	0
  3544   001F94  6E40               	movwf	(Envia_frecuencia@cant_digitos+1)^0,c
  3545   001F96  0E00               	movlw	0
  3546   001F98  6E3F               	movwf	Envia_frecuencia@cant_digitos^0,c
  3547   001F9A                     
  3548                           ;main_display_teclado_wiegand.c: 418:     int frecuencia1=frec_val;
  3549   001F9A  C032  F041         	movff	Envia_frecuencia@frec_val,Envia_frecuencia@frecuencia1
  3550   001F9E  C033  F042         	movff	Envia_frecuencia@frec_val+1,Envia_frecuencia@frecuencia1+1
  3551                           
  3552                           ;main_display_teclado_wiegand.c: 420:     while (frecuencia1 > 0){
  3553   001FA2  EFE3  F00F         	goto	i2l2105
  3554   001FA6                     i2l2101:
  3555                           
  3556                           ;main_display_teclado_wiegand.c: 421:         cant_digitos++;
  3557   001FA6  4A3F               	infsnz	Envia_frecuencia@cant_digitos^0,f,c
  3558   001FA8  2A40               	incf	(Envia_frecuencia@cant_digitos+1)^0,f,c
  3559   001FAA                     
  3560                           ;main_display_teclado_wiegand.c: 422:         frecuencia1/=10 ;
  3561   001FAA  C041  F001         	movff	Envia_frecuencia@frecuencia1,___awdiv@dividend
  3562   001FAE  C042  F002         	movff	Envia_frecuencia@frecuencia1+1,___awdiv@dividend+1
  3563   001FB2  0E00               	movlw	0
  3564   001FB4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3565   001FB6  0E0A               	movlw	10
  3566   001FB8  6E03               	movwf	___awdiv@divisor^0,c
  3567   001FBA  EC0E  F00F         	call	___awdiv	;wreg free
  3568   001FBE  C001  F041         	movff	?___awdiv,Envia_frecuencia@frecuencia1
  3569   001FC2  C002  F042         	movff	?___awdiv+1,Envia_frecuencia@frecuencia1+1
  3570   001FC6                     i2l2105:
  3571                           
  3572                           ;main_display_teclado_wiegand.c: 420:     while (frecuencia1 > 0){
  3573   001FC6  BE42               	btfsc	(Envia_frecuencia@frecuencia1+1)^0,7,c
  3574   001FC8  EFF0  F00F         	goto	i2u139_40
  3575   001FCC  5042               	movf	(Envia_frecuencia@frecuencia1+1)^0,w,c
  3576   001FCE  E106               	bnz	i2u139_41
  3577   001FD0  0441               	decf	Envia_frecuencia@frecuencia1^0,w,c
  3578   001FD2  B0D8               	btfsc	status,0,c
  3579   001FD4  EFEE  F00F         	goto	i2u139_41
  3580   001FD8  EFF0  F00F         	goto	i2u139_40
  3581   001FDC                     i2u139_41:
  3582   001FDC  EFD3  F00F         	goto	i2l2101
  3583   001FE0                     i2u139_40:
  3584   001FE0                     
  3585                           ;main_display_teclado_wiegand.c: 424:     char buffer[10];;main_display_teclado_wiegand.
      +                          c: 425:     sprintf(buffer,"%d",frec_val);
  3586   001FE0  0E35               	movlw	low Envia_frecuencia@buffer
  3587   001FE2  6E20               	movwf	sprintf@s^0,c
  3588   001FE4  0ED1               	movlw	low STR_15
  3589   001FE6  6E21               	movwf	sprintf@fmt^0,c
  3590   001FE8  0E12               	movlw	high STR_15
  3591   001FEA  6E22               	movwf	(sprintf@fmt+1)^0,c
  3592   001FEC  C032  F023         	movff	Envia_frecuencia@frec_val,?_sprintf+3
  3593   001FF0  C033  F024         	movff	Envia_frecuencia@frec_val+1,?_sprintf+4
  3594   001FF4  ECF4  F011         	call	_sprintf	;wreg free
  3595   001FF8                     
  3596                           ;main_display_teclado_wiegand.c: 426:     for (int i=0;i<cant_digitos;i++){
  3597   001FF8  0E00               	movlw	0
  3598   001FFA  6E44               	movwf	(Envia_frecuencia@i+1)^0,c
  3599   001FFC  0E00               	movlw	0
  3600   001FFE  6E43               	movwf	Envia_frecuencia@i^0,c
  3601   002000  EF12  F010         	goto	i2l2117
  3602   002004                     i2l2111:
  3603                           
  3604                           ;main_display_teclado_wiegand.c: 427:         TXREG1=buffer[i];
  3605   002004  5043               	movf	Envia_frecuencia@i^0,w,c
  3606   002006  0F35               	addlw	low Envia_frecuencia@buffer
  3607   002008  6ED9               	movwf	fsr2l,c
  3608   00200A  6ADA               	clrf	fsr2h,c
  3609   00200C  50DF               	movf	indf2,w,c
  3610   00200E  6EAD               	movwf	173,c	;volatile
  3611   002010                     
  3612                           ;main_display_teclado_wiegand.c: 428:         PIR1bits.TXIF=0;
  3613   002010  989E               	bcf	158,4,c	;volatile
  3614   002012                     i2l287:
  3615   002012  A89E               	btfss	158,4,c	;volatile
  3616   002014  EF0E  F010         	goto	i2u140_41
  3617   002018  EF10  F010         	goto	i2u140_40
  3618   00201C                     i2u140_41:
  3619   00201C  EF09  F010         	goto	i2l287
  3620   002020                     i2u140_40:
  3621   002020                     
  3622                           ;main_display_teclado_wiegand.c: 430:     }
  3623   002020  4A43               	infsnz	Envia_frecuencia@i^0,f,c
  3624   002022  2A44               	incf	(Envia_frecuencia@i+1)^0,f,c
  3625   002024                     i2l2117:
  3626   002024  503F               	movf	Envia_frecuencia@cant_digitos^0,w,c
  3627   002026  5C43               	subwf	Envia_frecuencia@i^0,w,c
  3628   002028  5044               	movf	(Envia_frecuencia@i+1)^0,w,c
  3629   00202A  0A80               	xorlw	128
  3630   00202C  6E34               	movwf	??_Envia_frecuencia^0,c
  3631   00202E  5040               	movf	(Envia_frecuencia@cant_digitos+1)^0,w,c
  3632   002030  0A80               	xorlw	128
  3633   002032  5834               	subwfb	??_Envia_frecuencia^0,w,c
  3634   002034  A0D8               	btfss	status,0,c
  3635   002036  EF1F  F010         	goto	i2u141_41
  3636   00203A  EF21  F010         	goto	i2u141_40
  3637   00203E                     i2u141_41:
  3638   00203E  EF02  F010         	goto	i2l2111
  3639   002042                     i2u141_40:
  3640   002042  0012               	return		;funcret
  3641   002044                     __end_of_Envia_frecuencia:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _Envia_cadena *****************
  3645 ;; Defined at:
  3646 ;;		line 405 in file "main_display_teclado_wiegand.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  texto           2   49[COMRAM] PTR const unsigned char 
  3649 ;;		 -> STR_9(5), STR_8(29), STR_7(5), STR_6(29), 
  3650 ;;		 -> STR_5(5), STR_4(29), STR_3(5), STR_2(20), 
  3651 ;;		 -> STR_1(25), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  i               2  102[BANK0 ] int 
  3654 ;;  buffer        100    0[BANK0 ] unsigned char [100]
  3655 ;;  cantidad        2  100[BANK0 ] unsigned int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3665 ;;      Params:         2       0       0       0       0       0       0       0       0
  3666 ;;      Locals:         0     104       0       0       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3668 ;;      Totals:         2     104       0       0       0       0       0       0       0
  3669 ;;Total ram usage:      106 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 5
  3672 ;; This function calls:
  3673 ;;		_sprintf
  3674 ;;		_strlen
  3675 ;; This function is called by:
  3676 ;;		_hint
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text8
  3681   00219E                     __ptext8:
  3682                           	callstack 0
  3683   00219E                     _Envia_cadena:
  3684                           	callstack 21
  3685   00219E                     
  3686                           ;main_display_teclado_wiegand.c: 406:     unsigned int cantidad = strlen(texto);
  3687   00219E  C032  F001         	movff	Envia_cadena@texto,strlen@s
  3688   0021A2  C033  F002         	movff	Envia_cadena@texto+1,strlen@s+1
  3689   0021A6  ECD7  F011         	call	_strlen	;wreg free
  3690   0021AA  C001  F0C4         	movff	?_strlen,Envia_cadena@cantidad
  3691   0021AE  C002  F0C5         	movff	?_strlen+1,Envia_cadena@cantidad+1
  3692   0021B2                     
  3693                           ;main_display_teclado_wiegand.c: 407:     char buffer[100];;main_display_teclado_wiegand
      +                          .c: 408:     sprintf(buffer,"%s",texto);
  3694   0021B2  0E60               	movlw	low Envia_cadena@buffer
  3695   0021B4  6E20               	movwf	sprintf@s^0,c
  3696   0021B6  0ED4               	movlw	low STR_14
  3697   0021B8  6E21               	movwf	sprintf@fmt^0,c
  3698   0021BA  0E12               	movlw	high STR_14
  3699   0021BC  6E22               	movwf	(sprintf@fmt+1)^0,c
  3700   0021BE  C032  F023         	movff	Envia_cadena@texto,?_sprintf+3
  3701   0021C2  C033  F024         	movff	Envia_cadena@texto+1,?_sprintf+4
  3702   0021C6  ECF4  F011         	call	_sprintf	;wreg free
  3703   0021CA                     
  3704                           ;main_display_teclado_wiegand.c: 409:     for (int i=0;i<cantidad;i++){
  3705   0021CA  0E00               	movlw	0
  3706   0021CC  0100               	movlb	0	; () banked
  3707   0021CE  6FC7               	movwf	(Envia_cadena@i+1)& (0+255),b
  3708   0021D0  0E00               	movlw	0
  3709   0021D2  6FC6               	movwf	Envia_cadena@i& (0+255),b
  3710   0021D4  EFFD  F010         	goto	i2l2095
  3711   0021D8                     i2l2089:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main_display_teclado_wiegand.c: 410:         TXREG1=buffer[i];
  3715   0021D8  51C6               	movf	Envia_cadena@i& (0+255),w,b
  3716   0021DA  0F60               	addlw	low Envia_cadena@buffer
  3717   0021DC  6ED9               	movwf	fsr2l,c
  3718   0021DE  6ADA               	clrf	fsr2h,c
  3719   0021E0  50DF               	movf	indf2,w,c
  3720   0021E2  6EAD               	movwf	173,c	;volatile
  3721   0021E4                     
  3722                           ; BSR set to: 0
  3723                           ;main_display_teclado_wiegand.c: 411:         PIR1bits.TXIF=0;
  3724   0021E4  989E               	bcf	158,4,c	;volatile
  3725   0021E6                     i2l275:
  3726   0021E6  A89E               	btfss	158,4,c	;volatile
  3727   0021E8  EFF8  F010         	goto	i2u137_41
  3728   0021EC  EFFA  F010         	goto	i2u137_40
  3729   0021F0                     i2u137_41:
  3730   0021F0  EFF3  F010         	goto	i2l275
  3731   0021F4                     i2u137_40:
  3732   0021F4                     
  3733                           ;main_display_teclado_wiegand.c: 413:     }
  3734   0021F4  0100               	movlb	0	; () banked
  3735   0021F6  4BC6               	infsnz	Envia_cadena@i& (0+255),f,b
  3736   0021F8  2BC7               	incf	(Envia_cadena@i+1)& (0+255),f,b
  3737   0021FA                     i2l2095:
  3738                           
  3739                           ; BSR set to: 0
  3740   0021FA  51C4               	movf	Envia_cadena@cantidad& (0+255),w,b
  3741   0021FC  5DC6               	subwf	Envia_cadena@i& (0+255),w,b
  3742   0021FE  51C5               	movf	(Envia_cadena@cantidad+1)& (0+255),w,b
  3743   002200  59C7               	subwfb	(Envia_cadena@i+1)& (0+255),w,b
  3744   002202  A0D8               	btfss	status,0,c
  3745   002204  EF06  F011         	goto	i2u138_41
  3746   002208  EF08  F011         	goto	i2u138_40
  3747   00220C                     i2u138_41:
  3748   00220C  EFEC  F010         	goto	i2l2089
  3749   002210                     i2u138_40:
  3750   002210                     
  3751                           ; BSR set to: 0
  3752   002210  0012               	return		;funcret
  3753   002212                     __end_of_Envia_cadena:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _strlen *****************
  3757 ;; Defined at:
  3758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3761 ;;		 -> STR_9(5), STR_8(29), STR_7(5), STR_6(29), 
  3762 ;;		 -> STR_5(5), STR_4(29), STR_3(5), STR_2(20), 
  3763 ;;		 -> STR_1(25), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3766 ;;		 -> STR_9(5), STR_8(29), STR_7(5), STR_6(29), 
  3767 ;;		 -> STR_5(5), STR_4(29), STR_3(5), STR_2(20), 
  3768 ;;		 -> STR_1(25), 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    0[COMRAM] unsigned int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         2       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        4 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_Envia_cadena
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text9
  3792   0023AE                     __ptext9:
  3793                           	callstack 0
  3794   0023AE                     _strlen:
  3795                           	callstack 25
  3796   0023AE  C001  F003         	movff	strlen@s,strlen@a
  3797   0023B2  C002  F004         	movff	strlen@s+1,strlen@a+1
  3798   0023B6  EFDF  F011         	goto	i2l1973
  3799   0023BA                     i2l1971:
  3800   0023BA  4A01               	infsnz	strlen@s^0,f,c
  3801   0023BC  2A02               	incf	(strlen@s+1)^0,f,c
  3802   0023BE                     i2l1973:
  3803   0023BE  C001  FFF6         	movff	strlen@s,tblptrl
  3804   0023C2  C002  FFF7         	movff	strlen@s+1,tblptrh
  3805   0023C6                     	if	0	;tblptru may be non-zero
  3806   0023C6                     	endif
  3807   0023C6                     	if	0	;tblptru may be non-zero
  3808   0023C6                     	endif
  3809   0023C6  0008               	tblrd		*
  3810   0023C8  50F5               	movf	tablat,w,c
  3811   0023CA  0900               	iorlw	0
  3812   0023CC  A4D8               	btfss	status,2,c
  3813   0023CE  EFEB  F011         	goto	i2u136_41
  3814   0023D2  EFED  F011         	goto	i2u136_40
  3815   0023D6                     i2u136_41:
  3816   0023D6  EFDD  F011         	goto	i2l1971
  3817   0023DA                     i2u136_40:
  3818   0023DA  5003               	movf	strlen@a^0,w,c
  3819   0023DC  5C01               	subwf	strlen@s^0,w,c
  3820   0023DE  6E01               	movwf	?_strlen^0,c
  3821   0023E0  5004               	movf	(strlen@a+1)^0,w,c
  3822   0023E2  5802               	subwfb	(strlen@s+1)^0,w,c
  3823   0023E4  6E02               	movwf	(?_strlen+1)^0,c
  3824   0023E6  0012               	return		;funcret
  3825   0023E8                     __end_of_strlen:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _sprintf *****************
  3829 ;; Defined at:
  3830 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  s               1   31[COMRAM] PTR unsigned char 
  3833 ;;		 -> Envia_frecuencia@buffer(10), Envia_cadena@buffer(100), 
  3834 ;;  fmt             2   32[COMRAM] PTR const unsigned char 
  3835 ;;		 -> STR_15(3), STR_14(3), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  f              12   37[COMRAM] struct _IO_FILE
  3838 ;;  ret             2    0        int 
  3839 ;;  ap              1   36[COMRAM] PTR void [1]
  3840 ;;		 -> ?_sprintf(2), 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2   31[COMRAM] int 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         5       0       0       0       0       0       0       0       0
  3851 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:       18 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 4
  3857 ;; This function calls:
  3858 ;;		_vfprintf
  3859 ;; This function is called by:
  3860 ;;		_Envia_cadena
  3861 ;;		_Envia_frecuencia
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text10
  3866   0023E8                     __ptext10:
  3867                           	callstack 0
  3868   0023E8                     _sprintf:
  3869                           	callstack 21
  3870   0023E8  0E23               	movlw	low (?_sprintf+3)
  3871   0023EA  6E25               	movwf	sprintf@ap^0,c
  3872   0023EC  C020  F026         	movff	sprintf@s,sprintf@f
  3873   0023F0  0E00               	movlw	0
  3874   0023F2  6E2A               	movwf	(sprintf@f+4)^0,c
  3875   0023F4  0E00               	movlw	0
  3876   0023F6  6E29               	movwf	(sprintf@f+3)^0,c
  3877   0023F8  0E00               	movlw	0
  3878   0023FA  6E31               	movwf	(sprintf@f+11)^0,c
  3879   0023FC  0E00               	movlw	0
  3880   0023FE  6E30               	movwf	(sprintf@f+10)^0,c
  3881   002400  0E26               	movlw	low sprintf@f
  3882   002402  6E1A               	movwf	vfprintf@fp^0,c
  3883   002404  C021  F01B         	movff	sprintf@fmt,vfprintf@fmt
  3884   002408  C022  F01C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3885   00240C  0E25               	movlw	low sprintf@ap
  3886   00240E  6E1D               	movwf	vfprintf@ap^0,c
  3887   002410  EC97  F011         	call	_vfprintf	;wreg free
  3888   002414  5020               	movf	sprintf@s^0,w,c
  3889   002416  2429               	addwf	(sprintf@f+3)^0,w,c
  3890   002418  6ED9               	movwf	fsr2l,c
  3891   00241A  6ADA               	clrf	fsr2h,c
  3892   00241C  6ADF               	clrf	indf2,c
  3893   00241E  0012               	return		;funcret
  3894   002420                     __end_of_sprintf:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _vfprintf *****************
  3898 ;; Defined at:
  3899 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  3902 ;;		 -> sprintf@f(12), 
  3903 ;;  fmt             2   26[COMRAM] PTR const unsigned char 
  3904 ;;		 -> STR_15(3), STR_14(3), 
  3905 ;;  ap              1   28[COMRAM] PTR PTR void 
  3906 ;;		 -> sprintf@ap(1), 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  cfmt            2   29[COMRAM] PTR unsigned char 
  3909 ;;		 -> STR_15(3), STR_14(3), 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  2   25[COMRAM] int 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3919 ;;      Params:         4       0       0       0       0       0       0       0       0
  3920 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3922 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3923 ;;Total ram usage:        6 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; Hardware stack levels required when called: 3
  3926 ;; This function calls:
  3927 ;;		_vfpfcnvrt
  3928 ;; This function is called by:
  3929 ;;		_sprintf
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text11
  3934   00232E                     __ptext11:
  3935                           	callstack 0
  3936   00232E                     _vfprintf:
  3937                           	callstack 21
  3938   00232E                     
  3939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3940   00232E  C01B  F01E         	movff	vfprintf@fmt,vfprintf@cfmt
  3941   002332  C01C  F01F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3944   002336  EFA5  F011         	goto	i2l1963
  3945   00233A                     i2l1961:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3948   00233A  C01A  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  3949   00233E  0E1E               	movlw	low vfprintf@cfmt
  3950   002340  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  3951   002342  C01D  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3952   002346  EC6B  F00D         	call	_vfpfcnvrt	;wreg free
  3953   00234A                     i2l1963:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3956   00234A  C01E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3957   00234E  C01F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3958   002352                     	if	0	;tblptru may be non-zero
  3959   002352                     	endif
  3960   002352                     	if	0	;tblptru may be non-zero
  3961   002352                     	endif
  3962   002352  0008               	tblrd		*
  3963   002354  50F5               	movf	tablat,w,c
  3964   002356  0900               	iorlw	0
  3965   002358  A4D8               	btfss	status,2,c
  3966   00235A  EFB1  F011         	goto	i2u135_41
  3967   00235E  EFB3  F011         	goto	i2u135_40
  3968   002362                     i2u135_41:
  3969   002362  EF9D  F011         	goto	i2l1961
  3970   002366                     i2u135_40:
  3971   002366                     
  3972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3973   002366  0E00               	movlw	0
  3974   002368  6E1B               	movwf	(?_vfprintf+1)^0,c
  3975   00236A  0E00               	movlw	0
  3976   00236C  6E1A               	movwf	?_vfprintf^0,c
  3977   00236E  0012               	return		;funcret
  3978   002370                     __end_of_vfprintf:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _vfpfcnvrt *****************
  3982 ;; Defined at:
  3983 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3986 ;;		 -> sprintf@f(12), 
  3987 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  3988 ;;		 -> vfprintf@cfmt(2), 
  3989 ;;  ap              1   12[COMRAM] PTR PTR void 
  3990 ;;		 -> sprintf@ap(1), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  cp              2   15[COMRAM] PTR unsigned char 
  3993 ;;		 -> ?_sprintf(2), STR_9(5), STR_8(29), STR_7(5), 
  3994 ;;		 -> STR_6(29), STR_5(5), STR_4(29), STR_3(5), 
  3995 ;;		 -> STR_2(20), STR_1(25), 
  3996 ;;  convarg         4   20[COMRAM] struct .
  3997 ;;  cp              2   17[COMRAM] PTR unsigned char 
  3998 ;;		 -> STR_15(3), STR_14(3), 
  3999 ;;  c               1   24[COMRAM] unsigned char 
  4000 ;;  done            1   19[COMRAM] _Bool 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4010 ;;      Params:         3       0       0       0       0       0       0       0       0
  4011 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4013 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:       15 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 2
  4017 ;; This function calls:
  4018 ;;		___awdiv
  4019 ;;		___awmod
  4020 ;;		_abs
  4021 ;;		_fputc
  4022 ;; This function is called by:
  4023 ;;		_vfprintf
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text12
  4028   001AD6                     __ptext12:
  4029                           	callstack 0
  4030   001AD6                     _vfpfcnvrt:
  4031                           	callstack 21
  4032   001AD6                     
  4033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4034   001AD6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4035   001AD8  6ED9               	movwf	fsr2l,c
  4036   001ADA  6ADA               	clrf	fsr2h,c
  4037   001ADC  CFDE FFF6          	movff	postinc2,tblptrl
  4038   001AE0  CFDD FFF7          	movff	postdec2,tblptrh
  4039   001AE4                     	if	0	;tblptru may be non-zero
  4040   001AE4                     	endif
  4041   001AE4                     	if	0	;tblptru may be non-zero
  4042   001AE4                     	endif
  4043   001AE4  0008               	tblrd		*
  4044   001AE6  50F5               	movf	tablat,w,c
  4045   001AE8  0A25               	xorlw	37
  4046   001AEA  A4D8               	btfss	status,2,c
  4047   001AEC  EF7A  F00D         	goto	i2u117_41
  4048   001AF0  EF7C  F00D         	goto	i2u117_40
  4049   001AF4                     i2u117_41:
  4050   001AF4  EFFC  F00E         	goto	i2l1953
  4051   001AF8                     i2u117_40:
  4052   001AF8                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4054   001AF8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4055   001AFA  6ED9               	movwf	fsr2l,c
  4056   001AFC  6ADA               	clrf	fsr2h,c
  4057   001AFE  2ADE               	incf	postinc2,f,c
  4058   001B00  0E00               	movlw	0
  4059   001B02  22DD               	addwfc	postdec2,f,c
  4060   001B04                     
  4061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4062   001B04  0E00               	movlw	0
  4063   001B06  6E4F               	movwf	(_width+1)^0,c
  4064   001B08  0E00               	movlw	0
  4065   001B0A  6E4E               	movwf	_width^0,c
  4066   001B0C  C04E  F058         	movff	_width,_flags
  4067   001B10                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4069   001B10  6850               	setf	_prec^0,c
  4070   001B12  6851               	setf	(_prec+1)^0,c
  4071   001B14                     
  4072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4073   001B14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4074   001B16  6ED9               	movwf	fsr2l,c
  4075   001B18  6ADA               	clrf	fsr2h,c
  4076   001B1A  CFDE F012          	movff	postinc2,vfpfcnvrt@cp
  4077   001B1E  CFDD F013          	movff	postdec2,vfpfcnvrt@cp+1
  4078   001B22                     
  4079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4080   001B22  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4081   001B26  C013  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4082   001B2A                     	if	0	;tblptru may be non-zero
  4083   001B2A                     	endif
  4084   001B2A                     	if	0	;tblptru may be non-zero
  4085   001B2A                     	endif
  4086   001B2A  0008               	tblrd		*
  4087   001B2C  50F5               	movf	tablat,w,c
  4088   001B2E  0A64               	xorlw	100
  4089   001B30  B4D8               	btfsc	status,2,c
  4090   001B32  EF9D  F00D         	goto	i2u118_41
  4091   001B36  EF9F  F00D         	goto	i2u118_40
  4092   001B3A                     i2u118_41:
  4093   001B3A  EFAD  F00D         	goto	i2l1895
  4094   001B3E                     i2u118_40:
  4095   001B3E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4096   001B42  C013  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4097   001B46                     	if	0	;tblptru may be non-zero
  4098   001B46                     	endif
  4099   001B46                     	if	0	;tblptru may be non-zero
  4100   001B46                     	endif
  4101   001B46  0008               	tblrd		*
  4102   001B48  50F5               	movf	tablat,w,c
  4103   001B4A  0A69               	xorlw	105
  4104   001B4C  A4D8               	btfss	status,2,c
  4105   001B4E  EFAB  F00D         	goto	i2u119_41
  4106   001B52  EFAD  F00D         	goto	i2u119_40
  4107   001B56                     i2u119_41:
  4108   001B56  EF41  F00E         	goto	i2l1921
  4109   001B5A                     i2u119_40:
  4110   001B5A                     i2l1895:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4113   001B5A  500D               	movf	vfpfcnvrt@ap^0,w,c
  4114   001B5C  6ED9               	movwf	fsr2l,c
  4115   001B5E  6ADA               	clrf	fsr2h,c
  4116   001B60  0E02               	movlw	2
  4117   001B62  26DF               	addwf	indf2,f,c
  4118   001B64  5CDF               	subwf	indf2,w,c
  4119   001B66  6ED9               	movwf	fsr2l,c
  4120   001B68  6ADA               	clrf	fsr2h,c
  4121   001B6A  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  4122   001B6E  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  4123   001B72                     
  4124                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4125   001B72  0E01               	movlw	1
  4126   001B74  2412               	addwf	vfpfcnvrt@cp^0,w,c
  4127   001B76  6E0E               	movwf	??_vfpfcnvrt^0,c
  4128   001B78  0E00               	movlw	0
  4129   001B7A  2013               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4130   001B7C  6E0F               	movwf	(??_vfpfcnvrt+1)^0,c
  4131   001B7E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4132   001B80  6ED9               	movwf	fsr2l,c
  4133   001B82  6ADA               	clrf	fsr2h,c
  4134   001B84  C00E  FFDE         	movff	??_vfpfcnvrt,postinc2
  4135   001B88  C00F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4136   001B8C                     
  4137                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4138   001B8C  0E20               	movlw	32
  4139   001B8E  6E19               	movwf	vfpfcnvrt@c^0,c
  4140                           
  4141                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4142   001B90  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4143   001B92  EFCD  F00D         	goto	i2u120_41
  4144   001B96  EFD0  F00D         	goto	i2u120_40
  4145   001B9A                     i2u120_41:
  4146   001B9A  0E01               	movlw	1
  4147   001B9C  EFD1  F00D         	goto	i2u121_40
  4148   001BA0                     i2u120_40:
  4149   001BA0  0E00               	movlw	0
  4150   001BA2                     i2u121_40:
  4151   001BA2  6E14               	movwf	vfpfcnvrt@done^0,c
  4152   001BA4                     i2l1901:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4155   001BA4  0619               	decf	vfpfcnvrt@c^0,f,c
  4156   001BA6  0E00               	movlw	low _dbuf
  4157   001BA8  2419               	addwf	vfpfcnvrt@c^0,w,c
  4158   001BAA  6ED9               	movwf	fsr2l,c
  4159   001BAC  6ADA               	clrf	fsr2h,c
  4160   001BAE  0E01               	movlw	high _dbuf
  4161   001BB0  22DA               	addwfc	fsr2h,f,c
  4162   001BB2  C015  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  4163   001BB6  C016  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  4164   001BBA  0E00               	movlw	0
  4165   001BBC  6E04               	movwf	(___awmod@divisor+1)^0,c
  4166   001BBE  0E0A               	movlw	10
  4167   001BC0  6E03               	movwf	___awmod@divisor^0,c
  4168   001BC2  EC22  F010         	call	___awmod	;wreg free
  4169   001BC6  C001  F007         	movff	?___awmod,abs@a
  4170   001BCA  C002  F008         	movff	?___awmod+1,abs@a+1
  4171   001BCE  EC10  F012         	call	_abs	;wreg free
  4172   001BD2  5007               	movf	?_abs^0,w,c
  4173   001BD4  0F30               	addlw	48
  4174   001BD6  6EDF               	movwf	indf2,c
  4175   001BD8                     
  4176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4177   001BD8  C015  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  4178   001BDC  C016  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  4179   001BE0  0E00               	movlw	0
  4180   001BE2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4181   001BE4  0E0A               	movlw	10
  4182   001BE6  6E03               	movwf	___awdiv@divisor^0,c
  4183   001BE8  EC0E  F00F         	call	___awdiv	;wreg free
  4184   001BEC  C001  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  4185   001BF0  C002  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  4186   001BF4                     
  4187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4188   001BF4  5015               	movf	vfpfcnvrt@convarg^0,w,c
  4189   001BF6  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4190   001BF8  B4D8               	btfsc	status,2,c
  4191   001BFA  EF01  F00E         	goto	i2u122_41
  4192   001BFE  EF03  F00E         	goto	i2u122_40
  4193   001C02                     i2u122_41:
  4194   001C02  EF0B  F00E         	goto	i2l1909
  4195   001C06                     i2u122_40:
  4196   001C06  5019               	movf	vfpfcnvrt@c^0,w,c
  4197   001C08  A4D8               	btfss	status,2,c
  4198   001C0A  EF09  F00E         	goto	i2u123_41
  4199   001C0E  EF0B  F00E         	goto	i2u123_40
  4200   001C12                     i2u123_41:
  4201   001C12  EFD2  F00D         	goto	i2l1901
  4202   001C16                     i2u123_40:
  4203   001C16                     i2l1909:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4206   001C16  5019               	movf	vfpfcnvrt@c^0,w,c
  4207   001C18  B4D8               	btfsc	status,2,c
  4208   001C1A  EF11  F00E         	goto	i2u124_41
  4209   001C1E  EF13  F00E         	goto	i2u124_40
  4210   001C22                     i2u124_41:
  4211   001C22  EF36  F00E         	goto	i2l1919
  4212   001C26                     i2u124_40:
  4213   001C26  5014               	movf	vfpfcnvrt@done^0,w,c
  4214   001C28  B4D8               	btfsc	status,2,c
  4215   001C2A  EF19  F00E         	goto	i2u125_41
  4216   001C2E  EF1B  F00E         	goto	i2u125_40
  4217   001C32                     i2u125_41:
  4218   001C32  EF36  F00E         	goto	i2l1919
  4219   001C36                     i2u125_40:
  4220   001C36                     
  4221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4222   001C36  0619               	decf	vfpfcnvrt@c^0,f,c
  4223   001C38  0E00               	movlw	low _dbuf
  4224   001C3A  2419               	addwf	vfpfcnvrt@c^0,w,c
  4225   001C3C  6ED9               	movwf	fsr2l,c
  4226   001C3E  6ADA               	clrf	fsr2h,c
  4227   001C40  0E01               	movlw	high _dbuf
  4228   001C42  22DA               	addwfc	fsr2h,f,c
  4229   001C44  0E2D               	movlw	45
  4230   001C46  6EDF               	movwf	indf2,c
  4231   001C48  EF36  F00E         	goto	i2l1919
  4232   001C4C                     i2l1915:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4235   001C4C  0E00               	movlw	low _dbuf
  4236   001C4E  2419               	addwf	vfpfcnvrt@c^0,w,c
  4237   001C50  6ED9               	movwf	fsr2l,c
  4238   001C52  6ADA               	clrf	fsr2h,c
  4239   001C54  0E01               	movlw	high _dbuf
  4240   001C56  22DA               	addwfc	fsr2h,f,c
  4241   001C58  50DF               	movf	indf2,w,c
  4242   001C5A  6E0E               	movwf	??_vfpfcnvrt^0,c
  4243   001C5C  500E               	movf	??_vfpfcnvrt^0,w,c
  4244   001C5E  6E01               	movwf	fputc@c^0,c
  4245   001C60  6A02               	clrf	(fputc@c+1)^0,c
  4246   001C62  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4247   001C66  EC7A  F010         	call	_fputc	;wreg free
  4248   001C6A  2A19               	incf	vfpfcnvrt@c^0,f,c
  4249   001C6C                     i2l1919:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4252   001C6C  0E20               	movlw	32
  4253   001C6E  1819               	xorwf	vfpfcnvrt@c^0,w,c
  4254   001C70  A4D8               	btfss	status,2,c
  4255   001C72  EF3D  F00E         	goto	i2u126_41
  4256   001C76  EF3F  F00E         	goto	i2u126_40
  4257   001C7A                     i2u126_41:
  4258   001C7A  EF26  F00E         	goto	i2l1915
  4259   001C7E                     i2u126_40:
  4260   001C7E  EF0D  F00F         	goto	i2l1010
  4261   001C82                     i2l1921:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  4264   001C82  0E00               	movlw	0
  4265   001C84  6E14               	movwf	vfpfcnvrt@done^0,c
  4266   001C86                     
  4267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  4268   001C86  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4269   001C88  6ED9               	movwf	fsr2l,c
  4270   001C8A  6ADA               	clrf	fsr2h,c
  4271   001C8C  CFDE FFF6          	movff	postinc2,tblptrl
  4272   001C90  CFDD FFF7          	movff	postdec2,tblptrh
  4273   001C94                     	if	0	;tblptru may be non-zero
  4274   001C94                     	endif
  4275   001C94                     	if	0	;tblptru may be non-zero
  4276   001C94                     	endif
  4277   001C94  0008               	tblrd		*
  4278   001C96  50F5               	movf	tablat,w,c
  4279   001C98  0A73               	xorlw	115
  4280   001C9A  A4D8               	btfss	status,2,c
  4281   001C9C  EF52  F00E         	goto	i2u127_41
  4282   001CA0  EF54  F00E         	goto	i2u127_40
  4283   001CA4                     i2u127_41:
  4284   001CA4  EF5E  F00E         	goto	i2l1929
  4285   001CA8                     i2u127_40:
  4286   001CA8                     
  4287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  4288   001CA8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4289   001CAA  6ED9               	movwf	fsr2l,c
  4290   001CAC  6ADA               	clrf	fsr2h,c
  4291   001CAE  2ADE               	incf	postinc2,f,c
  4292   001CB0  0E00               	movlw	0
  4293   001CB2  22DD               	addwfc	postdec2,f,c
  4294   001CB4                     i2l1927:
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  4297   001CB4  0E01               	movlw	1
  4298   001CB6  6E14               	movwf	vfpfcnvrt@done^0,c
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  4301   001CB8  EFAA  F00E         	goto	i2l1939
  4302   001CBC                     i2l1929:
  4303   001CBC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4304   001CBE  6ED9               	movwf	fsr2l,c
  4305   001CC0  6ADA               	clrf	fsr2h,c
  4306   001CC2  CFDE FFF6          	movff	postinc2,tblptrl
  4307   001CC6  CFDD FFF7          	movff	postdec2,tblptrh
  4308   001CCA                     	if	0	;tblptru may be non-zero
  4309   001CCA                     	endif
  4310   001CCA                     	if	0	;tblptru may be non-zero
  4311   001CCA                     	endif
  4312   001CCA  0008               	tblrd		*
  4313   001CCC  50F5               	movf	tablat,w,c
  4314   001CCE  0A6C               	xorlw	108
  4315   001CD0  A4D8               	btfss	status,2,c
  4316   001CD2  EF6D  F00E         	goto	i2u128_41
  4317   001CD6  EF6F  F00E         	goto	i2u128_40
  4318   001CDA                     i2u128_41:
  4319   001CDA  EFAA  F00E         	goto	i2l1939
  4320   001CDE                     i2u128_40:
  4321   001CDE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4322   001CE0  6ED9               	movwf	fsr2l,c
  4323   001CE2  6ADA               	clrf	fsr2h,c
  4324   001CE4  CFDE F00E          	movff	postinc2,??_vfpfcnvrt
  4325   001CE8  CFDD F00F          	movff	postdec2,??_vfpfcnvrt+1
  4326   001CEC  0E01               	movlw	1
  4327   001CEE  260E               	addwf	??_vfpfcnvrt^0,f,c
  4328   001CF0  0E00               	movlw	0
  4329   001CF2  220F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4330   001CF4  C00E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4331   001CF8  C00F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4332   001CFC                     	if	0	;tblptru may be non-zero
  4333   001CFC                     	endif
  4334   001CFC                     	if	0	;tblptru may be non-zero
  4335   001CFC                     	endif
  4336   001CFC  0008               	tblrd		*
  4337   001CFE  50F5               	movf	tablat,w,c
  4338   001D00  0A6C               	xorlw	108
  4339   001D02  A4D8               	btfss	status,2,c
  4340   001D04  EF86  F00E         	goto	i2u129_41
  4341   001D08  EF88  F00E         	goto	i2u129_40
  4342   001D0C                     i2u129_41:
  4343   001D0C  EFAA  F00E         	goto	i2l1939
  4344   001D10                     i2u129_40:
  4345   001D10  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4346   001D12  6ED9               	movwf	fsr2l,c
  4347   001D14  6ADA               	clrf	fsr2h,c
  4348   001D16  CFDE F00E          	movff	postinc2,??_vfpfcnvrt
  4349   001D1A  CFDD F00F          	movff	postdec2,??_vfpfcnvrt+1
  4350   001D1E  0E02               	movlw	2
  4351   001D20  260E               	addwf	??_vfpfcnvrt^0,f,c
  4352   001D22  0E00               	movlw	0
  4353   001D24  220F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4354   001D26  C00E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4355   001D2A  C00F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4356   001D2E                     	if	0	;tblptru may be non-zero
  4357   001D2E                     	endif
  4358   001D2E                     	if	0	;tblptru may be non-zero
  4359   001D2E                     	endif
  4360   001D2E  0008               	tblrd		*
  4361   001D30  50F5               	movf	tablat,w,c
  4362   001D32  0A73               	xorlw	115
  4363   001D34  A4D8               	btfss	status,2,c
  4364   001D36  EF9F  F00E         	goto	i2u130_41
  4365   001D3A  EFA1  F00E         	goto	i2u130_40
  4366   001D3E                     i2u130_41:
  4367   001D3E  EFAA  F00E         	goto	i2l1939
  4368   001D42                     i2u130_40:
  4369   001D42                     
  4370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  4371   001D42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4372   001D44  6ED9               	movwf	fsr2l,c
  4373   001D46  6ADA               	clrf	fsr2h,c
  4374   001D48  0E03               	movlw	3
  4375   001D4A  26DE               	addwf	postinc2,f,c
  4376   001D4C  0E00               	movlw	0
  4377   001D4E  22DD               	addwfc	postdec2,f,c
  4378   001D50  EF5A  F00E         	goto	i2l1927
  4379   001D54                     i2l1939:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  4382   001D54  5014               	movf	vfpfcnvrt@done^0,w,c
  4383   001D56  B4D8               	btfsc	status,2,c
  4384   001D58  EFB0  F00E         	goto	i2u131_41
  4385   001D5C  EFB2  F00E         	goto	i2u131_40
  4386   001D60                     i2u131_41:
  4387   001D60  EFF4  F00E         	goto	i2l1949
  4388   001D64                     i2u131_40:
  4389   001D64                     
  4390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  4391   001D64  500D               	movf	vfpfcnvrt@ap^0,w,c
  4392   001D66  6ED9               	movwf	fsr2l,c
  4393   001D68  6ADA               	clrf	fsr2h,c
  4394   001D6A  0E02               	movlw	2
  4395   001D6C  26DF               	addwf	indf2,f,c
  4396   001D6E  5CDF               	subwf	indf2,w,c
  4397   001D70  6ED9               	movwf	fsr2l,c
  4398   001D72  6ADA               	clrf	fsr2h,c
  4399   001D74  CFDE F010          	movff	postinc2,vfpfcnvrt@cp_1827
  4400   001D78  CFDE F011          	movff	postinc2,vfpfcnvrt@cp_1827+1
  4401   001D7C  EFDA  F00E         	goto	i2l1947
  4402   001D80                     i2l1943:
  4403                           
  4404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  4405   001D80  C010  FFF6         	movff	vfpfcnvrt@cp_1827,tblptrl
  4406   001D84  C011  FFF7         	movff	vfpfcnvrt@cp_1827+1,tblptrh
  4407   001D88  6AF8               	clrf	tblptru,c
  4408   001D8A  0E07               	movlw	(high __ramtop+-1)
  4409   001D8C  64F7               	cpfsgt	tblptrh,c
  4410   001D8E  D003               	bra	i2u132_47
  4411   001D90  0008               	tblrd		*
  4412   001D92  50F5               	movf	tablat,w,c
  4413   001D94  D005               	bra	i2u132_40
  4414   001D96                     i2u132_47:
  4415   001D96  CFF6 FFE1          	movff	tblptrl,fsr1l
  4416   001D9A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4417   001D9E  50E7               	movf	indf1,w,c
  4418   001DA0                     i2u132_40:
  4419   001DA0  6E0E               	movwf	??_vfpfcnvrt^0,c
  4420   001DA2  500E               	movf	??_vfpfcnvrt^0,w,c
  4421   001DA4  6E01               	movwf	fputc@c^0,c
  4422   001DA6  6A02               	clrf	(fputc@c+1)^0,c
  4423   001DA8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4424   001DAC  EC7A  F010         	call	_fputc	;wreg free
  4425   001DB0                     
  4426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  4427   001DB0  4A10               	infsnz	vfpfcnvrt@cp_1827^0,f,c
  4428   001DB2  2A11               	incf	(vfpfcnvrt@cp_1827+1)^0,f,c
  4429   001DB4                     i2l1947:
  4430   001DB4  C010  FFF6         	movff	vfpfcnvrt@cp_1827,tblptrl
  4431   001DB8  C011  FFF7         	movff	vfpfcnvrt@cp_1827+1,tblptrh
  4432   001DBC  6AF8               	clrf	tblptru,c
  4433   001DBE  0E07               	movlw	(high __ramtop+-1)
  4434   001DC0  64F7               	cpfsgt	tblptrh,c
  4435   001DC2  D003               	bra	i2u133_47
  4436   001DC4  0008               	tblrd		*
  4437   001DC6  50F5               	movf	tablat,w,c
  4438   001DC8  D005               	bra	i2u133_40
  4439   001DCA                     i2u133_47:
  4440   001DCA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4441   001DCE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4442   001DD2  50E7               	movf	indf1,w,c
  4443   001DD4                     i2u133_40:
  4444   001DD4  0900               	iorlw	0
  4445   001DD6  A4D8               	btfss	status,2,c
  4446   001DD8  EFF0  F00E         	goto	i2u134_41
  4447   001DDC  EFF2  F00E         	goto	i2u134_40
  4448   001DE0                     i2u134_41:
  4449   001DE0  EFC0  F00E         	goto	i2l1943
  4450   001DE4                     i2u134_40:
  4451   001DE4  EF0D  F00F         	goto	i2l1010
  4452   001DE8                     i2l1949:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4455   001DE8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4456   001DEA  6ED9               	movwf	fsr2l,c
  4457   001DEC  6ADA               	clrf	fsr2h,c
  4458   001DEE  2ADE               	incf	postinc2,f,c
  4459   001DF0  0E00               	movlw	0
  4460   001DF2  22DD               	addwfc	postdec2,f,c
  4461   001DF4  EF0D  F00F         	goto	i2l1010
  4462   001DF8                     i2l1953:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4465   001DF8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4466   001DFA  6ED9               	movwf	fsr2l,c
  4467   001DFC  6ADA               	clrf	fsr2h,c
  4468   001DFE  CFDE FFF6          	movff	postinc2,tblptrl
  4469   001E02  CFDD FFF7          	movff	postdec2,tblptrh
  4470   001E06                     	if	0	;tblptru may be non-zero
  4471   001E06                     	endif
  4472   001E06                     	if	0	;tblptru may be non-zero
  4473   001E06                     	endif
  4474   001E06  0008               	tblrd		*
  4475   001E08  50F5               	movf	tablat,w,c
  4476   001E0A  6E01               	movwf	fputc@c^0,c
  4477   001E0C  6A02               	clrf	(fputc@c+1)^0,c
  4478   001E0E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4479   001E12  EC7A  F010         	call	_fputc	;wreg free
  4480   001E16  EFF4  F00E         	goto	i2l1949
  4481   001E1A                     i2l1010:
  4482   001E1A  0012               	return		;funcret
  4483   001E1C                     __end_of_vfpfcnvrt:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _fputc *****************
  4487 ;; Defined at:
  4488 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  c               2    0[COMRAM] int 
  4491 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4492 ;;		 -> sprintf@f(12), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2    0[COMRAM] int 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4504 ;;      Params:         3       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4507 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        8 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 1
  4511 ;; This function calls:
  4512 ;;		_putch
  4513 ;; This function is called by:
  4514 ;;		_vfpfcnvrt
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text13
  4519   0020F4                     __ptext13:
  4520                           	callstack 0
  4521   0020F4                     _fputc:
  4522                           	callstack 21
  4523   0020F4  5003               	movf	fputc@fp^0,w,c
  4524   0020F6  B4D8               	btfsc	status,2,c
  4525   0020F8  EF80  F010         	goto	i2u112_41
  4526   0020FC  EF82  F010         	goto	i2u112_40
  4527   002100                     i2u112_41:
  4528   002100  EF8A  F010         	goto	i2l1867
  4529   002104                     i2u112_40:
  4530   002104  5003               	movf	fputc@fp^0,w,c
  4531   002106  A4D8               	btfss	status,2,c
  4532   002108  EF88  F010         	goto	i2u113_41
  4533   00210C  EF8A  F010         	goto	i2u113_40
  4534   002110                     i2u113_41:
  4535   002110  EF8F  F010         	goto	i2l1869
  4536   002114                     i2u113_40:
  4537   002114                     i2l1867:
  4538   002114  5001               	movf	fputc@c^0,w,c
  4539   002116  EC45  F012         	call	_putch
  4540   00211A  EFCE  F010         	goto	i2l1042
  4541   00211E                     i2l1869:
  4542   00211E  5003               	movf	fputc@fp^0,w,c
  4543   002120  6ED9               	movwf	fsr2l,c
  4544   002122  6ADA               	clrf	fsr2h,c
  4545   002124  0E0A               	movlw	10
  4546   002126  26D9               	addwf	fsr2l,f,c
  4547   002128  50DE               	movf	postinc2,w,c
  4548   00212A  10DE               	iorwf	postinc2,w,c
  4549   00212C  B4D8               	btfsc	status,2,c
  4550   00212E  EF9B  F010         	goto	i2u114_41
  4551   002132  EF9D  F010         	goto	i2u114_40
  4552   002136                     i2u114_41:
  4553   002136  EFB6  F010         	goto	i2l1873
  4554   00213A                     i2u114_40:
  4555   00213A  5003               	movf	fputc@fp^0,w,c
  4556   00213C  6ED9               	movwf	fsr2l,c
  4557   00213E  6ADA               	clrf	fsr2h,c
  4558   002140  0E0A               	movlw	10
  4559   002142  26D9               	addwf	fsr2l,f,c
  4560   002144  5003               	movf	fputc@fp^0,w,c
  4561   002146  6EE1               	movwf	fsr1l,c
  4562   002148  6AE2               	clrf	fsr1h,c
  4563   00214A  0E03               	movlw	3
  4564   00214C  26E1               	addwf	fsr1l,f,c
  4565   00214E  50DE               	movf	postinc2,w,c
  4566   002150  5CE6               	subwf	postinc1,w,c
  4567   002152  50E6               	movf	postinc1,w,c
  4568   002154  0A80               	xorlw	128
  4569   002156  6E08               	movwf	(??_fputc+4)^0,c
  4570   002158  50DE               	movf	postinc2,w,c
  4571   00215A  0A80               	xorlw	128
  4572   00215C  5808               	subwfb	(??_fputc+4)^0,w,c
  4573   00215E  B0D8               	btfsc	status,0,c
  4574   002160  EFB4  F010         	goto	i2u115_41
  4575   002164  EFB6  F010         	goto	i2u115_40
  4576   002168                     i2u115_41:
  4577   002168  EFCE  F010         	goto	i2l1042
  4578   00216C                     i2u115_40:
  4579   00216C                     i2l1873:
  4580   00216C  5003               	movf	fputc@fp^0,w,c
  4581   00216E  6ED9               	movwf	fsr2l,c
  4582   002170  6ADA               	clrf	fsr2h,c
  4583   002172  0E03               	movlw	3
  4584   002174  26D9               	addwf	fsr2l,f,c
  4585   002176  50DF               	movf	indf2,w,c
  4586   002178  6E04               	movwf	??_fputc^0,c
  4587   00217A  5003               	movf	fputc@fp^0,w,c
  4588   00217C  6ED9               	movwf	fsr2l,c
  4589   00217E  6ADA               	clrf	fsr2h,c
  4590   002180  50DF               	movf	indf2,w,c
  4591   002182  2404               	addwf	??_fputc^0,w,c
  4592   002184  6ED9               	movwf	fsr2l,c
  4593   002186  6ADA               	clrf	fsr2h,c
  4594   002188  C001  FFDF         	movff	fputc@c,indf2
  4595   00218C  5003               	movf	fputc@fp^0,w,c
  4596   00218E  6ED9               	movwf	fsr2l,c
  4597   002190  6ADA               	clrf	fsr2h,c
  4598   002192  0E03               	movlw	3
  4599   002194  26D9               	addwf	fsr2l,f,c
  4600   002196  2ADE               	incf	postinc2,f,c
  4601   002198  0E00               	movlw	0
  4602   00219A  22DD               	addwfc	postdec2,f,c
  4603   00219C                     i2l1042:
  4604   00219C  0012               	return		;funcret
  4605   00219E                     __end_of_fputc:
  4606                           	callstack 0
  4607                           
  4608 ;; *************** function _putch *****************
  4609 ;; Defined at:
  4610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  c               1    wreg     unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  c               1    0[COMRAM] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_fputc
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text14
  4638   00248A                     __ptext14:
  4639                           	callstack 0
  4640   00248A                     _putch:
  4641                           	callstack 21
  4642   00248A  0012               	return		;funcret
  4643   00248C                     __end_of_putch:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _abs *****************
  4647 ;; Defined at:
  4648 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  a               2    6[COMRAM] int 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    6[COMRAM] int 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4662 ;;      Params:         2       0       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4664 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4665 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:        4 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_vfpfcnvrt
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text15
  4676   002420                     __ptext15:
  4677                           	callstack 0
  4678   002420                     _abs:
  4679                           	callstack 22
  4680   002420  BE08               	btfsc	(abs@a+1)^0,7,c
  4681   002422  EF15  F012         	goto	i2u116_41
  4682   002426  EF17  F012         	goto	i2u116_40
  4683   00242A                     i2u116_41:
  4684   00242A  EF1D  F012         	goto	i2l1027
  4685   00242E                     i2u116_40:
  4686   00242E  C007  F007         	movff	abs@a,?_abs
  4687   002432  C008  F008         	movff	abs@a+1,?_abs+1
  4688   002436  EF29  F012         	goto	i2l1030
  4689   00243A                     i2l1027:
  4690   00243A  C007  F009         	movff	abs@a,??_abs
  4691   00243E  C008  F00A         	movff	abs@a+1,??_abs+1
  4692   002442  1E09               	comf	??_abs^0,f,c
  4693   002444  1E0A               	comf	(??_abs+1)^0,f,c
  4694   002446  4A09               	infsnz	??_abs^0,f,c
  4695   002448  2A0A               	incf	(??_abs+1)^0,f,c
  4696   00244A  C009  F007         	movff	??_abs,?_abs
  4697   00244E  C00A  F008         	movff	??_abs+1,?_abs+1
  4698   002452                     i2l1030:
  4699   002452  0012               	return		;funcret
  4700   002454                     __end_of_abs:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function ___awmod *****************
  4704 ;; Defined at:
  4705 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  dividend        2    0[COMRAM] int 
  4708 ;;  divisor         2    2[COMRAM] int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  sign            1    5[COMRAM] unsigned char 
  4711 ;;  counter         1    4[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2    0[COMRAM] int 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         4       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4724 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:        6 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_vfpfcnvrt
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text16
  4735   002044                     __ptext16:
  4736                           	callstack 0
  4737   002044                     ___awmod:
  4738                           	callstack 22
  4739   002044  0E00               	movlw	0
  4740   002046  6E06               	movwf	___awmod@sign^0,c
  4741   002048  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4742   00204A  EF2B  F010         	goto	i2u106_40
  4743   00204E  EF29  F010         	goto	i2u106_41
  4744   002052                     i2u106_41:
  4745   002052  EF31  F010         	goto	i2l1835
  4746   002056                     i2u106_40:
  4747   002056  6C01               	negf	___awmod@dividend^0,c
  4748   002058  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4749   00205A  B0D8               	btfsc	status,0,c
  4750   00205C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4751   00205E  0E01               	movlw	1
  4752   002060  6E06               	movwf	___awmod@sign^0,c
  4753   002062                     i2l1835:
  4754   002062  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4755   002064  EF38  F010         	goto	i2u107_40
  4756   002068  EF36  F010         	goto	i2u107_41
  4757   00206C                     i2u107_41:
  4758   00206C  EF3C  F010         	goto	i2l1839
  4759   002070                     i2u107_40:
  4760   002070  6C03               	negf	___awmod@divisor^0,c
  4761   002072  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4762   002074  B0D8               	btfsc	status,0,c
  4763   002076  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4764   002078                     i2l1839:
  4765   002078  5003               	movf	___awmod@divisor^0,w,c
  4766   00207A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4767   00207C  B4D8               	btfsc	status,2,c
  4768   00207E  EF43  F010         	goto	i2u108_41
  4769   002082  EF45  F010         	goto	i2u108_40
  4770   002086                     i2u108_41:
  4771   002086  EF69  F010         	goto	i2l1855
  4772   00208A                     i2u108_40:
  4773   00208A  0E01               	movlw	1
  4774   00208C  6E05               	movwf	___awmod@counter^0,c
  4775   00208E  EF4D  F010         	goto	i2l1845
  4776   002092                     i2l1843:
  4777   002092  90D8               	bcf	status,0,c
  4778   002094  3603               	rlcf	___awmod@divisor^0,f,c
  4779   002096  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4780   002098  2A05               	incf	___awmod@counter^0,f,c
  4781   00209A                     i2l1845:
  4782   00209A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4783   00209C  EF52  F010         	goto	i2u109_41
  4784   0020A0  EF54  F010         	goto	i2u109_40
  4785   0020A4                     i2u109_41:
  4786   0020A4  EF49  F010         	goto	i2l1843
  4787   0020A8                     i2u109_40:
  4788   0020A8                     i2l1847:
  4789   0020A8  5003               	movf	___awmod@divisor^0,w,c
  4790   0020AA  5C01               	subwf	___awmod@dividend^0,w,c
  4791   0020AC  5004               	movf	(___awmod@divisor+1)^0,w,c
  4792   0020AE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4793   0020B0  A0D8               	btfss	status,0,c
  4794   0020B2  EF5D  F010         	goto	i2u110_41
  4795   0020B6  EF5F  F010         	goto	i2u110_40
  4796   0020BA                     i2u110_41:
  4797   0020BA  EF63  F010         	goto	i2l1851
  4798   0020BE                     i2u110_40:
  4799   0020BE  5003               	movf	___awmod@divisor^0,w,c
  4800   0020C0  5E01               	subwf	___awmod@dividend^0,f,c
  4801   0020C2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4802   0020C4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4803   0020C6                     i2l1851:
  4804   0020C6  90D8               	bcf	status,0,c
  4805   0020C8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4806   0020CA  3203               	rrcf	___awmod@divisor^0,f,c
  4807   0020CC  2E05               	decfsz	___awmod@counter^0,f,c
  4808   0020CE  EF54  F010         	goto	i2l1847
  4809   0020D2                     i2l1855:
  4810   0020D2  5006               	movf	___awmod@sign^0,w,c
  4811   0020D4  B4D8               	btfsc	status,2,c
  4812   0020D6  EF6F  F010         	goto	i2u111_41
  4813   0020DA  EF71  F010         	goto	i2u111_40
  4814   0020DE                     i2u111_41:
  4815   0020DE  EF75  F010         	goto	i2l1859
  4816   0020E2                     i2u111_40:
  4817   0020E2  6C01               	negf	___awmod@dividend^0,c
  4818   0020E4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4819   0020E6  B0D8               	btfsc	status,0,c
  4820   0020E8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4821   0020EA                     i2l1859:
  4822   0020EA  C001  F001         	movff	___awmod@dividend,?___awmod
  4823   0020EE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4824   0020F2  0012               	return		;funcret
  4825   0020F4                     __end_of___awmod:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function ___awdiv *****************
  4829 ;; Defined at:
  4830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  dividend        2    0[COMRAM] int 
  4833 ;;  divisor         2    2[COMRAM] int 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  quotient        2    6[COMRAM] int 
  4836 ;;  sign            1    5[COMRAM] unsigned char 
  4837 ;;  counter         1    4[COMRAM] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  2    0[COMRAM] int 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4847 ;;      Params:         4       0       0       0       0       0       0       0       0
  4848 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4850 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4851 ;;Total ram usage:        8 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_Envia_frecuencia
  4857 ;;		_vfpfcnvrt
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text17
  4862   001E1C                     __ptext17:
  4863                           	callstack 0
  4864   001E1C                     ___awdiv:
  4865                           	callstack 22
  4866   001E1C  0E00               	movlw	0
  4867   001E1E  6E06               	movwf	___awdiv@sign^0,c
  4868   001E20  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4869   001E22  EF17  F00F         	goto	i2u100_40
  4870   001E26  EF15  F00F         	goto	i2u100_41
  4871   001E2A                     i2u100_41:
  4872   001E2A  EF1D  F00F         	goto	i2l1791
  4873   001E2E                     i2u100_40:
  4874   001E2E  6C03               	negf	___awdiv@divisor^0,c
  4875   001E30  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4876   001E32  B0D8               	btfsc	status,0,c
  4877   001E34  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4878   001E36  0E01               	movlw	1
  4879   001E38  6E06               	movwf	___awdiv@sign^0,c
  4880   001E3A                     i2l1791:
  4881   001E3A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4882   001E3C  EF24  F00F         	goto	i2u101_40
  4883   001E40  EF22  F00F         	goto	i2u101_41
  4884   001E44                     i2u101_41:
  4885   001E44  EF2A  F00F         	goto	i2l1797
  4886   001E48                     i2u101_40:
  4887   001E48  6C01               	negf	___awdiv@dividend^0,c
  4888   001E4A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4889   001E4C  B0D8               	btfsc	status,0,c
  4890   001E4E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4891   001E50  0E01               	movlw	1
  4892   001E52  1A06               	xorwf	___awdiv@sign^0,f,c
  4893   001E54                     i2l1797:
  4894   001E54  0E00               	movlw	0
  4895   001E56  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4896   001E58  0E00               	movlw	0
  4897   001E5A  6E07               	movwf	___awdiv@quotient^0,c
  4898   001E5C  5003               	movf	___awdiv@divisor^0,w,c
  4899   001E5E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4900   001E60  B4D8               	btfsc	status,2,c
  4901   001E62  EF35  F00F         	goto	i2u102_41
  4902   001E66  EF37  F00F         	goto	i2u102_40
  4903   001E6A                     i2u102_41:
  4904   001E6A  EF5F  F00F         	goto	i2l1819
  4905   001E6E                     i2u102_40:
  4906   001E6E  0E01               	movlw	1
  4907   001E70  6E05               	movwf	___awdiv@counter^0,c
  4908   001E72  EF3F  F00F         	goto	i2l1805
  4909   001E76                     i2l1803:
  4910   001E76  90D8               	bcf	status,0,c
  4911   001E78  3603               	rlcf	___awdiv@divisor^0,f,c
  4912   001E7A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4913   001E7C  2A05               	incf	___awdiv@counter^0,f,c
  4914   001E7E                     i2l1805:
  4915   001E7E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4916   001E80  EF44  F00F         	goto	i2u103_41
  4917   001E84  EF46  F00F         	goto	i2u103_40
  4918   001E88                     i2u103_41:
  4919   001E88  EF3B  F00F         	goto	i2l1803
  4920   001E8C                     i2u103_40:
  4921   001E8C                     i2l1807:
  4922   001E8C  90D8               	bcf	status,0,c
  4923   001E8E  3607               	rlcf	___awdiv@quotient^0,f,c
  4924   001E90  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4925   001E92  5003               	movf	___awdiv@divisor^0,w,c
  4926   001E94  5C01               	subwf	___awdiv@dividend^0,w,c
  4927   001E96  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4928   001E98  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4929   001E9A  A0D8               	btfss	status,0,c
  4930   001E9C  EF52  F00F         	goto	i2u104_41
  4931   001EA0  EF54  F00F         	goto	i2u104_40
  4932   001EA4                     i2u104_41:
  4933   001EA4  EF59  F00F         	goto	i2l1815
  4934   001EA8                     i2u104_40:
  4935   001EA8  5003               	movf	___awdiv@divisor^0,w,c
  4936   001EAA  5E01               	subwf	___awdiv@dividend^0,f,c
  4937   001EAC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4938   001EAE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4939   001EB0  8007               	bsf	___awdiv@quotient^0,0,c
  4940   001EB2                     i2l1815:
  4941   001EB2  90D8               	bcf	status,0,c
  4942   001EB4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4943   001EB6  3203               	rrcf	___awdiv@divisor^0,f,c
  4944   001EB8  2E05               	decfsz	___awdiv@counter^0,f,c
  4945   001EBA  EF46  F00F         	goto	i2l1807
  4946   001EBE                     i2l1819:
  4947   001EBE  5006               	movf	___awdiv@sign^0,w,c
  4948   001EC0  B4D8               	btfsc	status,2,c
  4949   001EC2  EF65  F00F         	goto	i2u105_41
  4950   001EC6  EF67  F00F         	goto	i2u105_40
  4951   001ECA                     i2u105_41:
  4952   001ECA  EF6B  F00F         	goto	i2l1823
  4953   001ECE                     i2u105_40:
  4954   001ECE  6C07               	negf	___awdiv@quotient^0,c
  4955   001ED0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4956   001ED2  B0D8               	btfsc	status,0,c
  4957   001ED4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4958   001ED6                     i2l1823:
  4959   001ED6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4960   001EDA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4961   001EDE  0012               	return		;funcret
  4962   001EE0                     __end_of___awdiv:
  4963                           	callstack 0
  4964                           
  4965                           	psect	rparam
  4966   000000                     
  4967                           	psect	temp
  4968   00005F                     btemp:
  4969                           	callstack 0
  4970   00005F                     	ds	1
  4971   000000                     int$flags	set	btemp
  4972   000000                     wtemp8	set	btemp+1
  4973   000000                     ttemp5	set	btemp+1
  4974   000000                     ttemp6	set	btemp+4
  4975   000000                     ttemp7	set	btemp+8
  4976                           tosu	equ	0xFFF
  4977                           tosh	equ	0xFFE
  4978                           tosl	equ	0xFFD
  4979                           stkptr	equ	0xFFC
  4980                           pclatu	equ	0xFFB
  4981                           pclath	equ	0xFFA
  4982                           pcl	equ	0xFF9
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           indf0	equ	0xFEF
  4990                           postinc0	equ	0xFEE
  4991                           postdec0	equ	0xFED
  4992                           preinc0	equ	0xFEC
  4993                           plusw0	equ	0xFEB
  4994                           fsr0h	equ	0xFEA
  4995                           fsr0l	equ	0xFE9
  4996                           wreg	equ	0xFE8
  4997                           indf1	equ	0xFE7
  4998                           postinc1	equ	0xFE6
  4999                           postdec1	equ	0xFE5
  5000                           preinc1	equ	0xFE4
  5001                           plusw1	equ	0xFE3
  5002                           fsr1h	equ	0xFE2
  5003                           fsr1l	equ	0xFE1
  5004                           bsr	equ	0xFE0
  5005                           indf2	equ	0xFDF
  5006                           postinc2	equ	0xFDE
  5007                           postdec2	equ	0xFDD
  5008                           preinc2	equ	0xFDC
  5009                           plusw2	equ	0xFDB
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8

Data Sizes:
    Strings     222
    Constant    32
    Data        53
    BSS         69
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      94
    BANK0           160    125     157
    BANK1           256     21      95
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Envia_cadena@texto	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[25]), STR_2(CODE[20]), STR_3(CODE[5]), STR_4(CODE[29]), 
		 -> STR_5(CODE[5]), STR_6(CODE[29]), STR_7(CODE[5]), STR_8(CODE[29]), 
		 -> STR_9(CODE[5]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    hint@error	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    hint@textot	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[20]), 

    hint@textot_1219	PTR unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), 

    hint@textot_1223	PTR unsigned char  size(2) Largest target is 29
		 -> STR_6(CODE[29]), 

    hint@textot_1227	PTR unsigned char  size(2) Largest target is 29
		 -> STR_8(CODE[29]), 

    hint@textott	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    hint@textott_1221	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    hint@textott_1225	PTR unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[5]), 

    hint@textott_1229	PTR unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[5]), 

    S1745$buffer	PTR unsigned char  size(2) Largest target is 0

    S1745$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_15(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 100
		 -> Envia_cadena@buffer(BANK0[100]), Envia_frecuencia@buffer(COMRAM[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[25]), STR_2(CODE[20]), STR_3(CODE[5]), STR_4(CODE[29]), 
		 -> STR_5(CODE[5]), STR_6(CODE[29]), STR_7(CODE[5]), STR_8(CODE[29]), 
		 -> STR_9(CODE[5]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[25]), STR_2(CODE[20]), STR_3(CODE[5]), STR_4(CODE[29]), 
		 -> STR_5(CODE[5]), STR_6(CODE[29]), STR_7(CODE[5]), STR_8(CODE[29]), 
		 -> STR_9(CODE[5]), 

    tx_232@mens	PTR unsigned char  size(2) Largest target is 35
		 -> STR_10(CODE[35]), STR_11(CODE[35]), STR_12(CODE[35]), STR_13(CODE[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_15(CODE[3]), 

    vfpfcnvrt@cp_1827	PTR unsigned char  size(2) Largest target is 29
		 -> ?_sprintf(COMRAM[2]), STR_1(CODE[25]), STR_2(CODE[20]), STR_3(CODE[5]), 
		 -> STR_4(CODE[29]), STR_5(CODE[5]), STR_6(CODE[29]), STR_7(CODE[5]), 
		 -> STR_8(CODE[29]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_15(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_15(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lint in COMRAM

    None.

Critical Paths under _hint in COMRAM

    _hint->_Envia_frecuencia
    _Envia_frecuencia->_sprintf
    _Envia_cadena->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _lint in BANK0

    None.

Critical Paths under _hint in BANK0

    _hint->_Envia_cadena

Critical Paths under _main in BANK1

    _main->_tx_232

Critical Paths under _lint in BANK1

    _lint->_shift

Critical Paths under _hint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lint in BANK2

    None.

Critical Paths under _hint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lint in BANK3

    None.

Critical Paths under _hint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lint in BANK4

    None.

Critical Paths under _hint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lint in BANK5

    None.

Critical Paths under _hint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lint in BANK6

    None.

Critical Paths under _hint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lint in BANK7

    None.

Critical Paths under _hint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     907
                                             16 BANK1      5     5      0
                             _config
                             _tx_232
 ---------------------------------------------------------------------------------
 (1) _tx_232                                               3     0      3     654
                                             13 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _lint                                                10    10      0     324
                                              3 BANK1     10    10      0
                           _det_fila
                              _shift
 ---------------------------------------------------------------------------------
 (3) _shift                                                3     3      0     116
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) _det_fila                                             1     1      0      27
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _hint                                                32    32      0   10515
                                             68 COMRAM     9     9      0
                                            104 BANK0     21    21      0
                       _Envia_cadena
                   _Envia_frecuencia
 ---------------------------------------------------------------------------------
 (5) _Envia_frecuencia                                    19    17      2    5117
                                             49 COMRAM    19    17      2
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _Envia_cadena                                       106   104      2    5012
                                             49 COMRAM     2     0      2
                                              0 BANK0    104   104      0
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             20    15      5    4000
                                             31 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             6     2      4    3495
                                             25 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           15    12      3    3137
                                             10 COMRAM    15    12      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _tx_232

 _lint (ROOT)
   _det_fila
   _shift

 _hint (ROOT)
   _Envia_cadena
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _strlen
   _Envia_frecuencia
     ___awdiv
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     15      5F       7       37.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      5E       1      100.0%
BITBIGSFRllhlhl     1B      0       0      33        0.0%
BITBIGSFRhlhh       19      0       0      21        0.0%
BITBIGSFRlhlhhh     17      0       0      24        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhlhhl      B      0       0      26        0.0%
BITBIGSFRlll         8      0       0      35        0.0%
BITBIGSFRlhlhhh      7      0       0      25        0.0%
BITBIGSFRllhlhh      5      0       0      31        0.0%
BITBIGSFRllhlhh      5      0       0      32        0.0%
BITBIGSFRllhlhh      4      0       0      29        0.0%
BITBIGSFRllhh        4      0       0      28        0.0%
BITBIGSFRllhlhh      1      0       0      30        0.0%
BITBIGSFRlhh         1      0       0      23        0.0%
BITBIGSFRllhll       1      0       0      34        0.0%
BITBIGSFRlhll        1      0       0      27        0.0%
BITBIGSFRhll         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      36        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 02 18:12:12 2024

                          l63 1F90                            _c1 11F5                            _c2 11F1  
                          _d1 0128                            _c3 11ED                            _d2 0127  
                          _c4 11E9                            _d3 0126                            _d4 0125  
                ___awdiv@sign 0006                            bsr 0FE0                 ?_Envia_cadena 0032  
                         l270 23AC                           l266 2384                           _abs 2420  
        main@contador_digitos 015B                  ___awmod@sign 0006                           wreg 0FE8  
                  _TXSTA1bits 0FAC                          l2001 1EFA                          l2011 1F04  
                        l2003 1EFC                          ?_abs 0007                          l2021 1F16  
                        l2013 1F0A                          l2005 1EFE                          l2031 1F20  
                        l2023 1F18                          l2015 1F0C                          l2007 1F00  
                        l2041 1F36                          l2033 1F2E                          l2025 1F1A  
                        l2017 1F12                          l2009 1F02                          l2051 1F40  
                        l2043 1F38                          l2035 1F30                          l2027 1F1C  
                        l2019 1F14                          l2061 1F62                          l2053 1F42  
                        l2045 1F3A                          l2037 1F32                          l2029 1F1E  
                        l2071 1F70                          l2063 1F64                          l2055 1F44  
                        l2047 1F3C                          l2039 1F34                          l2081 1F8E  
                        l2073 1F72                          l2065 1F66                          l2057 1F5E  
                        l2049 1F3E                          l2401 141E                          l2075 1F74  
                        l2067 1F68                          l2059 1F60                          l2171 239A  
                        l2163 2370                          l2411 144C                          l2403 1422  
                        l2077 1F7E                          l2069 1F6E                          l2165 2374  
                        l2501 16F4                          l2421 1498                          l2413 144E  
                        l2405 1426                          l2079 1F88                          l2167 2382  
                        l2431 14EE                          l2423 14AA                          l2415 1468  
                        l2407 142A                          l2503 1704                          l2169 2392  
                        l2441 1532                          l2433 150A                          l2425 14BC  
                        l2417 146A                          l2409 143C                          l2361 12EC  
                        l2353 12D8                          l2451 157A                          l2435 150E  
                        l2427 14CE                          l2419 1484                          l2371 132E  
                        l2363 1306                          l2355 12DC                          l2461 15CC  
                        l2453 158C                          l2437 1514                          l2429 14DE  
                        l2445 1544                          l2381 1390                          l2373 133E  
                        l2365 130A                          l2357 12DE                          l2463 15D8  
                        l2455 159C                          l2447 1556                          l2471 1608  
                        l2439 152A                          l2391 13D4                          l2383 1392  
                        l2375 1350                          l2367 1310                          l2359 12E8  
                        l2481 1660                          l2473 161A                          l2465 15EE  
                        l2457 15AC                          l2449 1568                          l2393 13E6  
                        l2385 13AC                          l2377 1362                          l2369 1326  
                        l2491 16B8                          l2483 1670                          l2475 162C  
                        l2467 15F6                          l2459 15C8                          l2395 13F8  
                        l2379 1376                          l2387 13B2                          l2493 16C0  
                        l2485 168C                          l2477 163E                          l2397 140A  
                        l2389 13C2                          l2487 1690                          l2479 1650  
                        l2399 141C                          l2489 16A2                          l2497 16D2  
                        l2499 16E4                          l1991 1EE0                          l1993 1EF2  
                        l1995 1EF4                          l1997 1EF6                          l1999 1EF8  
                        STR_1 129F                          STR_2 12B8                          STR_3 12CC  
                        STR_4 1282                          STR_5 12CC                          STR_6 1282  
                        STR_7 12CC                          STR_8 1282                          STR_9 12CC  
                        u2007 1382                          u2017 139E                          u2027 145A  
                        u2037 1476                          u2047 1510                          u2057 15CE  
                        u2067 1698                          u1700 1326                          u1701 1322  
                        u1710 133E                          u1711 133A                          u1480 2392  
                        u1800 1498                          u1720 1350                          u1481 238E  
                        u1801 1494                          u1721 134C                          u1490 23AC  
                        u1810 14AA                          u1730 1362                          u1491 23A8  
                        u1811 14A6                          u1731 135E                          u1900 15EE  
                        u1820 14BC                          u1740 13C2                          u1901 15EA  
                        u1821 14B8                          u1741 13BE                          u1910 1608  
                        u1830 14CE                          u1750 13D4                          u1911 1604  
                        u1831 14CA                          u1751 13D0                          u1920 161A  
                        u1840 152A                          u1760 13E6                          u1921 1616  
                        u1841 1526                          u1761 13E2                          u1930 162C  
                        u1850 1544                          u1770 13F8                          u1931 1628  
                        u1851 1540                          u1771 13F4                          u1940 163E  
                        u1860 1556                          u1780 140A                          u1941 163A  
                        u1861 1552                          u1781 1406                          u1950 1650  
                        u1870 1568                          u1790 141C                          u1951 164C  
                        u1871 1564                          u1791 1418                          u1960 16B8  
                        u1880 157A                          u1961 16B4                          u1881 1576  
                        u1970 16D2                          u1890 158C                          u1971 16CE  
                        u1891 1588                          u1980 16E4                          u1981 16E0  
                        u1997 130C                          abs@a 0007                          _dbuf 0100  
                        _main 12D8                          _hint 1008                          _lint 1018  
                        _prec 0050                          fsr1h 0FE2                          fsr2h 0FDA  
                        indf1 0FE7                          indf2 0FDF                          fsr1l 0FE1  
                        fsr2l 0FD9                          btemp 005F                _contadorserial 00FC  
                        start 11D4                  ___param_bank 0000        Envia_frecuencia@buffer 0035  
                       ??_abs 0009                ??_Envia_cadena 0034  Envia_frecuencia@cant_digitos 003F  
    __end_of_Envia_frecuencia 2044                         ?_main 0001                         ?_hint 0001  
                       ?_lint 0001               __end_of___awdiv 1EE0                         STR_10 11F9  
                       STR_11 121C                         STR_12 123F                         STR_13 1262  
                       STR_14 12D4                         STR_15 12D1               __end_of___awmod 20F4  
             ___awdiv@divisor 0003                         i1l211 10FC                         i1l213 1144  
                       i1l206 106C                         i1l215 11B4                         i1l208 11B2  
                       i1l209 10B4                         i1l250 229E                         i1l251 22D6  
                       i1l260 232A                         i1l252 22B2                         i1l261 232C  
                       i1l254 22DA                         i2l193 1AB2                         i2l275 21E6  
                       i2l291 2042                         i2l525 1EDE                         i2l279 2210  
                       i2l287 2012                         i2l538 20F2                         i2l972 241E  
             ___awdiv@counter 0005                  vfpfcnvrt@fmt 000C                         _TMR0H 0FD7  
                       _TMR0L 0FD6                         _PORTD 0F83                   hint@textott 00CE  
                       _TRISE 0F96                         _flags 0058                         _firma 1006  
                       _p_imp 005A                         _p_par 0059                         _nbits 005D  
                       _fputc 20F4                         _tecla 015E                         _shift 2284  
                       _width 004E                         _putch 248A                         main@i 015C  
                       hint@j 00C8                         tablat 0FF5                         ttemp5 0060  
                       ttemp6 0063                         ttemp7 0067                         status 0FD8  
                       wtemp8 0060               __end_of_sprintf 2420               __initialization 2212  
                __end_of_main 1710                  __end_of_hint 1AD6                  __end_of_lint 11D4  
                      ??_main 0159                        ??_hint 0045                        ??_lint 014C  
               __activetblptr 0002                        ?_fputc 0001              ___awdiv@dividend 0001  
                      ?_shift 0001                        _ANSELA 0F5B                        ?_putch 0001  
                      _ANSELC 0F5D                        _ANSELD 0F5E                        _ANSELE 0F5F  
                      i1l2121 2294                        i1l2131 22BA                        i1l2141 22C6  
                      i1l2133 22BE                        i1l2151 2302                        i1l2143 22DC  
                      i1l2135 22C0                        i1l2127 22AC                        i1l2119 2288  
                      i1l2311 104C                        i1l2153 2306                        i1l2145 22E2  
                      i1l2137 22C2                        i1l2129 22B4                        i1l2321 1082  
                      i1l2313 105E                        i1l2305 1036                        i1l2155 2314  
                      i1l2147 22F0                        i1l2139 22C4                        i1l2331 10DA  
                      i1l2323 1092                        i1l2315 1066                        i1l2307 1036  
                      i1l2157 2318                        i1l2149 22F4                        i1l2341 114C  
                      i1l2333 1104                        i1l2325 10BC                        i1l2317 1074  
                      i1l2309 1044                        i1l2159 2326                        i1l2343 1152  
                      i1l2335 110A                        i1l2327 10C2                        i1l2319 107A  
                      i1l2351 118C                        i1l2345 115A                        i1l2337 1112  
                      i1l2329 10CA                        i2l1010 1E1A                        i1l2347 116A  
                      i1l2339 1122                        i2l1030 2452                        i2l1023 236E  
                      i2l1042 219C                        i2l1027 243A                        i2l1053 248A  
                      i2l2101 1FA6                        i2l2111 2004                        i2l2103 1FAA  
                      i2l2113 2010                        i2l2105 1FC6                        i2l2201 17CC  
                      i2l1059 23E6                        i2l2115 2020                        i2l2107 1FE0  
                      i2l2211 1824                        i2l2203 17E6                        i2l2117 2024  
                      i2l2109 1FF8                        i2l2301 1AB0                        i2l2213 183E  
                      i2l2221 1880                        i2l2205 17EC                        i2l2231 18C4  
                      i2l2223 1894                        i2l2215 1858                        i2l2207 17F0  
                      i2l2241 1914                        i2l2233 18D0                        i2l2225 18A8  
                      i2l2217 186C                        i2l2209 180A                        i2l2091 21E4  
                      i2l2083 219E                        i2l2251 194E                        i2l2243 191C  
                      i2l2227 18B0                        i2l2235 18DC                        i2l2219 1874  
                      i2l2093 21F4                        i2l2085 21B2                        i2l2261 19A8  
                      i2l2253 195C                        i2l2245 1928                        i2l2237 18F0  
                      i2l2229 18B8                        i2l2181 175E                        i2l2173 1730  
                      i2l2095 21FA                        i2l2087 21CA                        i2l2271 19DC  
                      i2l2263 19B0                        i2l2255 196A                        i2l2247 1934  
                      i2l2239 190C                        i2l2191 179E                        i2l2183 1760  
                      i2l2175 173A                        i2l1801 1E6E                        i2l2089 21D8  
                      i2l2097 1F92                        i2l2281 1A28                        i2l2273 19EA  
                      i2l2265 19B8                        i2l2249 1940                        i2l2257 1978  
                      i2l2193 17A4                        i2l2185 177A                        i2l2177 1748  
                      i2l1811 1EA8                        i2l1803 1E76                        i2l2099 1F9A  
                      i2l2291 1A6C                        i2l2283 1A44                        i2l2275 19F8  
                      i2l2267 19C4                        i2l2259 198C                        i2l2195 17A8  
                      i2l2187 1780                        i2l2179 175A                        i2l1821 1ECE  
                      i2l1813 1EB0                        i2l1805 1E7E                        i2l1901 1BA4  
                      i2l2293 1A78                        i2l2285 1A4C                        i2l2277 1A06  
                      i2l2269 19D0                        i2l2197 17C2                        i2l2189 1784  
                      i2l1823 1ED6                        i2l1815 1EB2                        i2l1807 1E8C  
                      i2l1831 2056                        i2l1911 1C26                        i2l1903 1BD8  
                      i2l2295 1A86                        i2l2287 1A54                        i2l2279 1A14  
                      i2l2199 17C8                        i2l1817 1EB8                        i2l1809 1E92  
                      i2l1841 208A                        i2l1833 205E                        i2l1913 1C36  
                      i2l1905 1BF4                        i2l1921 1C82                        i2l2297 1A94  
                      i2l2289 1A60                        i2l1819 1EBE                        i2l1851 20C6  
                      i2l1843 2092                        i2l1835 2062                        i2l1827 2044  
                      i2l1931 1CDE                        i2l1923 1C86                        i2l1915 1C4C  
                      i2l1907 1C06                        i2l2299 1AA2                        i2l1853 20CC  
                      i2l1845 209A                        i2l1837 2070                        i2l1829 2048  
                      i2l1941 1D64                        i2l1933 1D10                        i2l1925 1CA8  
                      i2l1917 1C6A                        i2l1909 1C16                        i2l1791 1E3A  
                      i2l1783 1E1C                        i2l1847 20A8                        i2l1855 20D2  
                      i2l1839 2078                        i2l1871 213A                        i2l1863 20F4  
                      i2l1943 1D80                        i2l1935 1D42                        i2l1927 1CB4  
                      i2l1919 1C6C                        i2l1793 1E48                        i2l1785 1E20  
                      i2l1857 20E2                        i2l1849 20BE                        i2l1873 216C  
                      i2l1865 2104                        i2l1945 1DB0                        i2l1929 1CBC  
                      i2l1953 1DF8                        i2l1881 1AD6                        i2l1961 233A  
                      i2l1795 1E50                        i2l1787 1E2E                        i2l1859 20EA  
                      i2l1867 2114                        i2l1947 1DB4                        i2l1939 1D54  
                      i2l1891 1B22                        i2l1883 1AF8                        i2l1963 234A  
                      i2l1971 23BA                        i2l1797 1E54                        i2l1789 1E36  
                      i2l1877 2420                        i2l1869 211E                        i2l1949 1DE8  
                      i2l1893 1B3E                        i2l1885 1B04                        i2l1965 2366  
                      i2l1981 23F0                        i2l1973 23BE                        i2l1799 1E5C  
                      i2l1879 242E                        i2l1895 1B5A                        i2l1887 1B10  
                      i2l1959 232E                        i2l1983 23F8                        i2l1975 23DA  
                      i2l1897 1B72                        i2l1889 1B14                        i2l1985 2400  
                      i2l1969 23AE                        i2l1899 1B8C                        i2l1987 2414  
                      i2l1979 23E8                        _INTCON 0FF2                        _RCREG1 0FAE  
                      _OSCCON 0FD3                 vfpfcnvrt@done 0014                        _SPBRG1 0FAF  
                      _TXREG1 0FAD              __end_of_det_fila 232E                  vfprintf@cfmt 001E  
               Envia_cadena@i 00C6                     ??___awdiv 0005                     ??___awmod 0005  
                      _config 1EE0                        _nbits0 005C                        _nbits1 005B  
              _frecuencia_125 00E9                _frecuencia_250 00E3                _frecuencia_500 00DD  
                      _tx_232 2370                        clear_0 2258                        clear_1 2264  
                      clear_2 2270              ___awdiv@quotient 0007               ___awmod@divisor 0003  
                      isa$std 0001               ___awmod@counter 0005                        _w_unos 0056  
                      _strlen 23AE                        fputc@c 0001                  __mediumconst 11D8  
                      shift@k 0149                        shift@n 014B                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 2370                     ??_sprintf 0025          __end_of_Envia_cadena 2212  
                  __accesstop 0060       __end_of__initialization 2276                 ___rparam_used 0001  
              __pcstackCOMRAM 0001                  __pidataBANK0 2474                  __pidataBANK1 2454  
               __end_of_firma 1008                 __end_of_fputc 219E                 __end_of_shift 22DC  
               __end_of_putch 248C                    __end_of_c1 11F9                    __end_of_c2 11F5  
                  __end_of_c3 11F1                    __end_of_c4 11ED             Envia_cadena@texto 0032  
    Envia_frecuencia@frec_val 0032                       ??_fputc 0004                       ??_shift 0149  
                     ??_putch 0001                    __pbssBANK0 00F2                    __pbssBANK1 0100  
        Envia_cadena@cantidad 00C4                       ?_config 0001                       ?_tx_232 0156  
           ?_Envia_frecuencia 0032                       ?_strlen 0001            ??_Envia_frecuencia 0034  
                     _OSCCON2 0FD2                     ?_det_fila 0001                       _OSCTUNE 0F9B  
                     _SPBRGH1 0FB0   Envia_frecuencia@frecuencia1 0041                       __Hparam 0000  
                     __Lparam 0000                       ___awdiv 1E1C                       ___awmod 2044  
                   ?_vfprintf 001A                       __pcinit 2212                       __ramtop 0800  
                     __ptext0 12D8                       __ptext1 2370                       __ptext2 1EE0  
                     __ptext4 2284                       __ptext5 22DC                       __ptext7 1F92  
                     __ptext8 219E                       __ptext9 23AE                       _arreglo 0120  
                   _T0CONbits 0FD5              ___awmod@dividend 0001                       _w_ceros 0054  
                  ??_det_fila 0149                       _timeout 005E                       _wig_val 00F2  
                     _sprintf 23E8               _frecuencia_preg 00EF                __pintcode_body 1710  
        end_of_initialization 2276             __end_of_segmentos 11E9                       fputc@fp 0003  
               __Lmediumconst 11D8                       int_func 1710              vfpfcnvrt@cp_1827 0010  
               __p_firma_text 1006             __end_of_vfpfcnvrt 1E1C                     _RCSTAbits 0FAB  
                     postdec1 0FE5                       postdec2 0FDD                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE              vfpfcnvrt@convarg 0015  
                  ??_vfprintf 001E               hint@textot_1223 00D4               hint@textot_1227 00D8  
             hint@textot_1219 00D0                       strlen@a 0003                       strlen@s 0001  
                _Envia_cadena 219E                     _TRISAbits 0F92                     _TRISBbits 0F93  
                   _TRISCbits 0F94                     _TRISDbits 0F95                   vfpfcnvrt@ap 000D  
                 vfpfcnvrt@cp 0012                   vfpfcnvrt@fp 000B                    hint@rx_buf 00DC  
                  hint@textot 00CC                __end_of_config 1F92                __end_of_tx_232 23AE  
              __end_of_strlen 23E8           start_initialization 2212                   __end_of_abs 2454  
          Envia_cadena@buffer 0060                   vfprintf@fmt 001B                      ??_config 0156  
                 __pdataBANK0 00DD                   __pdataBANK1 0129                    tx_232@mens 0156  
                    ??_tx_232 0159                      ??_strlen 0003                   __pbssCOMRAM 004E  
               __pcstackBANK0 0060                 __pcstackBANK1 0149                     __pnvBANK1 015E  
                   __pintcode 1008                 __pmediumconst 11D8                      ?___awdiv 0001  
                    ?___awmod 0001                   __pintcodelo 1018                     _contadorp 00F8  
                    _BAUDCON1 0FB8                      ?_sprintf 0020                      _LATAbits 0F89  
                    _LATBbits 0F8A             Envia_frecuencia@i 0043                      _LATCbits 0F8B  
                    _LATEbits 0F8D                      _IPR1bits 0F9F                      _PIE1bits 0F9D  
                   _segmentos 11D9                      i1u142_20 22AC                      i1u142_21 22A8  
                    i1u143_20 22D6                      i1u143_21 22D2                      i1u144_20 22F0  
                    i1u144_21 22EC                      i1u145_20 2302                      i1u145_21 22FE  
                    i1u146_20 2314                      i1u146_21 2310                      i1u147_20 2326  
                    i1u147_21 2322                      i1u164_20 1044                      i1u164_21 1040  
                    i2u100_40 1E2E                      i2u100_41 1E2A                      i1u165_20 105E  
                    i1u165_21 105A                      i2u101_40 1E48                      i2u101_41 1E44  
                    i1u166_20 1092                      i1u166_21 108E                      i2u102_40 1E6E  
                    i2u110_40 20BE                      i2u102_41 1E6A                      i2u110_41 20BA  
                    i1u167_20 10DA                      i1u167_21 10D6                      i2u103_40 1E8C  
                    i2u111_40 20E2                      i2u103_41 1E88                      i2u111_41 20DE  
                    i1u168_20 1122                      i1u168_21 111E                      i2u104_40 1EA8  
                    i2u112_40 2104                      i2u120_40 1BA0                      i2u104_41 1EA4  
                    i2u112_41 2100                      i2u120_41 1B9A                      i1u169_20 116A  
                    i1u169_21 1166                      i2u105_40 1ECE                      i2u113_40 2114  
                    i2u121_40 1BA2                      i2u105_41 1ECA                      i2u113_41 2110  
                    i2u106_40 2056                      i2u114_40 213A                      i2u130_40 1D42  
                    i2u122_40 1C06                      i2u106_41 2052                      i2u114_41 2136  
                    i2u130_41 1D3E                      i2u122_41 1C02                      i2u107_40 2070  
                    i2u115_40 216C                      i2u131_40 1D64                      i2u123_40 1C16  
                    i2u107_41 206C                      i2u115_41 2168                      i2u131_41 1D60  
                    i2u123_41 1C12                      i2u108_40 208A                      i2u116_40 242E  
                    i2u132_40 1DA0                      i2u124_40 1C26                      i2u140_40 2020  
                    i2u108_41 2086                      i2u116_41 242A                      i2u124_41 1C22  
                    i2u140_41 201C                      i2u132_47 1D96                      i2u109_40 20A8  
                    i2u133_40 1DD4                      i2u125_40 1C36                      i2u117_40 1AF8  
                    i2u141_40 2042                      i2u109_41 20A4                      i2u125_41 1C32  
                    i2u117_41 1AF4                      i2u141_41 203E                      i2u133_47 1DCA  
                    i2u134_40 1DE4                      i2u126_40 1C7E                      i2u118_40 1B3E  
                    i2u150_40 1748                      i2u134_41 1DE0                      i2u126_41 1C7A  
                    i2u118_41 1B3A                      i2u150_41 1744                      i2u127_40 1CA8  
                    i2u119_40 1B5A                      i2u135_40 2366                      i2u151_40 175A  
                    i2u127_41 1CA4                      i2u119_41 1B56                      i2u135_41 2362  
                    i2u151_41 1756                      i2u128_40 1CDE                      i2u136_40 23DA  
                    i2u160_40 1894                      i2u152_40 177A                      i2u128_41 1CDA  
                    i2u136_41 23D6                      i2u160_41 1890                      i2u152_41 1776  
                    i2u129_40 1D10                      i2u137_40 21F4                      i2u161_40 18F0  
                    i2u153_40 179E                      i2u129_41 1D0C                      i2u137_41 21F0  
                    i2u161_41 18EC                      i2u153_41 179A                      i2u138_40 2210  
                    i2u162_40 198C                      i2u154_40 17C2                      i2u138_41 220C  
                    i2u162_41 1988                      i2u154_41 17BE                      i2u139_40 1FE0  
                    i2u163_40 1A28                      i2u155_40 17E6                      i2u139_41 1FDC  
                    i2u163_41 1A24                      i2u155_41 17E2                      i2u156_40 180A  
                    i2u156_41 1806                      i2u157_40 1824                      i2u157_41 1820  
                    i2u158_40 183E                      i2u158_41 183A                      i2u159_40 1858  
                    i2u159_41 1854                      _PIR1bits 0F9E                      _RCONbits 0FD0  
                   _sinetable 0129                     _vfpfcnvrt 1AD6                   _contador125 00FB  
                 _contador250 00FA                   _contador500 00F9                     hint@error 00CA  
                  vfpfcnvrt@c 0019                   _INTCON2bits 0FF1                     copy_data0 2226  
                   copy_data1 2246                      __Hrparam 0000                    vfprintf@ap 001D  
                    __Lrparam 0000                    vfprintf@fp 001A                     lint@pulso 0052  
              tx_232@longitud 0158                    ?_vfpfcnvrt 000B                  det_fila@fila 0149  
                  _ANSELAbits 0F5B                    sprintf@fmt 0021                      _det_fila 22DC  
                    __ptext10 23E8                      __ptext11 232E                      __ptext12 1AD6  
                    __ptext13 20F4                      __ptext14 248A                      __ptext15 2420  
                    __ptext16 2044                      __ptext17 1E1C                      _frec_val 00F6  
                   shift@dato 014A              _Envia_frecuencia 1F92                      isa$xinst 0000  
                    int$flags 005F                      _vfprintf 232E                    _INTCONbits 0FF2  
                    lint@fila 0155                      lint@rota 0124                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 0025                  _VREFCON0bits 0F7D  
                _VREFCON1bits 0F7C                  _VREFCON2bits 0F7B                    _RCSTA1bits 0FAB  
                 ??_vfpfcnvrt 000E                      sprintf@f 0026                      sprintf@s 0020  
            hint@textott_1221 00D2              hint@textott_1225 00D6              hint@textott_1229 00DA  
               _firma_absaddr 1006  
